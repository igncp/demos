{"version":3,"sources":["webpack://demos/./src/demos/collapsible-tree/collapsible-tree.js","webpack://demos/./src/pages/d3js/collapsible-tree.js"],"names":["rootElId","margin","width","document","getElementById","getBoundingClientRect","height","root","i","duration","tree","d3","layout","size","diagonal","svg","projection","d","y","x","select","append","attr","click","children","_children","update","source","nodes","reverse","links","forEach","depth","node","selectAll","data","id","nodeEnter","enter","y0","x0","on","style","text","name","nodeUpdate","transition","nodeExit","exit","remove","link","target","insert","o","json","ROOT_PATH","_error","collapse","demoInfo","pageContext","main","scripts","className"],"mappings":"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","file":"component---src-pages-d-3-js-collapsible-tree-js-c517bb25016e6fd4ae39.js","sourcesContent":["const main = () => {\n  const rootElId = \"chart\"\n  const margin = {\n    bottom: 20,\n    left: 120,\n    right: 120,\n    top: 20,\n  }\n  const width =\n    document.getElementById(rootElId).getBoundingClientRect().width -\n    margin.right -\n    margin.left\n  const height = 800 - margin.top - margin.bottom\n\n  let root = null\n  let i = 0\n\n  const duration = 750\n  const tree = d3.layout.tree().size([height, width])\n\n  const diagonal = d3.svg.diagonal().projection((d) => [d.y, d.x])\n  const svg = d3\n    .select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  const click = function (d) {\n    if (d.children) {\n      d._children = d.children\n      d.children = null\n    } else {\n      d.children = d._children\n      d._children = null\n    }\n\n    update(d)\n  }\n\n  const update = function (source) {\n    const nodes = tree.nodes(root).reverse()\n    const links = tree.links(nodes)\n\n    nodes.forEach((d) => {\n      d.y = d.depth * 180\n    })\n\n    const node = svg.selectAll(\"g.node\").data(nodes, (d) => {\n      if (!d.id) {\n        d.id = ++i\n      }\n\n      return d.id\n    })\n    const nodeEnter = node\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", () => `translate(${source.y0},${source.x0})`)\n      .on(\"click\", click)\n\n    nodeEnter\n      .append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", (d) => {\n        if (d._children) {\n          return \"lightsteelblue\"\n        }\n\n        return \"#fff\"\n      })\n    nodeEnter\n      .append(\"text\")\n      .attr(\"x\", (d) => {\n        if (d.children || d._children) {\n          return -10\n        }\n\n        return 10\n      })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", (d) => {\n        if (d.children || d._children) {\n          return \"end\"\n        }\n\n        return \"start\"\n      })\n      .text((d) => d.name)\n      .style(\"fill-opacity\", 1e-6)\n\n    const nodeUpdate = node\n      .transition()\n      .duration(duration)\n      .attr(\"transform\", (d) => `translate(${d.y},${d.x})`)\n\n    nodeUpdate\n      .select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", (d) => {\n        if (d._children) {\n          return \"lightsteelblue\"\n        }\n\n        return \"#fff\"\n      })\n    nodeUpdate.select(\"text\").style(\"fill-opacity\", 1)\n\n    const nodeExit = node\n      .exit()\n      .transition()\n      .duration(duration)\n      .attr(\"transform\", () => `translate(${source.y},${source.x})`)\n      .remove()\n\n    nodeExit.select(\"circle\").attr(\"r\", 1e-6)\n    nodeExit.select(\"text\").style(\"fill-opacity\", 1e-6)\n\n    const link = svg.selectAll(\"path.link\").data(links, (d) => d.target.id)\n\n    link\n      .enter()\n      .insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", () => {\n        const o = {\n          x: source.x0,\n          y: source.y0,\n        }\n\n        return diagonal({\n          source: o,\n          target: o,\n        })\n      })\n    link.transition().duration(duration).attr(\"d\", diagonal)\n    link\n      .exit()\n      .transition()\n      .duration(duration)\n      .attr(\"d\", () => {\n        const o = {\n          x: source.x,\n          y: source.y,\n        }\n\n        return diagonal({\n          source: o,\n          target: o,\n        })\n      })\n      .remove()\n\n    nodes.forEach((d) => {\n      d.x0 = d.x\n      d.y0 = d.y\n    })\n  }\n\n  d3.json(\n    `${ROOT_PATH}data/d3js/collapsible-tree/data.json`,\n    (_error, data) => {\n      root = data\n      root.x0 = height / 2\n      root.y0 = 0\n\n      const collapse = function (d) {\n        if (d.children) {\n          d._children = d.children\n          d._children.forEach(collapse)\n          d.children = null\n        }\n      }\n\n      root.children.forEach(collapse)\n\n      update(root)\n    }\n  )\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/collapsible-tree/collapsible-tree\"\n\nimport \"@/demos/collapsible-tree/collapsible-tree.styl\"\n\nconst CollapsibleTree = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main} scripts={[\"/vendors/d3/d3.min.js\"]}>\n    <div className=\"collapsible-tree-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default CollapsibleTree\n"],"sourceRoot":""}