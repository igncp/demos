{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/bars/bars.module.css","webpack://demos/./src/demos/bars/bars.ts","webpack://demos/./src/pages/d3js/bars.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","axis","CONTAINER_ID","margin","floor","barWidth","colours","barYFn","barItem","barHeightFn","fetchData","fetch","ROOT_PATH","rawData","json","BarsChart","bars","rootElId","interval","chart","color","render","width","document","getElementById","getBoundingClientRect","colorScale","scaleLinear","domain","extent","range","heatmapColour","length","svg","select","append","attr","setInterval","getIntervalFn","x","y","max","rangeRound","xAxisG","styles","call","axisBottom","style","text","yAxisG","axisLeft","drawRectangles","refresh","redraw","clearInterval","selectAll","data","enter","barIndex","on","unshift","pop","newX","newAxis","transition","duration","barsChart","addItemEl","addEventListener","push","Math","random","setAttribute","pageContext","main","className","id","type"],"mappings":"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","file":"component---src-pages-d-3-js-bars-tsx-234b03288a6e4706337b.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var barsChart = \"bars-module--barsChart--3abBv\";\nexport var axis = \"bars-module--axis--_Qwuv\";","import {\n  Selection,\n  axisBottom,\n  axisLeft,\n  extent,\n  max,\n  range,\n  scaleLinear,\n  select,\n} from \"d3\"\n\nimport * as styles from \"./bars.module.css\"\n\nconst CONTAINER_ID = \"chart\"\n\ntype BarData = number\n\nconst height = 500\nconst margin = { left: 160, top: 100 }\nconst floor = height - margin.top * 2\n\nconst barWidth = 30\nconst barHeight = 7\n\nconst colours = [\"#323247\", \"#7C7CC9\", \"#72B66C\", \"#429742\"]\nconst barYFn = (barItem: BarData) => floor - barHeight * barItem\nconst barHeightFn = (barItem: BarData) => barItem * barHeight\n\nconst fetchData = async (): Promise<BarData[]> => {\n  const rawData = await fetch(`${ROOT_PATH}data/d3js/bars/data.json`)\n\n  return rawData.json()\n}\n\ntype BarsChartOpts = {\n  bars: BarData[]\n  rootElId: string\n}\n\ntype Interval = ReturnType<typeof setInterval>\ntype Chart = Selection<SVGGElement, unknown, HTMLElement, unknown>\ntype ColorFn = (c: BarData) => string\n\nclass BarsChart {\n  private readonly bars: BarData[]\n  private readonly rootElId: string\n  private interval: Interval | null\n  private chart: Chart | null\n  private color: ColorFn | null\n\n  public constructor({ bars, rootElId }: BarsChartOpts) {\n    this.bars = bars\n    this.rootElId = rootElId\n\n    this.interval = null\n    this.chart = null\n    this.color = null\n  }\n\n  public render() {\n    const { bars, rootElId } = this\n    const { width } = (document.getElementById(\n      rootElId\n    ) as HTMLElement).getBoundingClientRect()\n\n    const colorScale = scaleLinear()\n      .domain(extent(bars) as [BarData, BarData])\n      .range([0, 1])\n    const heatmapColour: ColorFn = scaleLinear<string>()\n      .domain(range(0, 1, 1.0 / colours.length))\n      .range(colours)\n\n    const color = (barItem: BarData) => heatmapColour(colorScale(barItem))\n\n    this.color = color as ColorFn\n\n    const svg = select(`#${rootElId}`).append(\"svg\")\n\n    svg\n      .attr(\"height\", height)\n      .attr(\"width\", width)\n      .attr(\"class\", styles.barsChart)\n\n    const chart = svg.append(\"g\")\n\n    this.chart = chart\n\n    chart.attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    this.interval = setInterval(this.getIntervalFn(), 1000)\n\n    const x = scaleLinear()\n      .domain([0.5, bars.length + 0.5])\n      .range([1, barWidth * bars.length])\n\n    const y = scaleLinear()\n      .domain([0, max(bars) as number])\n      .rangeRound([0, -1 * barHeight * (max(bars) as number)])\n\n    const xAxisG = chart.append(\"g\")\n\n    xAxisG\n      .attr(\"class\", `xAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisBottom(x))\n\n    xAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(${(barWidth * bars.length) / 2} ,0)`)\n      .attr(\"class\", \"xAxisLabel\")\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Number\")\n\n    const yAxisG = chart.append(\"g\")\n\n    yAxisG\n      .attr(\"class\", `yAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisLeft(y))\n\n    yAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(-30,${(-1 * (height - 60)) / 2})`)\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\")\n\n    this.drawRectangles()\n  }\n\n  public refresh() {\n    this.drawRectangles()\n    this.redraw()\n  }\n\n  private clearInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  private drawRectangles() {\n    const { bars, chart, color } = this\n\n    ;(chart as Chart)\n      .selectAll(\"rect\")\n      .data(bars)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (...[, barIndex]) => barWidth * barIndex)\n      .attr(\"y\", barYFn)\n      .attr(\"width\", barWidth)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", (barItem) => color!(barItem))\n      .on(\"mouseover\", () => {\n        this.clearInterval()\n      })\n      .on(\"mouseleave\", () => {\n        this.clearInterval()\n        this.interval = setInterval(this.getIntervalFn(), 1000)\n      })\n      .append(\"title\")\n      .text((barItem) => barItem)\n  }\n\n  private getIntervalFn() {\n    return () => {\n      const { bars } = this\n\n      bars.unshift(bars.pop() as BarData)\n\n      this.redraw()\n    }\n  }\n\n  private redraw() {\n    const { bars, chart, color } = this\n\n    if (!chart) {\n      return\n    }\n\n    const newX = scaleLinear()\n      .domain([0.5, bars.length + 0.5])\n      .range([1, barWidth * bars.length])\n\n    const newAxis = axisBottom(newX)\n\n    chart.select<SVGGElement>(\".xAxis\").transition().duration(500).call(newAxis)\n\n    chart\n      .select(\".xAxisLabel\")\n      .transition()\n      .duration(500)\n      .attr(\"transform\", `translate(${(barWidth * bars.length) / 2} ,0)`)\n\n    chart\n      .selectAll(\"rect\")\n      .data(bars)\n      .transition()\n      .duration(500)\n      .attr(\"y\", barYFn)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", color as ColorFn)\n      .select(\"title\")\n      .text((barItem) => barItem)\n  }\n}\n\nconst main = async () => {\n  const bars = await fetchData()\n\n  const barsChart = new BarsChart({\n    bars,\n    rootElId: CONTAINER_ID,\n  })\n\n  barsChart.render()\n\n  const addItemEl = document.getElementById(\"add-item\") as HTMLElement\n\n  addItemEl.addEventListener(\"click\", () => {\n    if (bars.length < 20) {\n      bars.push(Math.floor(Math.random() * (max(bars) as number)) + 1)\n      barsChart.refresh()\n    } else {\n      addItemEl.setAttribute(\"disabled\", \"disabled\")\n    }\n  })\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/bars/bars\"\n\nconst Bars = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form>\n      <button className=\"btn btn-info\" id=\"add-item\" type=\"button\">\n        Add item\n      </button>\n    </form>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Bars\n"],"sourceRoot":""}