{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/chord/chord.module.css","webpack://demos/./src/demos/chord/chord.ts","webpack://demos/./src/pages/d3js/chord.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","chord","group","headingTitle","fetchData","csv","ROOT_PATH","originalCSVItems","fullList","countries","debits","credits","id","country","countryName","name","parsedList","map","originalCSVItem","creditor","debtor","risk","Array","from","length","forEach","sourceIndex","targetIndex","financialItem","addDropShadowFilter","charts","deviation","slope","filter","append","attr","colours","margin","height","renderChart","financialData","rootElId","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","r1","Math","min","r0","formatCurrency","format","arc","arcD3","innerRadius","outerRadius","svg","select","selectAll","data","enter","style","leftChart","chartIndex","rightChart","setLabel","chart","label","text","colorDomain","scaleLinear","domain","extent","range","heatmapColour","fill","chordItemIndex","each","dataMatrix","svgComp","numberMatrix","row","cell","amount","chordData","sortGroups","descending","sortSubgroups","sortChords","ribbonLayout","ribbon","radius","styles","chordItem","target","index","originalColor","rgb","darker","formatHex","sourceData","source","targetData","g","groups","chordGroup","pageContext","main"],"mappings":"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","file":"component---src-pages-d-3-js-chord-tsx-0f1839a702880cea15d1.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var chordChart = \"chord-module--chordChart--lzAYO\";\nexport var chord = \"chord-module--chord--1Zjd0\";\nexport var chartTitle = \"chord-module--chartTitle--33urD\";\nexport var group = \"chord-module--group--309FH\";\nexport var headingTitle = \"chord-module--headingTitle--A2lxW\";","import {\n  BaseType,\n  Selection,\n  arc as arcD3,\n  chord,\n  csv,\n  descending,\n  extent,\n  format,\n  range,\n  rgb,\n  ribbon,\n  scaleLinear,\n  select,\n} from \"d3\"\n\nimport * as styles from \"./chord.module.css\"\n\ntype CSVDataItem = {\n  amount: string\n  creditor: string\n  debtor: string\n  risk: string\n}\n\ntype Country = {\n  id: number\n  name: string\n}\n\ntype Creditor = Country\ntype Debtor = Country & { risk: string }\n\ntype CSVParsedItem = {\n  amount: string\n  creditor: Creditor\n  debtor: Debtor\n  risk: string\n}\n\ntype Debits = Array<Array<CSVParsedItem | null>>\ntype Credits = Array<Array<CSVParsedItem | null>>\n\ntype FinancialData = {\n  credits: Credits\n  debits: Debits\n  fullList: Country[]\n}\n\nconst fetchData = async () => {\n  const originalCSVItems = (await csv(\n    `${ROOT_PATH}data/d3js/chord/data.csv`\n  )) as CSVDataItem[]\n\n  const fullList: Country[] = []\n  const countries: Record<string, Country> = {}\n  const debits: Debits = []\n  const credits: Credits = []\n\n  let id = 0\n\n  const country = (countryName: string): Country => {\n    if (!(countryName in countries)) {\n      countries[countryName] = {\n        id,\n        name: countryName,\n      }\n\n      id += 1\n    }\n\n    return countries[countryName]\n  }\n\n  const parsedList: CSVParsedItem[] = originalCSVItems.map(\n    (originalCSVItem) => ({\n      ...originalCSVItem,\n      creditor: country(originalCSVItem.creditor),\n      debtor: {\n        ...country(originalCSVItem.debtor),\n        risk: originalCSVItem.risk,\n      },\n    })\n  )\n\n  Array.from({ length: id }).forEach((...[, sourceIndex]) => {\n    debits[sourceIndex] = []\n    credits[sourceIndex] = []\n\n    Array.from({ length: id }).forEach((...[, targetIndex]) => {\n      debits[sourceIndex][targetIndex] = null\n      credits[sourceIndex][targetIndex] = null\n    })\n  })\n\n  parsedList.forEach((financialItem) => {\n    debits[financialItem.creditor.id][financialItem.debtor.id] = financialItem\n    credits[financialItem.debtor.id][financialItem.creditor.id] = financialItem\n    fullList[financialItem.creditor.id] = financialItem.creditor\n    fullList[financialItem.debtor.id] = financialItem.debtor\n  })\n\n  return {\n    credits,\n    debits,\n    fullList,\n  }\n}\n\nconst addDropShadowFilter = <SVGData>({\n  charts,\n  deviation,\n  name,\n  slope,\n}: {\n  charts: Selection<BaseType, SVGData, BaseType, unknown>\n  deviation: number\n  name: string\n  slope: number\n}) => {\n  const defs = charts.append(\"defs\")\n  const filter = defs.append(\"filter\").attr(\"id\", `drop-shadow-${name}`)\n\n  filter\n    .append(\"feOffset\")\n    .attr(\"dx\", 0.5)\n    .attr(\"dy\", 0.5)\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"result\", \"offOut\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"offOut\")\n    .attr(\"result\", \"blurOut\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter\n    .append(\"feBlend\")\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"in2\", \"blurOut\")\n    .attr(\"mode\", \"normal\")\n\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n}\n\nconst colours = [\n  \"#39B347\",\n  \"#C92E47\",\n  \"#DB704D\",\n  \"#FFA22C\",\n  \"#5E92AA\",\n  \"#F8EDD3\",\n]\n\nconst margin = {\n  bottom: 20,\n  top: 50,\n}\nconst height = 500\n\ntype RenderChart = (o: {\n  financialData: FinancialData\n  rootElId: string\n}) => void\n\nconst renderChart: RenderChart = ({ financialData, rootElId }) => {\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.chordChart)\n\n  const width = rootEl.getBoundingClientRect().width / 2 - 20\n\n  const r1 = Math.min(width, height) / 2 - 4\n  const r0 = r1 - 20\n  const formatCurrency = format(\",.3r\")\n\n  const arc = arcD3().innerRadius(r0).outerRadius(r1)\n  const svg = select(`#${rootElId}`)\n\n  const { credits, debits, fullList } = financialData\n\n  const charts = svg\n    .selectAll(\"div\")\n    .data([debits, credits])\n    .enter()\n    .append(\"div\")\n    .style(\"display\", \"inline-block\")\n    .style(\"width\", `${width}px`)\n    .style(\"height\", `${height + margin.top + margin.bottom}px`)\n    .append(\"svg:svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"svg:g\")\n    .attr(\"transform\", `translate(${width / 2},${height / 2 + margin.top})`)\n\n  const leftChart = charts.filter((...[, chartIndex]) => chartIndex === 0)\n  const rightChart = charts.filter((...[, chartIndex]) => chartIndex === 1)\n\n  const setLabel = ({\n    chart,\n    label,\n  }: {\n    chart: Selection<BaseType, Debits, BaseType, unknown>\n    label: string\n  }) =>\n    chart\n      .append(\"text\")\n      .text(label)\n      .attr(\"transform\", `translate(0,${(-1 * height) / 2 - 10})`)\n      .attr(\"class\", styles.chartTitle)\n      .attr(\"text-anchor\", \"middle\")\n\n  setLabel({ chart: leftChart, label: \"Debits\" })\n  setLabel({ chart: rightChart, label: \"Credits\" })\n\n  addDropShadowFilter({\n    charts,\n    deviation: 2,\n    name: \"chords\",\n    slope: 0.4,\n  })\n  addDropShadowFilter({\n    charts,\n    deviation: 3,\n    name: \"headings\",\n    slope: 0.5,\n  })\n\n  const colorDomain = scaleLinear()\n    .domain(extent([0, fullList.length - 1]) as [number, number])\n    .range([0, 1])\n\n  const heatmapColour = scaleLinear<string>()\n    .domain(range(0, 1, 1.0 / colours.length))\n    .range(colours)\n\n  const fill = (chordItemIndex: number) =>\n    heatmapColour(colorDomain(chordItemIndex))\n\n  charts.each(function (...[dataMatrix, chartIndex]) {\n    const svgComp = select(this)\n    const numberMatrix = dataMatrix.map((row) =>\n      row.map((cell) => (cell ? +cell.amount : 0))\n    )\n\n    const chordData = chord()\n      .sortGroups(descending)\n      .sortSubgroups(descending)\n      .sortChords(descending)(numberMatrix)\n\n    const ribbonLayout = ribbon().radius(r0)\n\n    svgComp\n      .selectAll(`path.${styles.chord}`)\n      .data(chordData)\n      .enter()\n      .append(\"svg:path\")\n      .attr(\"class\", styles.chord)\n      .style(\"fill\", (chordItem) => fill(chordItem.target.index))\n      .style(\"filter\", \"url(#drop-shadow-chords)\")\n      .style(\"stroke\", (chordItem) => {\n        const originalColor = fill(chordItem.target.index)\n        const newColor = rgb(originalColor).darker()\n\n        return newColor.formatHex()\n      })\n      .style(\"stroke-width\", 2)\n      .attr(\"d\", ribbonLayout as any) // eslint-disable-line @typescript-eslint/no-explicit-any\n      .append(\"svg:title\")\n      .text((chordItem) => {\n        const {\n          [chordItem.source.index]: sourceData,\n          [chordItem.target.index]: targetData,\n        } = fullList\n\n        return `${sourceData.name} owes ${targetData.name} $${formatCurrency(\n          chordItem.source.value\n        )}B.`\n      })\n\n    const g = svgComp\n      .selectAll(`g.${styles.group}`)\n      .data(chordData.groups)\n      .enter()\n      .append(\"svg:g\")\n      .attr(\"class\", styles.group)\n\n    g.append(\"svg:path\")\n      .style(\"fill\", (chordGroup) => fill(chordGroup.index))\n      .attr(\"id\", (chordGroup) => `group${chordGroup.index}-${chartIndex}`)\n      .attr(\"d\", arc as any) // eslint-disable-line @typescript-eslint/no-explicit-any\n      .style(\"filter\", () => \"url(#drop-shadow-headings)\")\n      .append(\"svg:title\")\n      .text(\n        (chordGroup) =>\n          `${fullList[chordGroup.index].name} ${\n            chartIndex ? \"owes\" : \"is owed\"\n          } $${formatCurrency(chordGroup.value)}B.`\n      )\n\n    g.append(\"svg:text\")\n      .attr(\"x\", 6)\n      .attr(\"dy\", 15)\n      .filter((chordGroup) => chordGroup.value > 150)\n      .append(\"svg:textPath\")\n      .attr(\n        \"xlink:href\",\n        (chordGroup) => `#group${chordGroup.index}-${chartIndex}`\n      )\n      .text((chordGroup) => fullList[chordGroup.index].name)\n      .attr(\"class\", styles.headingTitle)\n  })\n}\n\nconst main = async () => {\n  const financialData = await fetchData()\n\n  renderChart({\n    financialData,\n    rootElId: \"chart\",\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/chord/chord\"\n\nconst Chord = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Chord\n"],"sourceRoot":""}