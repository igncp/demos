{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/trend-line/trend-line.ts","webpack://demos/./src/pages/d3js/trend-line.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchData","d3","ROOT_PATH","result","timeFormat","data","map","d","occurred","margin","height","animationTime","getInterpolation","line","interpolate","domain","range","length","t","interpolatedLine","slice","renderGraph","rootElId","width","document","getElementById","getBoundingClientRect","renderContent","zoomed","querySelector","checked","svg","text","append","attr","x","y","xAxis","yAxis","call","datum","transition","duration","attrTween","lr","n","sumX","sumY","sumXY","sumXX","sumYY","forEach","getTime","slope","intercept","r2","Math","pow","sqrt","linearRegression","regressionLine","tmp","delay","style","toExponential","on","demoInfo","pageContext","main","defaultChecked","name","type","className","id"],"mappings":"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","file":"component---src-pages-d-3-js-trend-line-js-5dc1de490d40518c48d6.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as d3 from \"d3\"\n\ntype InitialDataItem = {\n  occurred: string\n  value: string\n}\n\ntype DataItem = {\n  occurred: Date\n  value: number\n}\n\nconst fetchData = async (): Promise<DataItem[]> => {\n  const result = (await d3.tsv(\n    `${ROOT_PATH}data/d3js/trend-line/data.tsv`\n  )) as InitialDataItem[]\n\n  const timeFormat = d3.timeParse(\"%Y-%m-%d\")\n\n  const data = result.map((d) => ({\n    occurred: timeFormat(d.occurred) as Date,\n    value: +d.value,\n  }))\n\n  return data\n}\n\nconst margin = {\n  bottom: 50,\n  left: 50,\n  right: 50,\n  top: 50,\n}\n\nconst height = 500 - margin.top - margin.bottom\n\nconst animationTime = 2000\n\nconst getInterpolation = (data: DataItem[], line: d3.Line<DataItem>) => {\n  const interpolate = d3\n    .scaleQuantile()\n    .domain([0, 1])\n    .range(d3.range(1, data.length + 1))\n\n  return (t: number): any => {\n    const interpolatedLine = data.slice(0, interpolate(t))\n\n    return line(interpolatedLine)\n  }\n}\n\nconst linearRegression = (data: DataItem[]) => {\n  const lr: { slope?: number; intercept?: number; r2?: number } = {}\n  const n = data.length\n\n  let sumX = 0\n  let sumY = 0\n  let sumXY = 0\n  let sumXX = 0\n  let sumYY = 0\n\n  data.forEach((d) => {\n    sumX += d.occurred.getTime()\n    sumY += d.value\n    sumXX += d.occurred.getTime() * d.occurred.getTime()\n    sumYY += d.value * d.value\n    sumXY += d.occurred.getTime() * d.value\n  })\n  lr.slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX)\n  lr.intercept = (sumY - lr.slope * sumX) / n\n  lr.r2 = Math.pow(\n    (n * sumXY - sumX * sumY) /\n      Math.sqrt((n * sumXX - sumX * sumX) * (n * sumYY - sumY * sumY)),\n    2\n  )\n\n  return lr\n}\n\nconst renderGraph = ({\n  data,\n  rootElId,\n}: {\n  data: DataItem[]\n  rootElId: string\n}) => {\n  const width =\n    (document.getElementById(rootElId) as HTMLElement).getBoundingClientRect()\n      .width -\n    margin.left -\n    margin.right\n\n  const renderContent = () => {\n    const zoomed = (document.querySelector(\n      'input[value=\"zoom\"]'\n    ) as HTMLInputElement).checked\n\n    const svg = d3\n      .select(`#${rootElId}`)\n      .text(\"\")\n      .append(\"svg\")\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .attr(\"width\", width + margin.left + margin.right)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.right})`)\n\n    const x = d3.scaleTime().range([0, width])\n    const y = d3.scaleLinear().range([height, 0])\n    const xAxis = d3.axisBottom(x)\n    const yAxis = d3.axisLeft(y)\n\n    const line = d3\n      .line<DataItem>()\n      .x((d) => x(d.occurred))\n      .y((d) => y(d.value))\n\n    x.domain(d3.extent(data, (d) => d.occurred) as [Date, Date])\n    y.domain([\n      zoomed ? (d3.min(data, (d) => d.value) as number) : 0,\n      d3.max(data, (d) => d.value) as number,\n    ])\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(xAxis)\n    svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis)\n\n    svg\n      .append(\"path\")\n      .datum(data)\n      .transition()\n      .duration(animationTime)\n      .attrTween(\"d\", () => getInterpolation(data, line))\n      .attr(\"class\", \"line\")\n\n    const lr = linearRegression(data)\n\n    const regressionLine = d3\n      .line<DataItem>()\n      .x((d) => x(d.occurred))\n      .y((d) => {\n        const tmp = lr.intercept! + lr.slope! * +d.occurred\n\n        return y(tmp)\n      })\n\n    svg\n      .append(\"path\")\n      .datum(data)\n      .transition()\n      .delay(animationTime)\n      .duration(animationTime)\n      .attrTween(\"d\", () => getInterpolation(data, regressionLine))\n      .attr(\"class\", \"rline\")\n\n    svg\n      .append(\"text\")\n      .attr(\"transform\", `translate(${width * 0.7},${height * 0.7})`)\n      .style(\"opacity\", 0)\n      .transition()\n      .delay(animationTime * 2)\n      .text(`Slope: ${lr.slope!.toExponential(3)}`)\n      .style(\"opacity\", 1)\n  }\n\n  renderContent()\n\n  d3.selectAll('input[name=\"mode\"]').on(\"change\", renderContent)\n}\n\nconst main = async () => {\n  const rootElId = \"chart\"\n  const data = await fetchData()\n\n  renderGraph({\n    data,\n    rootElId,\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/trend-line/trend-line\"\n\nimport \"@/demos/trend-line/trend-line.styl\"\n\nconst TrendLine = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main}>\n    <form>\n      <label>\n        <input defaultChecked name=\"mode\" type=\"radio\" value=\"zoom\" /> Zoom\n      </label>\n      <label>\n        <input name=\"mode\" type=\"radio\" value=\"normal\" /> Normal\n      </label>\n    </form>\n    <div className=\"trend-line-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default TrendLine\n"],"sourceRoot":""}