{"version":3,"file":"component---src-pages-d-3-js-bars-tsx-eecd857c654e04476ecf.js","mappings":"+MAEWA,EAAO,2BACPC,EAAgB,oCCarBC,EAAiB,IAAjBA,EAA2B,IAC3BC,EAFS,IAEqB,EAAbD,EAEjBE,EAAW,GAGXC,EAAU,CAAC,UAAW,UAAW,UAAW,WAC5CC,EAAS,SAACC,GAAD,OAAwBJ,EAHrB,EAGyCI,GACrDC,EAAc,SAACD,GAAD,OAJF,EAI0BA,GAWtCE,EAAAA,WAOJ,cAAuD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SACzBC,KAAKF,KAAOA,EACZE,KAAKD,SAAWA,EAEhBC,KAAKC,SAAW,KAChBD,KAAKE,MAAQ,KACbF,KAAKG,MAAQ,KACd,kBA0JA,OA1JA,EAEMC,OAAP,WACE,IAAQN,EAAmBE,KAAnBF,KAAMC,EAAaC,KAAbD,SACNM,EACNC,SAASC,eAAeR,GACxBS,wBAFMH,MAIFI,GAAaC,EAAAA,EAAAA,OAChBC,QAAOC,EAAAA,EAAAA,KAAOd,IACde,MAAM,CAAC,EAAG,IACPC,GAAyBJ,EAAAA,EAAAA,OAC5BC,QAAOE,EAAAA,EAAAA,KAAM,EAAG,EAAG,EAAMpB,EAAQsB,SACjCF,MAAMpB,GAITO,KAAKG,MAFS,SAACR,GAAD,OAAwBmB,EAAcL,EAAWd,KAI/D,IAAMqB,GAAMC,EAAAA,EAAAA,IAAO,IAAIlB,GAAYmB,OAAO,OAE1CF,EACGG,KAAK,SAxDG,KAyDRA,KAAK,QAASd,GACdc,KAAK,QDxEW,iCC0EnB,IAAMjB,EAAQc,EAAIE,OAAO,KAEzBlB,KAAKE,MAAQA,EAEbA,EAAMiB,KAAK,YAAX,aAAqC7B,EAArC,IAAoDA,EAApD,KAEAU,KAAKC,SAAWmB,YAAYpB,KAAKqB,gBAAiB,KAElD,IAAMC,GAAIZ,EAAAA,EAAAA,OACPC,OAAO,CAAC,GAAKb,EAAKiB,OAAS,KAC3BF,MAAM,CAAC,EAAGrB,EAAWM,EAAKiB,SAEvBQ,GAAIb,EAAAA,EAAAA,OACPC,OAAO,CAAC,GAAGa,EAAAA,EAAAA,KAAI1B,KACf2B,WAAW,CAAC,GAAG,GAAkBD,EAAAA,EAAAA,KAAI1B,KAElC4B,EAASxB,EAAMgB,OAAO,KAE5BQ,EACGP,KAAK,QADR,SAC0BQ,GACvBR,KAAK,YAFR,eAEoC5B,EAFpC,KAGGqC,MAAKC,EAAAA,EAAAA,KAAWP,IAEnBI,EACGR,OAAO,QACPC,KAAK,YAFR,aAEmC3B,EAAWM,EAAKiB,OAAU,EAF7D,QAGGI,KAAK,QAAS,cACdA,KAAK,IAAK,IACVA,KAAK,YAAa,SAClBA,KAAK,OAAQ,SACbW,MAAM,cAAe,OACrBC,KAAK,UAER,IAAMC,EAAS9B,EAAMgB,OAAO,KAE5Bc,EACGb,KAAK,QADR,SAC0BQ,GACvBR,KAAK,YAFR,eAEoC5B,EAFpC,KAGGqC,MAAKK,EAAAA,EAAAA,KAASV,IAEjBS,EACGd,OAAO,QACPC,KAAK,YAFR,uBAGGA,KAAK,IAAK,IACVA,KAAK,YAAa,SAClBA,KAAK,OAAQ,SACbW,MAAM,cAAe,OACrBC,KAAK,SAER/B,KAAKkC,kBACN,EAEMC,QAAP,WACEnC,KAAKkC,iBACLlC,KAAKoC,UACN,EAEOC,cAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,EAAAA,SAAAA,WAAAA,OAAAA,EAAAA,YAAAA,EAAAA,EAAR,WACMrC,KAAKC,UACPoC,cAAcrC,KAAKC,aAEtB,EAEOiC,eAAR,WAA0B,IAAD,OACfpC,EAAuBE,KAAvBF,KAAMI,EAAiBF,KAAjBE,MAAOC,EAAUH,KAAVG,MAEnBD,EACCoC,UAAU,QACVC,KAAKzC,GACL0C,QACAtB,OAAO,QACPC,KAAK,KAAK,uFAAOsB,EAAP,YAAqBjD,EAAWiD,KAC1CtB,KAAK,IAAKzB,GACVyB,KAAK,QAAS3B,GACd2B,KAAK,SAAUvB,GACfuB,KAAK,QAAQ,SAACxB,GAAD,OAAaQ,EAAOR,MACjC+C,GAAG,aAAa,WACf,EAAKL,mBAENK,GAAG,cAAc,WAChB,EAAKL,gBACL,EAAKpC,SAAWmB,YAAY,EAAKC,gBAAiB,QAEnDH,OAAO,SACPa,MAAK,SAACpC,GAAD,OAAaA,MACtB,EAEO0B,cAAR,WAAyB,IAAD,OACtB,OAAO,WACL,IAAQvB,EAAS,EAATA,KAERA,EAAK6C,QAAQ7C,EAAK8C,OAElB,EAAKR,WAER,EAEOA,OAAR,WACE,IAAQtC,EAAuBE,KAAvBF,KAAMI,EAAiBF,KAAjBE,MAAOC,EAAUH,KAAVG,MAErB,GAAKD,EAAL,CAIA,IAAM2C,GAAOnC,EAAAA,EAAAA,OACVC,OAAO,CAAC,GAAKb,EAAKiB,OAAS,KAC3BF,MAAM,CAAC,EAAGrB,EAAWM,EAAKiB,SAEvB+B,GAAUjB,EAAAA,EAAAA,KAAWgB,GAE3B3C,EAAMe,OAAoB,UAAU8B,aAAaC,SAAS,KAAKpB,KAAKkB,GAEpE5C,EACGe,OAAO,eACP8B,aACAC,SAAS,KACT7B,KAAK,YAJR,aAImC3B,EAAWM,EAAKiB,OAAU,EAJ7D,QAMAb,EACGoC,UAAU,QACVC,KAAKzC,GACLiD,aACAC,SAAS,KACT7B,KAAK,IAAKzB,GACVyB,KAAK,SAAUvB,GACfuB,KAAK,OAAQhB,GACbc,OAAO,SACPc,MAAK,SAACpC,GAAD,OAAaA,OACtB,EAxKGE,GCnCOoD,EAAe,QAIfC,EAAS,mCAAG,oGACDC,MAASC,mCADR,cACjBC,EADiB,yBAGhBA,EAAQC,QAHQ,2CAAH,qDCEhBC,EAAI,mCAAG,0GACQL,IADR,OACLpD,EADK,ODIqB,ECDM,CAAEA,KAAAA,GAAlC0D,EDC6D,CACnE1D,KAD+B,EAAGA,KAElCC,SAAUkD,ICDJQ,EAAY,IAAI5D,EAAU2D,IAEtBpD,UAEJsD,EAAYpD,SAASC,eAAeoB,IAEhCgC,iBAAiB,SAAS,WAClC7D,EAAK8D,KAAKC,KAAKtE,MAAMsE,KAAKC,UAAYtC,EAAAA,EAAAA,KAAI1B,IAAoB,GAC9D2D,EAAUtB,UAENrC,EAAKiB,QAAU,IACjB2C,EAAUK,aAAa,WAAY,eAhB5B,iCDIoB,IAAC,ICJrB,OAAH,qDAuBV,ICTA,EAXa,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACX,gBAAC,IAAD,CAAMT,KAAMA,EAAMS,YAAaA,GAC7B,4BACE,0BAAQC,UAAU,eAAeC,GAAIvC,EAAsBwC,KAAK,UAAhE,aAIF,uBAAKD,GAAIjB,O,qBChBbmB,EAAOC,QAAU,EAAjB,O,kCCAA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOtF,KACPuF,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGI,MAAMH,EAAMC,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,GAGnEhB,OAAMiB,O","sources":["webpack://demos/./src/demos/bars/bars.module.css","webpack://demos/./src/demos/bars/bars-chart.ts","webpack://demos/./src/demos/bars/bars-chart-config.ts","webpack://demos/./src/demos/bars/bars.ts","webpack://demos/./src/pages/d3js/bars.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var barsChart = \"bars-module--barsChart--3abBv\";\nexport var axis = \"bars-module--axis--_Qwuv\";\nexport var addItemButton = \"bars-module--addItemButton--3NA4a\";","import {\n  Selection,\n  axisBottom,\n  axisLeft,\n  extent,\n  max,\n  range,\n  scaleLinear,\n  select,\n} from \"d3\"\n\nimport * as styles from \"./bars.module.css\"\n\ntype ChartData = number\n\nconst height = 500\nconst margin = { left: 160, top: 100 }\nconst floor = height - margin.top * 2\n\nconst barWidth = 30\nconst barHeight = 7\n\nconst colours = [\"#323247\", \"#7C7CC9\", \"#72B66C\", \"#429742\"]\nconst barYFn = (barItem: ChartData) => floor - barHeight * barItem\nconst barHeightFn = (barItem: ChartData) => barItem * barHeight\n\ntype BarsChartOpts = {\n  bars: ChartData[]\n  rootElId: string\n}\n\ntype Interval = ReturnType<typeof setInterval>\ntype Chart = Selection<SVGGElement, unknown, HTMLElement, unknown>\ntype ColorFn = (c: ChartData) => string\n\nclass BarsChart {\n  private readonly bars: ChartData[]\n  private readonly rootElId: string\n  private interval: Interval | null\n  private chart: Chart | null\n  private color: ColorFn | null\n\n  public constructor({ bars, rootElId }: BarsChartOpts) {\n    this.bars = bars\n    this.rootElId = rootElId\n\n    this.interval = null\n    this.chart = null\n    this.color = null\n  }\n\n  public render() {\n    const { bars, rootElId } = this\n    const { width } = (\n      document.getElementById(rootElId) as HTMLElement\n    ).getBoundingClientRect()\n\n    const colorScale = scaleLinear()\n      .domain(extent(bars) as [ChartData, ChartData])\n      .range([0, 1])\n    const heatmapColour: ColorFn = scaleLinear<string>()\n      .domain(range(0, 1, 1.0 / colours.length))\n      .range(colours)\n\n    const color = (barItem: ChartData) => heatmapColour(colorScale(barItem))\n\n    this.color = color as ColorFn\n\n    const svg = select(`#${rootElId}`).append(\"svg\")\n\n    svg\n      .attr(\"height\", height)\n      .attr(\"width\", width)\n      .attr(\"class\", styles.barsChart)\n\n    const chart = svg.append(\"g\")\n\n    this.chart = chart\n\n    chart.attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    this.interval = setInterval(this.getIntervalFn(), 1000)\n\n    const x = scaleLinear()\n      .domain([0.5, bars.length + 0.5])\n      .range([1, barWidth * bars.length])\n\n    const y = scaleLinear()\n      .domain([0, max(bars) as number])\n      .rangeRound([0, -1 * barHeight * (max(bars) as number)])\n\n    const xAxisG = chart.append(\"g\")\n\n    xAxisG\n      .attr(\"class\", `xAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisBottom(x))\n\n    xAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(${(barWidth * bars.length) / 2} ,0)`)\n      .attr(\"class\", \"xAxisLabel\")\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Number\")\n\n    const yAxisG = chart.append(\"g\")\n\n    yAxisG\n      .attr(\"class\", `yAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisLeft(y))\n\n    yAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(-30,${(-1 * (height - 60)) / 2})`)\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\")\n\n    this.drawRectangles()\n  }\n\n  public refresh() {\n    this.drawRectangles()\n    this.redraw()\n  }\n\n  private clearInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  private drawRectangles() {\n    const { bars, chart, color } = this\n\n    ;(chart as Chart)\n      .selectAll(\"rect\")\n      .data(bars)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (...[, barIndex]) => barWidth * barIndex)\n      .attr(\"y\", barYFn)\n      .attr(\"width\", barWidth)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", (barItem) => color!(barItem))\n      .on(\"mouseover\", () => {\n        this.clearInterval()\n      })\n      .on(\"mouseleave\", () => {\n        this.clearInterval()\n        this.interval = setInterval(this.getIntervalFn(), 1000)\n      })\n      .append(\"title\")\n      .text((barItem) => barItem)\n  }\n\n  private getIntervalFn() {\n    return () => {\n      const { bars } = this\n\n      bars.unshift(bars.pop() as ChartData)\n\n      this.redraw()\n    }\n  }\n\n  private redraw() {\n    const { bars, chart, color } = this\n\n    if (!chart) {\n      return\n    }\n\n    const newX = scaleLinear()\n      .domain([0.5, bars.length + 0.5])\n      .range([1, barWidth * bars.length])\n\n    const newAxis = axisBottom(newX)\n\n    chart.select<SVGGElement>(\".xAxis\").transition().duration(500).call(newAxis)\n\n    chart\n      .select(\".xAxisLabel\")\n      .transition()\n      .duration(500)\n      .attr(\"transform\", `translate(${(barWidth * bars.length) / 2} ,0)`)\n\n    chart\n      .selectAll(\"rect\")\n      .data(bars)\n      .transition()\n      .duration(500)\n      .attr(\"y\", barYFn)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", color as ColorFn)\n      .select(\"title\")\n      .text((barItem) => barItem)\n  }\n}\n\nexport { BarsChart }\n","export const CONTAINER_ID = \"chart\"\n\ntype BarData = number\n\nexport const fetchData = async (): Promise<BarData[]> => {\n  const rawData = await fetch(`${ROOT_PATH}data/d3js/bars/data.json`)\n\n  return rawData.json()\n}\n\nexport const createChartConfig = ({ bars }: { bars: BarData[] }) => ({\n  bars,\n  rootElId: CONTAINER_ID,\n})\n","import { max } from \"d3\"\n\nimport { BarsChart } from \"./bars-chart\"\nimport { CONTAINER_ID, createChartConfig, fetchData } from \"./bars-chart-config\"\nimport * as styles from \"./bars.module.css\"\n\nconst main = async () => {\n  const bars = await fetchData()\n\n  const chartConfig = createChartConfig({ bars })\n\n  const barsChart = new BarsChart(chartConfig)\n\n  barsChart.render()\n\n  const addItemEl = document.getElementById(styles.addItemButton) as HTMLElement\n\n  addItemEl.addEventListener(\"click\", () => {\n    bars.push(Math.floor(Math.random() * (max(bars) as number)) + 1)\n    barsChart.refresh()\n\n    if (bars.length >= 20) {\n      addItemEl.setAttribute(\"disabled\", \"disabled\")\n    }\n  })\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/bars/bars\"\nimport * as styles from \"@/demos/bars/bars.module.css\"\n\nconst Bars = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form>\n      <button className=\"btn btn-info\" id={styles.addItemButton} type=\"button\">\n        Add item\n      </button>\n    </form>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Bars\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["axis","addItemButton","margin","floor","barWidth","colours","barYFn","barItem","barHeightFn","BarsChart","bars","rootElId","this","interval","chart","color","render","width","document","getElementById","getBoundingClientRect","colorScale","scaleLinear","domain","extent","range","heatmapColour","length","svg","select","append","attr","setInterval","getIntervalFn","x","y","max","rangeRound","xAxisG","styles","call","axisBottom","style","text","yAxisG","axisLeft","drawRectangles","refresh","redraw","clearInterval","selectAll","data","enter","barIndex","on","unshift","pop","newX","newAxis","transition","duration","CONTAINER_ID","fetchData","fetch","ROOT_PATH","rawData","json","main","chartConfig","barsChart","addItemEl","addEventListener","push","Math","random","setAttribute","pageContext","className","id","type","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}