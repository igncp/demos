{"version":3,"file":"component---src-pages-d-3-js-mareys-schedule-tsx-6b0897bf12a15d46b60d.js","mappings":"mGAGA,IAAIA,E,gCACJ,IAAIC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,oBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,oBAAbE,UAAgE,mBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBzB,4HCQA,ICFA,MAJA,SAAkBO,GAChB,MAAuB,iBAATA,GAAqB,OAAWA,IDG5CC,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAoBjD,IEvBIC,EAEAC,EFqBJ,EAjBA,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7EV,GAAQC,EAAUO,EAAIC,EAAS,IAAMR,EAAUO,EAAIC,EAAS,IAAMR,EAAUO,EAAIC,EAAS,IAAMR,EAAUO,EAAIC,EAAS,IAAM,IAAMR,EAAUO,EAAIC,EAAS,IAAMR,EAAUO,EAAIC,EAAS,IAAM,IAAMR,EAAUO,EAAIC,EAAS,IAAMR,EAAUO,EAAIC,EAAS,IAAM,IAAMR,EAAUO,EAAIC,EAAS,IAAMR,EAAUO,EAAIC,EAAS,IAAM,IAAMR,EAAUO,EAAIC,EAAS,KAAOR,EAAUO,EAAIC,EAAS,KAAOR,EAAUO,EAAIC,EAAS,KAAOR,EAAUO,EAAIC,EAAS,KAAOR,EAAUO,EAAIC,EAAS,KAAOR,EAAUO,EAAIC,EAAS,MAAMI,cAMzf,IAAK,EAASb,GACZ,MAAMc,UAAU,+BAGlB,OAAOd,GEfLe,EAAa,EACbC,EAAa,EAkFjB,MAhFA,SAAYC,EAASC,EAAKT,GACxB,IAAIP,EAAIgB,GAAOT,GAAU,EACrBU,EAAID,GAAO,IAAIE,MAAM,IAErBC,GADJJ,EAAUA,GAAW,IACFI,MAAQf,EACvBgB,OAAgCV,IAArBK,EAAQK,SAAyBL,EAAQK,SAAWf,EAInE,GAAY,MAARc,GAA4B,MAAZC,EAAkB,CACpC,IAAIC,EAAYN,EAAQO,SAAWP,EAAQtB,KAAOA,KAEtC,MAAR0B,IAEFA,EAAOf,EAAU,CAAgB,EAAfiB,EAAU,GAAWA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAG3F,MAAZD,IAEFA,EAAWf,EAAiD,OAApCgB,EAAU,IAAM,EAAIA,EAAU,KAQ1D,IAAIE,OAA0Bb,IAAlBK,EAAQQ,MAAsBR,EAAQQ,MAAQC,KAAKC,MAG3DC,OAA0BhB,IAAlBK,EAAQW,MAAsBX,EAAQW,MAAQZ,EAAa,EAEnEa,EAAKJ,EAAQV,GAAca,EAAQZ,GAAc,IAarD,GAXIa,EAAK,QAA0BjB,IAArBK,EAAQK,WACpBA,EAAWA,EAAW,EAAI,QAKvBO,EAAK,GAAKJ,EAAQV,SAAiCH,IAAlBK,EAAQW,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAI7B,MAAM,mDAGlBgB,EAAaU,EACbT,EAAaY,EACbrB,EAAYe,EAIZ,IAAIQ,GAA4B,KAAb,WAFnBL,GAAS,cAE+BG,GAAS,WACjDT,EAAEjB,KAAO4B,IAAO,GAAK,IACrBX,EAAEjB,KAAO4B,IAAO,GAAK,IACrBX,EAAEjB,KAAO4B,IAAO,EAAI,IACpBX,EAAEjB,KAAY,IAAL4B,EAET,IAAIC,EAAMN,EAAQ,WAAc,IAAQ,UACxCN,EAAEjB,KAAO6B,IAAQ,EAAI,IACrBZ,EAAEjB,KAAa,IAAN6B,EAETZ,EAAEjB,KAAO6B,IAAQ,GAAK,GAAM,GAE5BZ,EAAEjB,KAAO6B,IAAQ,GAAK,IAEtBZ,EAAEjB,KAAOoB,IAAa,EAAI,IAE1BH,EAAEjB,KAAkB,IAAXoB,EAET,IAAK,IAAIU,EAAI,EAAGA,EAAI,IAAKA,EACvBb,EAAEjB,EAAI8B,GAAKX,EAAKW,GAGlB,OAAOd,GAAO,EAAUC,K,wEC/Ddc,E,+EC1BDC,EAAO,4CD0BlB,SAAYD,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,SAAAA,EAAAA,IAAAA,MAAZ,CAAYA,IAAAA,EAAAA,KAkBZ,IAAME,IAAoD,MACvDF,EAAUG,KCvCQ,8CDsCqC,EAEvDH,EAAUI,QCzCW,iDDuCkC,EAGvDJ,EAAUK,OC3CU,gDDwCmC,GA6CpDC,EACI,GADJA,EAEE,IAFFA,EAGG,GAHHA,EAIC,GAGDC,EAAS,IAAMD,EAAaA,EAarBE,EAAc,SAACC,GAC1B,IAAQC,EAAgCD,EAAhCC,kBAAmBC,EAAaF,EAAbE,SACnBC,EAA6BF,EAA7BE,kBAAmBC,EAAUH,EAAVG,MACrBC,EAASC,SAASC,eAAeL,GAEvCG,EAAOG,UAAUC,ICnHc,2DDqH/B,IAAMC,EACJL,EAAOM,wBAAwBD,MAAQb,EAAcA,EAEjDe,EAAa,SAAWtD,EAAAA,EAAAA,KAAOuD,MAAM,EAAG,GACxCC,EAAgB,UAAYxD,EAAAA,EAAAA,KAAOuD,MAAM,EAAG,GAC5CE,EAAQ,UAAYzD,EAAAA,EAAAA,KAAOuD,MAAM,EAAG,GACpCG,EAAM,SAAW1D,EAAAA,EAAAA,KAAOuD,MAAM,EAAG,GAyIvC,MAAO,CACLI,QAAS,SAACC,IAxIW,SAAC,GAA0B,IAAzBC,EAAwB,KAAbC,EAAa,KACzCC,GAAIC,EAAAA,EAAAA,MAAYC,OAAO,CAACJ,EAAWC,IAAUI,MAAM,CAAC,EAAGd,IACvDe,GAAIC,EAAAA,EAAAA,OAAcF,MAAM,CAAC,EAAG1B,IAC5B6B,GAAWC,EAAAA,EAAAA,KAAcP,GAC5BQ,MAAM,GACNC,WAAW9B,EAAY+B,eACpBC,GAAcC,EAAAA,EAAAA,KAAiBZ,GAClCQ,MAAM,GACNC,WAAW9B,EAAY+B,eAEpBG,GAAMC,EAAAA,EAAAA,IAAO,IAAIjC,GACpBkC,KAAK,IACLC,OAAO,OACPC,KAAK,SAAUxC,EAASD,EAAaA,GACrCyC,KAAK,QAAS5B,EAAQb,EAAcA,GACpCwC,OAAO,KACPC,KAAK,YANI,aAMsBzC,EANtB,IAMqCA,EANrC,KAQZqC,EACGG,OAAO,QACPC,KAAK,QC/IY,kDDgJjBA,KAAK,cAAe,UACpBA,KAAK,YAJR,aAIkC5B,EAAQ,EAJ1C,SAKG0B,KAAKpC,EAAYuC,YACjBC,MAAM,cAAe,QAlGD,SAAC,GAUrB,IATLC,EASI,EATJA,UACAC,EAQI,EARJA,GACAC,EAOI,EAPJA,MASMC,EAFF,EANJV,IAOiBG,OAAO,QAErBA,OAAO,UACPC,KAAK,SAAU,QACfA,KAAK,KAHO,eAGcI,GAC1BJ,KAAK,QAAS,QACdA,KAAK,IAAK,SACVA,KAAK,IAAK,SAEbM,EACGP,OAAO,kBACPC,KAAK,KAAM,eACXA,KAAK,eAAgBG,GAExBG,EAAOP,OAAO,YAAYC,KAAK,KAAM,GAAGA,KAAK,KAAM,GACnDM,EACGP,OAAO,uBACPA,OAAO,WACPC,KAAK,QAASK,GACdL,KAAK,OAAQ,UAEhB,IAAMO,EAAUD,EAAOP,OAAO,WAE9BQ,EAAQR,OAAO,eAEfQ,EAAQR,OAAO,eAAeC,KAAK,KAAM,iBAgEvCQ,CAAmB,CACjBL,UAAW,EACXC,GAAI3B,EACJ4B,MAAO,GACPT,IAAAA,IAGFA,EACGG,OAAO,QACPA,OAAO,YACPC,KAAK,KAAMtB,GACXqB,OAAO,QACPC,KAAK,KAAMzC,GACXyC,KAAK,QAAS5B,GACd4B,KAAK,SAAUxC,EAASD,EAAaA,GAExC4B,EAAEF,QACAwB,EAAAA,EAAAA,KACE5C,GACA,SAAC6C,GAAD,OAAsBA,EAAiBC,aAI3C,IAAMC,EAA6BhB,EAChCG,OAAO,KACPC,KAAK,QC7KkB,wDD8KvBa,UAAU,KACVC,KAAKjD,GACLkD,QACAhB,OAAO,KACPC,KACC,aACA,SAACU,GAAD,qBAAqCvB,EAAEuB,EAAiBC,UAAxD,OAGJC,EACGb,OAAO,QACPC,KAAK,KAAM,GACXA,KAAK,KAAM,SACXF,MAAK,SAACY,GAAD,OAAsBA,EAAiBM,SAE/CJ,EAA2Bb,OAAO,QAAQC,KAAK,KAAM5B,GACrDwB,EAAIG,OAAO,KAAKC,KAAK,QAArB,SAAuCiB,GAAeC,KAAK7B,GAC3DO,EACGG,OAAO,KACPC,KAAK,QAFR,YAE6BiB,GAC1BjB,KAAK,YAHR,eAGoCxC,EAHpC,KAIG0D,KAAKxB,GAER,IAQMyB,EAAiBvB,EACpBG,OAAO,KACPC,KAAK,QC9MM,4CD+MXA,KAAK,YAHe,QAGMtB,EAHN,KAIpBmC,UAAU,KACVC,KAAKhD,GACLiD,QACAhB,OAAO,KACPC,KAAK,SAAS,SAACoB,GACd,IAAMC,EAAY3D,EAAY4D,aAAaF,GAG3C,OAFmCjE,EAA1BkE,GAET,SAA4BD,EAAahB,MAE1CmB,GAAG,aAtBY,WAAmC,IAAD,wEAA3BC,EAA2B,MAClD3B,EAAAA,EAAAA,IAAO,SAAS2B,EAAKpB,IAAMP,OAAO,QAAQK,MAAM,eAAgB,UAsB/DqB,GAAG,cAnBa,WAAmC,IAAD,wEAA3BC,EAA2B,MACnD3B,EAAAA,EAAAA,IAAO,SAAS2B,EAAKpB,IAAMP,OAAO,QAAQK,MAAM,eAAgB,YAoB5DsB,GAAOC,EAAAA,EAAAA,OACV1C,GAAE,SAAC2C,GAAD,OAAW3C,EAAE2C,EAAM3C,MACrBI,GAAE,SAACuC,GAAD,OAAWvC,EAAEuC,EAAMhB,iBAAiBC,aAEzCQ,EACGpB,OAAO,QACPC,KAAK,KAAK,SAACoB,GAAD,OAAkBI,EAAKJ,EAAaO,WAC9C3B,KAAK,QAAS1B,GACd0B,KAAK,QAAStC,EAAYkE,cAE7BT,EACGN,UAAU,UACVC,MAAK,SAACM,GAAD,OAAkBA,EAAaO,UACpCZ,QACAhB,OAAO,UACPG,MAAM,SAAU,WAChBqB,GAAG,SAAS,uFAAOG,EAAP,YAAkBhE,EAAYmE,aAAaH,MACvD1B,KACC,aACA,SAAC0B,GAAD,mBACe3C,EAAE2C,EAAM3C,GADvB,IAC8BI,EAAEuC,EAAMhB,iBAAiBC,UADvD,OAGDT,MAAM,SAZT,oBAYuCzB,EAZvC,KAaGuB,KAAK,IAAK,OACVA,KAAK,QAASxB,GACdwB,KAAK,SAAS,SAAC0B,GAAD,OAAWhE,EAAYoE,cAAcJ,MAEtDK,EAAE,IAAIzD,GAAiB0D,QAAQ,CAC7BC,OAAO,IAETF,EAAE,IAAIvD,GAAoBwD,QAAQ,CAChCC,OAAO,IAMPC,CAAOtD,M,UErQPuD,EAAgB,UAIhBC,EAAY,SAACC,GACjB,IAAMC,GAHmBC,EAAAA,EAAAA,KAAUJ,EAGlBK,CAAeH,GAMhC,OAJiB,OAAbC,GAAqBA,EAASG,WAAa,GAC7CH,EAASI,QAAQJ,EAASK,UAAY,GAGjCL,GAsCHM,EAAAA,WAEJ,WAAoBC,GAClBC,KAAKD,cAAgBA,EACtB,EAEmBE,wBAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAApB,2GAC+BC,EAAAA,EAAAA,KACxBC,6CAFP,cACQC,EADR,OAKQC,EAAsB,GAEtBC,EAAkBF,EACrBG,KAAI,WAA6B,IAAD,wEAAvBC,EAAuB,KAAhBC,EAAgB,KAC/B,GAAmB,IAAfA,EACF,IAAK,IAAMC,KAAOF,EAChB,GAAI,UAAUG,KAAKD,GAAM,CACvB,IAAME,EAAgBF,EAAIG,MAAM,KAEhCR,EAAShI,KAAK,CACZyI,UAAWF,EAAc,GACzBF,IAAAA,EACAK,KAAMH,EAAc,GACpBI,MAAOJ,EAAc,KAM7B,MAAO,CACLK,UAAWT,EAAMS,UACjB3D,GAAImD,EACJS,OAAQV,EAAMU,OACdC,MAAOd,EACJE,KAAI,SAACa,GAAD,MAAc,CACjBA,QAAAA,EACAC,KAAM/B,EAAUkB,EAAMY,EAAQV,MAC9BY,QAASb,MAEVjD,QAAO,SAAC4D,GAAD,OAA2C,OAA7BA,EAAQC,QAChCE,KAAMf,EAAMe,SAGf/D,QAAO,SAACgD,GAAD,MAAW,QAAQG,KAAKH,EAAMe,SAElCxB,EAAgB,CACpBM,SAAAA,EACAC,OAAAA,GA1CJ,kBA6CS,IAAIR,EAAgBC,IA7C7B,6FAAoBE,GAApB,EAgDcuB,oBAAd,SAAkCC,GAChC,OAAOC,EAAAA,EAAAA,KAAWrC,EAAXqC,CAA0BD,IAClC,EAEaE,oBAAd,SAAkCC,GAChC,OAAOtC,EAAUsC,IAClB,EAEaC,cAAd,SAA4BC,GAC1B,MAEIA,EADFX,MAAYY,EADd,EACW,GAA4CC,EADvD,EAC0BF,EAAUX,MAAMtI,OAAS,GAGnD,MAA4B,MAAxBiJ,EAAUb,UACFc,EAAUX,QAAQL,KAA5B,OAAuCiB,EAASZ,QAAQL,KAGhDiB,EAASZ,QAAQL,KAA3B,OAAsCgB,EAAUX,QAAQL,MACzD,kBAmBA,OAnBA,EAEMkB,YAAP,WACE,OAAOjC,KAAKD,cAAcM,SAAS5E,SACpC,EAEMyG,UAAP,WACE,OAAOlC,KAAKD,cAAcO,OAAO7E,SAClC,EAEM0G,aAAP,WACE,OAAOnC,KAAKD,cAAcO,OAAO8B,QAC/B,WAAsB,IAAD,wEAAhBC,EAAgB,KAAX7B,EAAW,KAGnB,OAFA6B,EAAI7B,EAAMlD,IAAMkD,EAET6B,IAET,KAEH,EA3FGvC,GC/COwC,EAAe,QACfC,EAAW,iBA6CXC,EAAgB,SAACC,GAC5B,IAAMC,EAASzD,EAAE,IAAIsD,GAErBG,EAAOA,OAAO,CACZC,OAAQ,WACN,IACMC,EAjDiB,SAAC9G,GAC5B,IAAM+G,EAAkB,GAuCxB,OArCA/G,EAAOgH,SAAQ,SAACC,GACd,IAAMC,EAAgBD,EAAQ,IAAO,KAEjCE,EAAW,KACXC,EAAQC,KAAKC,MAAMJ,EAAe,IAClCK,EAAUF,KAAKC,MAAMJ,EAAe,IAEpCK,EAAU,IACZA,GAAoB,GACpBH,GAAgB,GAEhBG,GAAoB,IAGtBH,GAAgB,GAEJ,GAERA,GADY,KAAVA,EACc,GAEA,GAETA,EAAQ,KACjBD,EAAW,KAEG,KAAVC,IACFA,GAAgB,KAIpB,IAEMI,EAAeJ,EAAN,KAFIG,EAAU,GAAV,IAAmBA,EAAYA,EAAQ/K,YAEf2K,EAE3C,OAAOJ,EAAMxK,KAAKiL,MAGbT,EASgBU,CADJb,EAAOA,OAAO,WACmBnC,IAC9CT,EAAgB6B,qBAGlBc,EAAqBG,IAEvBxG,OAAO,IAGTsG,EAAOA,OAAO,SAAU,CAAC,GAAI,MC1ClBc,EAAoB,SAACC,GAChC,IACM1I,EADW0I,EAAUxB,cAC4B1B,KAAI,SAACa,GAAD,MAAc,CACvEV,IAAKU,EAAQV,IACbxC,MAAOkD,EAAQL,KACflD,SAAUuD,EAAQN,aAGd4C,EAAsB3I,EAAkBqH,QAE3C,WAAiC,IAAD,wEAA3BC,EAA2B,KAAtBzE,EAAsB,KAGjC,OAFAyE,EAAIzE,EAAiB8C,KAAO9C,EAErByE,IACN,IAIGrH,EAFSyI,EAAUvB,YAEJ3B,KAAI,SAACC,GAAD,MAAY,CACnClD,GAAIkD,EAAMlD,GACVuB,OAAQ2B,EAAMW,MAAMZ,KAAI,SAACoD,GAAD,MAAW,CACjC/F,iBAAkB8F,EAAoBC,EAAKvC,QAAQV,KACnDkD,OAAQD,EAAKrC,QACbrF,EAAG0H,EAAKtC,aAINwC,EAAYJ,EAAUtB,eAkD5B,MAAO,CACLhF,WAdiB,0DAejBtC,kBApB0D,CAC1DE,kBAAAA,EACAC,MAAAA,GAmBAwD,aArCgD,SAACE,GAGjD,OAF6BmF,EAApBnF,EAAKpB,IAEAiE,MACZ,IAAK,IACH,OAAOpH,EAAUG,IACnB,IAAK,IACH,OAAOH,EAAUK,MACnB,IAAK,IACH,OAAOL,EAAUI,OAEnB,QACE,OAAOJ,EAAUG,MA0BrBwE,aApDgD,SAACJ,GACjD,IAAmBoD,EAAc+B,EAAxBnF,EAAKpB,IAEd,OAAOwC,EAAgB+B,cAAcC,IAkDrC9C,cA/CkD,SAACJ,GACnD,IAAwB4B,EAAUqD,EAAzBjF,EAAMgF,QAEf,OAAU9D,EAAgB+B,cAAcrB,GAAxC,KACE5B,EAAMhB,iBAAiBM,MADzB,OAnDe,SAAUuD,GAC3B,IAAIyB,EAAQzB,EAAK9B,WACXmE,EAAOZ,GAAS,GAAK,KAAO,KAGlCA,GADAA,GAAgB,KACQ,GAExB,IAAMG,EAAU5B,EAAKsC,aAGrB,OAAUb,EAAV,KAFmBG,EAAU,GAAV,IAAmBA,EAAYA,EAAQ/K,YAE1D,IAAiCwL,EA2CxBE,CAAWpF,EAAM3C,IA2CxBU,cAjBkD,SAAC8E,GAAD,OAClD3B,EAAgB0B,oBAAoBC,IAiBpC1C,aAfgD,SAACH,GACjDqF,OAAOC,KAAP,iCACmCC,EAAAA,UAAa,CAC5CC,EAAE,sBAAuBxF,EAAMhB,iBAAiBM,UAapDpD,SAAUwH,ICjGR+B,EAAI,mCAAG,0GACavE,EAAgBG,0BAD7B,OACLwD,EADK,OAGL7I,EAAc4I,EAAkBC,GAH3B,EAK+B9I,EAAYC,GAArC6H,EALN,EAKH5G,QAER2G,EAAcC,GAPH,2CAAH,qDAYV,ICEA,EAduB,SAAC,GAAD,IAAG6B,EAAH,EAAGA,YAAH,OACrB,gBAAC,IAAD,CACEC,MAAO,CAACC,EAAAA,EAAAA,OACRH,KAAMA,EACNC,YAAaA,EACbG,QAAS,CAACD,EAAAA,EAAAA,SAEV,2BACE,uBAAKlH,GAAIiF,KAEX,uBAAKjF,GAAIgF","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/demos/mareys-schedule/crossing-lines-chart.ts","webpack://demos/./src/demos/mareys-schedule/crossing-lines-chart.module.css","webpack://demos/./src/demos/mareys-schedule/mareys-schedule-data-model.ts","webpack://demos/./src/demos/mareys-schedule/mareys-schedule-controls.ts","webpack://demos/./src/demos/mareys-schedule/mareys-schedule-chart-config.ts","webpack://demos/./src/demos/mareys-schedule/mareys-schedule.ts","webpack://demos/./src/pages/d3js/mareys-schedule.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import {\n  Selection,\n  axisBottom,\n  axisTop,\n  extent,\n  line as lineD3,\n  scaleLinear,\n  scaleTime,\n  select,\n} from \"d3\"\nimport { v1 as uuid } from \"uuid\"\n\nimport * as styles from \"./crossing-lines-chart.module.css\"\n\n// @TODO make it more generic to allow other y type in addition to Date\n\nexport type HorizontalMarker = {\n  key: string\n  label: string\n  position: number\n}\n\ntype Point = {\n  horizontalMarker: HorizontalMarker\n  lineId: number\n  x: Date | null\n}\n\nexport enum LineStyle {\n  Black = \"Black\",\n  Orange = \"Orange\",\n  Red = \"Red\",\n}\n\ntype Line = {\n  id: number\n  points: Point[]\n}\n\ntype CrossingLines = {\n  horizontalMarkers: HorizontalMarker[]\n  lines: Line[]\n}\n\nexport type Redraw = (range: [Date, Date]) => void\n\nconst lineStyleToClassName: { [key in LineStyle]: string } = {\n  [LineStyle.Red]: styles.redLine,\n  [LineStyle.Orange]: styles.orangeLine,\n  [LineStyle.Black]: styles.blackLine,\n}\n\nconst filterBlackOpacity = ({\n  deviation,\n  id,\n  slope,\n  svg,\n}: {\n  deviation: number\n  id: string\n  slope: number\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>\n}) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nconst margin = {\n  bottom: 50,\n  left: 120,\n  right: 50,\n  top: 80,\n}\n\nconst height = 600 - margin.top - margin.bottom\n\nexport type ChartConfig = {\n  chartTitle: string\n  crossingLinesData: CrossingLines\n  getLineStyle: (line: Line) => LineStyle\n  getLineTitle: (line: Line) => string\n  getPointTitle: (point: Point) => string\n  getXAxisLabel: (date: Date) => string\n  onPointClick: (point: Point) => void\n  rootElId: string\n}\n\nexport const renderChart = (chartConfig: ChartConfig) => {\n  const { crossingLinesData, rootElId } = chartConfig\n  const { horizontalMarkers, lines } = crossingLinesData\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.mareysScheduleChart)\n\n  const width =\n    rootEl.getBoundingClientRect().width - margin.left - margin.right\n\n  const linePathClass = `line-${uuid().slice(0, 6)}`\n  const pointCircleClass = `point-${uuid().slice(0, 6)}`\n  const filterId = `lines-${uuid().slice(0, 6)}`\n  const clipId = `clip-${uuid().slice(0, 6)}`\n\n  const redraw: Redraw = ([timeStart, timeEnd]) => {\n    const x = scaleTime().domain([timeStart, timeEnd]).range([0, width])\n    const y = scaleLinear().range([0, height])\n    const xAxisTop = axisTop<Date>(x)\n      .ticks(8)\n      .tickFormat(chartConfig.getXAxisLabel)\n    const xAxisBottom = axisBottom<Date>(x)\n      .ticks(8)\n      .tickFormat(chartConfig.getXAxisLabel)\n\n    const svg = select(`#${rootElId}`)\n      .text(\"\")\n      .append(\"svg\")\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .attr(\"width\", width + margin.left + margin.right)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", styles.chartTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(${width / 2},-40)`)\n      .text(chartConfig.chartTitle)\n      .style(\"font-weight\", \"bold\")\n\n    filterBlackOpacity({\n      deviation: 2,\n      id: filterId,\n      slope: 0.2,\n      svg,\n    })\n\n    svg\n      .append(\"defs\")\n      .append(\"clipPath\")\n      .attr(\"id\", clipId)\n      .append(\"rect\")\n      .attr(\"y\", -margin.top)\n      .attr(\"width\", width)\n      .attr(\"height\", height + margin.top + margin.bottom)\n\n    y.domain(\n      extent(\n        horizontalMarkers,\n        (horizontalMarker) => horizontalMarker.position\n      ) as [number, number]\n    )\n\n    const horizontalMarkersSelection = svg\n      .append(\"g\")\n      .attr(\"class\", styles.horizontalMarker)\n      .selectAll(\"g\")\n      .data(horizontalMarkers)\n      .enter()\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        (horizontalMarker) => `translate(0,${y(horizontalMarker.position)})`\n      )\n\n    horizontalMarkersSelection\n      .append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"dy\", \".35em\")\n      .text((horizontalMarker) => horizontalMarker.label)\n\n    horizontalMarkersSelection.append(\"line\").attr(\"x2\", width)\n    svg.append(\"g\").attr(\"class\", `x top ${styles.axis}`).call(xAxisTop)\n    svg\n      .append(\"g\")\n      .attr(\"class\", `x bottom ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(xAxisBottom)\n\n    const mouseover = (...[, line]: [unknown, Line]) => {\n      select(`.line-${line.id}`).select(\"path\").style(\"stroke-width\", \"5px\")\n    }\n\n    const mouseleave = (...[, line]: [unknown, Line]) => {\n      select(`.line-${line.id}`).select(\"path\").style(\"stroke-width\", \"2.5px\")\n    }\n\n    const linesSelection = svg\n      .append(\"g\")\n      .attr(\"class\", styles.line)\n      .attr(\"clip-path\", `url(#${clipId})`)\n      .selectAll(\"g\")\n      .data(lines)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", (crossingLine) => {\n        const lineStyle = chartConfig.getLineStyle(crossingLine)\n        const { [lineStyle]: lineClass } = lineStyleToClassName\n\n        return `${lineClass} line-${crossingLine.id}`\n      })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseleave\", mouseleave)\n\n    const line = lineD3<Point>()\n      .x((point) => x(point.x!))\n      .y((point) => y(point.horizontalMarker.position))\n\n    linesSelection\n      .append(\"path\")\n      .attr(\"d\", (crossingLine) => line(crossingLine.points))\n      .attr(\"class\", linePathClass)\n      .attr(\"title\", chartConfig.getLineTitle)\n\n    linesSelection\n      .selectAll(\"circle\")\n      .data((crossingLine) => crossingLine.points)\n      .enter()\n      .append(\"circle\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (...[, point]) => chartConfig.onPointClick(point))\n      .attr(\n        \"transform\",\n        (point) =>\n          `translate(${x(point.x!)},${y(point.horizontalMarker.position)})`\n      )\n      .style(\"filter\", `url(#drop-shadow-${filterId})`)\n      .attr(\"r\", \"5px\")\n      .attr(\"class\", pointCircleClass)\n      .attr(\"title\", (point) => chartConfig.getPointTitle(point))\n\n    $(`.${linePathClass}`).tooltip({\n      track: true,\n    })\n    $(`.${pointCircleClass}`).tooltip({\n      track: true,\n    })\n  }\n\n  return {\n    refresh: (limits: [Date, Date]) => {\n      redraw(limits)\n    },\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var mareysScheduleChart = \"crossing-lines-chart-module--mareysScheduleChart--49-Ce\";\nexport var axis = \"crossing-lines-chart-module--axis--19tt7\";\nexport var chartTitle = \"crossing-lines-chart-module--chartTitle--1ew56\";\nexport var horizontalMarker = \"crossing-lines-chart-module--horizontalMarker--1i6JR\";\nexport var line = \"crossing-lines-chart-module--line--1i1AQ\";\nexport var blackLine = \"crossing-lines-chart-module--blackLine--30fdP\";\nexport var orangeLine = \"crossing-lines-chart-module--orangeLine--3Ah3X\";\nexport var redLine = \"crossing-lines-chart-module--redLine--aD8VJ\";","import { timeFormat, timeParse, tsv } from \"d3\"\n\nconst timeFormatStr = \"%I:%M%p\"\n\nconst getParseTime = () => timeParse(timeFormatStr)\n\nconst parseTime = (timeStr: string): Date => {\n  const timeDate = getParseTime()(timeStr)\n\n  if (timeDate !== null && timeDate.getHours() < 3) {\n    timeDate.setDate(timeDate.getDate() + 1)\n  }\n\n  return timeDate!\n}\n\ntype TrainType = \"B\" | \"L\" | \"N\"\n\ntype RawDataItem = {\n  [stop: string]: string\n  direction: string\n  number: string\n  type: TrainType\n}\n\ntype Station = {\n  distance: number\n  key: string\n  name: string\n  zone: number\n}\n\ntype Stop = {\n  station: Station\n  time: Date | null\n  trainId: number\n}\n\ntype Train = {\n  direction: string\n  id: number\n  number: string\n  stops: Stop[]\n  type: TrainType\n}\n\ntype SchedulesData = {\n  stations: Station[]\n  trains: Train[]\n}\n\nclass MareysSchedules {\n  private readonly schedulesData: SchedulesData\n  private constructor(schedulesData: SchedulesData) {\n    this.schedulesData = schedulesData\n  }\n\n  public static async fetchAndCreateSchedules(): Promise<MareysSchedules> {\n    const originalItems = (await tsv(\n      `${ROOT_PATH}data/d3js/mareys-schedule/data.tsv`\n    )) as unknown as RawDataItem[]\n\n    const stations: Station[] = []\n\n    const trains: Train[] = originalItems\n      .map((...[train, trainIndex]) => {\n        if (trainIndex === 0) {\n          for (const key in train) {\n            if (/^stop\\|/.test(key)) {\n              const stopFragments = key.split(\"|\")\n\n              stations.push({\n                distance: +stopFragments[2],\n                key,\n                name: stopFragments[1],\n                zone: +stopFragments[3],\n              })\n            }\n          }\n        }\n\n        return {\n          direction: train.direction,\n          id: trainIndex,\n          number: train.number,\n          stops: stations\n            .map((station) => ({\n              station,\n              time: parseTime(train[station.key]),\n              trainId: trainIndex,\n            }))\n            .filter((station) => (station.time as unknown) !== null),\n          type: train.type,\n        }\n      })\n      .filter((train) => /[NLB]/.test(train.type))\n\n    const schedulesData = {\n      stations,\n      trains,\n    }\n\n    return new MareysSchedules(schedulesData)\n  }\n\n  public static convertDateToString(date: Date): string {\n    return timeFormat(timeFormatStr)(date)\n  }\n\n  public static convertStringToDate(dateStr: string): Date {\n    return parseTime(dateStr)\n  }\n\n  public static getTrainTitle(trainData: Train): string {\n    const {\n      stops: { 0: firstStop, [trainData.stops.length - 1]: lastStop },\n    } = trainData\n\n    if (trainData.direction === \"S\") {\n      return `${firstStop.station.name} -> ${lastStop.station.name}`\n    }\n\n    return `${lastStop.station.name} -> ${firstStop.station.name}`\n  }\n\n  public getStations() {\n    return this.schedulesData.stations.slice()\n  }\n\n  public getTrains() {\n    return this.schedulesData.trains.slice()\n  }\n\n  public getTrainsMap() {\n    return this.schedulesData.trains.reduce<{ [id: string]: Train }>(\n      (...[acc, train]) => {\n        acc[train.id] = train\n\n        return acc\n      },\n      {}\n    )\n  }\n}\n\nexport { MareysSchedules }\n","import { Redraw } from \"./crossing-lines-chart\"\nimport { MareysSchedules } from \"./mareys-schedule-data-model\"\n\ntype ScheduleLimits = [number, number]\nexport const CONTAINER_ID = \"chart\"\nexport const RANGE_ID = \"schedule-range\"\n\nconst convertLimitsToTimes = (limits: ScheduleLimits): [string, string] => {\n  const times: string[] = []\n\n  limits.forEach((limit) => {\n    const wholeMinutes = (limit / 100) * 1200\n\n    let fragment = \"AM\"\n    let hours = Math.floor(wholeMinutes / 60)\n    let minutes = Math.floor(wholeMinutes % 60)\n\n    if (minutes > 30) {\n      minutes = minutes - 30\n      hours = hours + 1\n    } else {\n      minutes = minutes + 30\n    }\n\n    hours = hours + 4\n\n    if (hours > 23) {\n      if (hours === 24) {\n        hours = hours - 12\n      } else {\n        hours = hours - 24\n      }\n    } else if (hours > 11) {\n      fragment = \"PM\"\n\n      if (hours !== 12) {\n        hours = hours - 12\n      }\n    }\n\n    const minutesStr = minutes < 10 ? `0${minutes}` : minutes.toString()\n\n    const finalTime = `${hours}:${minutesStr}${fragment}`\n\n    return times.push(finalTime)\n  })\n\n  return times as [string, string]\n}\n\nexport const setupControls = (updateScheduleLimits: Redraw) => {\n  const slider = $(`#${RANGE_ID}`)\n\n  slider.slider({\n    change: () => {\n      const limits = slider.slider(\"values\") as ScheduleLimits\n      const timeLimits = convertLimitsToTimes(limits).map(\n        MareysSchedules.convertStringToDate\n      ) as [Date, Date]\n\n      updateScheduleLimits(timeLimits)\n    },\n    range: true,\n  })\n\n  slider.slider(\"values\", [10, 50])\n}\n","import qs from \"query-string\"\n\nimport {\n  ChartConfig,\n  HorizontalMarker,\n  LineStyle,\n} from \"./crossing-lines-chart\"\nimport { CONTAINER_ID } from \"./mareys-schedule-controls\"\nimport { MareysSchedules } from \"./mareys-schedule-data-model\"\n\nconst formatAMPM = function (date: Date) {\n  let hours = date.getHours()\n  const ampm = hours >= 12 ? \"PM\" : \"AM\"\n\n  hours = hours % 12\n  hours = hours ? hours : 12\n\n  const minutes = date.getMinutes()\n  const minutesStr = minutes < 10 ? `0${minutes}` : minutes.toString()\n\n  return `${hours}:${minutesStr} ${ampm}`\n}\n\nexport const createChartConfig = (schedules: MareysSchedules): ChartConfig => {\n  const stations = schedules.getStations()\n  const horizontalMarkers: HorizontalMarker[] = stations.map((station) => ({\n    key: station.key,\n    label: station.name,\n    position: station.distance,\n  }))\n\n  const horizontalMarkerMap = horizontalMarkers.reduce<{\n    [key: string]: HorizontalMarker\n  }>((...[acc, horizontalMarker]) => {\n    acc[horizontalMarker.key] = horizontalMarker\n\n    return acc\n  }, {})\n\n  const trains = schedules.getTrains()\n\n  const lines = trains.map((train) => ({\n    id: train.id,\n    points: train.stops.map((stop) => ({\n      horizontalMarker: horizontalMarkerMap[stop.station.key],\n      lineId: stop.trainId,\n      x: stop.time,\n    })),\n  }))\n\n  const trainsMap = schedules.getTrainsMap()\n\n  const getLineTitle: ChartConfig[\"getLineTitle\"] = (line) => {\n    const { [line.id]: trainData } = trainsMap\n\n    return MareysSchedules.getTrainTitle(trainData)\n  }\n\n  const getPointTitle: ChartConfig[\"getPointTitle\"] = (point) => {\n    const { [point.lineId]: train } = trainsMap\n\n    return `${MareysSchedules.getTrainTitle(train)}\\n${\n      point.horizontalMarker.label\n    } at ${formatAMPM(point.x!)}`\n  }\n\n  const getLineStyle: ChartConfig[\"getLineStyle\"] = (line) => {\n    const { [line.id]: train } = trainsMap\n\n    switch (train.type) {\n      case \"B\":\n        return LineStyle.Red\n      case \"L\":\n        return LineStyle.Black\n      case \"N\":\n        return LineStyle.Orange\n\n      default:\n        return LineStyle.Red\n    }\n  }\n\n  const crossingLinesData: ChartConfig[\"crossingLinesData\"] = {\n    horizontalMarkers,\n    lines,\n  }\n\n  const chartTitle = \"E.J. Marey’s graphical train schedule (4:30AM - 1:30AM)\"\n\n  const getXAxisLabel: ChartConfig[\"getXAxisLabel\"] = (date) =>\n    MareysSchedules.convertDateToString(date)\n\n  const onPointClick: ChartConfig[\"onPointClick\"] = (point) => {\n    window.open(\n      `https://www.google.com/search?${qs.stringify({\n        q: `Station California ${point.horizontalMarker.label}`,\n      })}`\n    )\n  }\n\n  return {\n    chartTitle,\n    crossingLinesData,\n    getLineStyle,\n    getLineTitle,\n    getPointTitle,\n    getXAxisLabel,\n    onPointClick,\n    rootElId: CONTAINER_ID,\n  }\n}\n","import { renderChart } from \"./crossing-lines-chart\"\nimport { createChartConfig } from \"./mareys-schedule-chart-config\"\nimport {\n  CONTAINER_ID,\n  RANGE_ID,\n  setupControls,\n} from \"./mareys-schedule-controls\"\nimport { MareysSchedules } from \"./mareys-schedule-data-model\"\n\n// @TODO: Add interaction on click\n\nconst main = async () => {\n  const schedules = await MareysSchedules.fetchAndCreateSchedules()\n\n  const chartConfig = createChartConfig(schedules)\n\n  const { refresh: updateScheduleLimits } = renderChart(chartConfig)\n\n  setupControls(updateScheduleLimits)\n}\n\nexport { CONTAINER_ID, RANGE_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps, JQUERYUI } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, {\n  CONTAINER_ID,\n  RANGE_ID,\n} from \"@/demos/mareys-schedule/mareys-schedule\"\n\nconst MareysSchedule = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[JQUERYUI.STYLE]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[JQUERYUI.SCRIPT]}\n  >\n    <div>\n      <div id={RANGE_ID} />\n    </div>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default MareysSchedule\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","LineStyle","axis","lineStyleToClassName","Red","Orange","Black","margin","height","renderChart","chartConfig","crossingLinesData","rootElId","horizontalMarkers","lines","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","linePathClass","slice","pointCircleClass","filterId","clipId","refresh","limits","timeStart","timeEnd","x","scaleTime","domain","range","y","scaleLinear","xAxisTop","axisTop","ticks","tickFormat","getXAxisLabel","xAxisBottom","axisBottom","svg","select","text","append","attr","chartTitle","style","deviation","id","slope","filter","feMerge","filterBlackOpacity","extent","horizontalMarker","position","horizontalMarkersSelection","selectAll","data","enter","label","styles","call","linesSelection","crossingLine","lineStyle","getLineStyle","on","line","lineD3","point","points","getLineTitle","onPointClick","getPointTitle","$","tooltip","track","redraw","timeFormatStr","parseTime","timeStr","timeDate","timeParse","getParseTime","getHours","setDate","getDate","MareysSchedules","schedulesData","this","fetchAndCreateSchedules","tsv","ROOT_PATH","originalItems","stations","trains","map","train","trainIndex","key","test","stopFragments","split","distance","name","zone","direction","number","stops","station","time","trainId","type","convertDateToString","date","timeFormat","convertStringToDate","dateStr","getTrainTitle","trainData","firstStop","lastStop","getStations","getTrains","getTrainsMap","reduce","acc","CONTAINER_ID","RANGE_ID","setupControls","updateScheduleLimits","slider","change","timeLimits","times","forEach","limit","wholeMinutes","fragment","hours","Math","floor","minutes","finalTime","convertLimitsToTimes","createChartConfig","schedules","horizontalMarkerMap","stop","lineId","trainsMap","ampm","getMinutes","formatAMPM","window","open","qs","q","main","pageContext","links","JQUERYUI","scripts"],"sourceRoot":""}