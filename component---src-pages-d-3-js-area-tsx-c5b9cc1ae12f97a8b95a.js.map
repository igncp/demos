{"version":3,"sources":["webpack://demos/./src/demos/area/area.module.css","webpack://demos/./src/demos/area/area-chart.ts","webpack://demos/./src/demos/area/area-chart-data.ts","webpack://demos/./src/demos/area/area.ts","webpack://demos/./src/pages/d3js/area.tsx"],"names":["axis","renderChart","chartConfig","items","rootElId","elWidth","document","getElementById","getBoundingClientRect","width","isSmallDevice","margin","height","svg","select","append","attr","text","getChartTitle","style","id","deviation","slope","filter","feMerge","filterBlackOpacity","xMax","max","getItemXValue","xMin","min","yMax","getItemYValue","yMin","xScale","scaleLinear","domain","range","yScale","extractXScale","d","extractYScale","ticks","scaleQuantize","Array","from","length","map","_","i","getSmallDeviceTicksScale","xAxis","axisBottom","tickFormat","format","yAxis","axisLeft","tickSize","styles","call","selectAll","area","areaD3","x","y0","y1","line","lineD3","y","datum","voronoi","Delaunay","data","enter","item","getItemId","voronoiGroup","renderCell","on","_e","_mouseEvent","getItemTitle","$","tooltip","track","toggleVoronoi","currentClass","showVoronoi","newClass","includes","replace","trim","fetchData","csv","ROOT_PATH","result","p","index","point","year","percent","addEventListener","e","preventDefault","pageContext","links","main","scripts","className","type"],"mappings":"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","file":"component---src-pages-d-3-js-area-tsx-c5b9cc1ae12f97a8b95a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var areaChart = \"area-module--areaChart--18U7a\";\nexport var line = \"area-module--line--2fHic\";\nexport var area = \"area-module--area--1qZz_\";\nexport var axis = \"area-module--axis--3OeLF\";\nexport var chartTitle = \"area-module--chartTitle--2vijK\";\nexport var x = \"area-module--x--3vSV5\";\nexport var minor = \"area-module--minor--3a3G3\";\nexport var y = \"area-module--y--3xyOd\";\nexport var voronoi = \"area-module--voronoi--1NIYY\";\nexport var showVoronoi = \"area-module--showVoronoi--1QHCR\";\nexport var point = \"area-module--point--29v1-\";","import {\n  Selection,\n  area as areaD3,\n  axisBottom,\n  axisLeft,\n  format,\n  line as lineD3,\n  max,\n  min,\n  scaleLinear,\n  scaleQuantize,\n  select,\n} from \"d3\"\nimport { Delaunay } from \"d3-delaunay\"\n\nimport * as styles from \"./area.module.css\"\n\nconst filterBlackOpacity = (\n  id: string,\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>,\n  deviation: number,\n  slope: number\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nexport type ChartConfig<A> = {\n  getChartTitle: () => string\n  getItemId: (a: A) => number\n  getItemTitle: (a: A) => string\n  getItemXValue: (a: A) => number\n  getItemYValue: (a: A) => number\n  items: A[]\n  rootElId: string\n}\n\ntype ChartReturn = {\n  toggleVoronoi: () => void\n}\n\nexport const renderChart = <A>(chartConfig: ChartConfig<A>): ChartReturn => {\n  const { items, rootElId } = chartConfig\n  const { width: elWidth } = (document.getElementById(\n    rootElId\n  ) as HTMLElement).getBoundingClientRect()\n  const isSmallDevice = elWidth < 500\n\n  const margin = {\n    bottom: 50,\n    left: isSmallDevice ? 50 : 70,\n    right: isSmallDevice ? 10 : 50,\n    top: 50,\n  }\n\n  const height = 400 - margin.top - margin.bottom\n  const titleYOffset = -15\n  const axisTickSize = 10\n\n  const width = elWidth - margin.left - margin.right\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n    .attr(\"class\", styles.areaChart)\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", styles.chartTitle)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", `translate(${width / 2},${titleYOffset})`)\n    .text(chartConfig.getChartTitle())\n    .style(\"font-weight\", \"bold\")\n\n  filterBlackOpacity(\"points\", svg, 2, 0.5)\n\n  const xMax = max(items, chartConfig.getItemXValue) as number\n  const xMin = min(items, chartConfig.getItemXValue) as number\n\n  const yMax = max(items, chartConfig.getItemYValue) as number\n  const yMin = min(items, chartConfig.getItemYValue) as number\n\n  const xScale = scaleLinear().domain([xMin, xMax]).range([0, width])\n  const yScale = scaleLinear()\n    .domain([yMax + 0.05, yMin - 0.05])\n    .range([0, height])\n\n  const extractXScale = (d: A) => xScale(chartConfig.getItemXValue(d))\n  const extractYScale = (d: A) => yScale(chartConfig.getItemYValue(d))\n\n  const getSmallDeviceTicksScale = () =>\n    scaleQuantize()\n      .domain([0, 500])\n      .range(Array.from({ length: 6 }).map((_, i) => i))\n\n  const ticks = isSmallDevice ? getSmallDeviceTicksScale()(elWidth) : null\n\n  const xAxis = axisBottom(xScale).tickFormat(format(\".0f\")).ticks(ticks)\n  const yAxis = axisLeft(yScale)\n    .tickFormat(format(\".0%\"))\n    .tickSize(axisTickSize)\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", `${styles.x} ${styles.axis}`)\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(xAxis)\n    .selectAll(\"text\")\n    .attr(\"dy\", \"1.25em\")\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", `${styles.y} ${styles.axis}`)\n    .call(yAxis)\n    .selectAll(\"text\")\n    .attr(\"dx\", \"-.25em\")\n\n  const area = areaD3<A>().x(extractXScale).y0(height).y1(extractYScale)\n  const line = lineD3<A>().x(extractXScale).y(extractYScale)\n\n  svg\n    .append(\"path\")\n    .datum(items)\n    .attr(\"class\", styles.line)\n    .attr(\"d\", line)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  svg\n    .append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n\n  svg\n    .append(\"path\")\n    .datum(items)\n    .attr(\"class\", styles.area)\n    .attr(\"d\", area)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  const voronoi = Delaunay.from(items, extractXScale, extractYScale).voronoi([\n    -margin.left,\n    -margin.top,\n    width + margin.right,\n    height + margin.bottom,\n  ])\n\n  const mouseover = (_e: unknown, d: A) => {\n    select(`.point-${chartConfig.getItemId(d)}`).style(\"display\", \"block\")\n  }\n\n  const mouseleave = (_mouseEvent: unknown, d: A) => {\n    select(`.point-${chartConfig.getItemId(d)}`).style(\"display\", \"none\")\n  }\n\n  svg\n    .selectAll(\"circle\")\n    .data(items)\n    .enter()\n    .append(\"circle\")\n    .attr(\n      \"transform\",\n      (item: A) => `translate(${extractXScale(item)},${extractYScale(item)})`\n    )\n    .attr(\"r\", \"5px\")\n    .attr(\n      \"class\",\n      (item) => `${styles.point} point-${chartConfig.getItemId(item)}`\n    )\n    .style(\"filter\", \"url(#drop-shadow-points)\")\n\n  const voronoiGroup = svg.append(\"g\").attr(\"class\", styles.voronoi)\n\n  voronoiGroup\n    .selectAll(\"path\")\n    .data(items)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", (item) => voronoi.renderCell(chartConfig.getItemId(item)))\n    .on(\"mouseover\", mouseover)\n    .on(\"mouseleave\", mouseleave)\n    .attr(\"class\", \"voronoi-group\")\n    .attr(\"title\", chartConfig.getItemTitle)\n\n  $(\".voronoi-group\").tooltip({\n    track: true,\n  })\n\n  return {\n    toggleVoronoi: () => {\n      const currentClass = voronoiGroup.attr(\"class\")\n      const { showVoronoi } = styles\n\n      const newClass = currentClass.includes(showVoronoi)\n        ? currentClass.replace(showVoronoi, \"\").trim()\n        : `${currentClass} ${showVoronoi}`\n\n      voronoiGroup.attr(\"class\", newClass)\n    },\n  }\n}\n","import { csv } from \"d3\"\n\nimport { ChartConfig } from \"./area-chart\"\n\ntype PointBase = {\n  percent: number\n  year: number\n}\n\nexport type Point = PointBase & {\n  index: number\n}\n\nexport const fetchData = async (): Promise<Point[]> => {\n  const result = (await (csv(\n    `${ROOT_PATH}data/d3js/area/data.csv`\n  ) as unknown)) as PointBase[]\n\n  return result.map((p, index) => ({\n    ...p,\n    index,\n  }))\n}\n\ntype Config = ChartConfig<Point>\n\nconst getItemXValue: Config[\"getItemXValue\"] = (point) => point.year\nconst getItemYValue: Config[\"getItemYValue\"] = (point) => point.percent / 100\nconst getItemId: Config[\"getItemId\"] = (point) => point.index\nconst getItemTitle: Config[\"getItemTitle\"] = (point: Point) =>\n  `Year: ${point.year}, Percent: ${point.percent}%`\nconst getChartTitle = () =>\n  \"Share of top decile [aka top 10%] in national income\"\n\nexport const createChartConfig = (items: Point[]): ChartConfig<Point> => ({\n  getChartTitle,\n  getItemId,\n  getItemTitle,\n  getItemXValue,\n  getItemYValue,\n  items,\n  rootElId: \"chart\",\n})\n","import { renderChart } from \"./area-chart\"\nimport { Point, createChartConfig, fetchData } from \"./area-chart-data\"\n\nconst main = async () => {\n  const data = await fetchData()\n  const chartConfig = createChartConfig(data)\n\n  const { toggleVoronoi } = renderChart<Point>(chartConfig)\n\n  ;(document.getElementById(\"toggle-voronoi\") as HTMLElement).addEventListener(\n    \"click\",\n    (e) => {\n      e.preventDefault()\n\n      toggleVoronoi()\n    }\n  )\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/area/area\"\n\nconst Area = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <form>\n      <button className=\"btn btn-info\" id=\"toggle-voronoi\" type=\"button\">\n        Toggle Voronoi\n      </button>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Area\n"],"sourceRoot":""}