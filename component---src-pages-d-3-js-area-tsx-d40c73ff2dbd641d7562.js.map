{"version":3,"sources":["webpack://demos/./src/demos/area/area.module.css","webpack://demos/./src/demos/area/area.ts","webpack://demos/./src/pages/d3js/area.tsx"],"names":["axis","texts","point","year","percent","renderChart","data","rootElId","elWidth","document","getElementById","getBoundingClientRect","width","isSmallDevice","margin","height","svg","select","append","attr","text","style","filterBlackOpacity","xMax","max","xMin","min","yMax","yMin","xScale","scaleLinear","domain","range","yScale","ticks","scaleQuantize","Array","from","length","map","_","i","getSmallDeviceTicksScale","xAxis","axisBottom","tickFormat","format","yAxis","axisLeft","tickSize","styles","call","selectAll","area","areaD3","x","y0","y1","line","lineD3","d","y","datum","voronoi","Delaunay","enter","_point","pointIndex","voronoiGroup","index","renderCell","on","_e","_mouseEvent","toggleVoronoi","currentClass","showVoronoi","newClass","includes","replace","trim","id","deviation","slope","filter","feMerge","csv","ROOT_PATH","addEventListener","e","preventDefault","pageContext","main","className","type"],"mappings":"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","file":"component---src-pages-d-3-js-area-tsx-d40c73ff2dbd641d7562.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var areaChart = \"area-module--areaChart--18U7a\";\nexport var line = \"area-module--line--2fHic\";\nexport var area = \"area-module--area--1qZz_\";\nexport var axis = \"area-module--axis--3OeLF\";\nexport var chartTitle = \"area-module--chartTitle--2vijK\";\nexport var x = \"area-module--x--3vSV5\";\nexport var minor = \"area-module--minor--3a3G3\";\nexport var y = \"area-module--y--3xyOd\";\nexport var voronoi = \"area-module--voronoi--1NIYY\";\nexport var showVoronoi = \"area-module--showVoronoi--1QHCR\";\nexport var point = \"area-module--point--29v1-\";","import {\n  Selection,\n  area as areaD3,\n  axisBottom,\n  axisLeft,\n  csv,\n  format,\n  line as lineD3,\n  max,\n  min,\n  scaleLinear,\n  scaleQuantize,\n  select,\n} from \"d3\"\nimport { Delaunay } from \"d3-delaunay\"\n\nimport * as styles from \"./area.module.css\"\n\ntype Point = {\n  index?: number\n  percent: number\n  year: number\n}\n\nconst fetchData = (): Promise<Point[]> =>\n  (csv(`${ROOT_PATH}data/d3js/area/data.csv`) as unknown) as Promise<Point[]>\n\nconst texts = {\n  pointTitle: (point: Point) =>\n    `Year: ${point.year}, Percent: ${point.percent}%`,\n  title: \"Share of top decile [aka top 10%] in national income\",\n}\n\ntype RenderChart = (o: {\n  data: Point[]\n  rootElId: string\n}) => {\n  toggleVoronoi: () => void\n}\n\nconst renderChart: RenderChart = ({ data, rootElId }) => {\n  const { width: elWidth } = (document.getElementById(\n    rootElId\n  ) as HTMLElement).getBoundingClientRect()\n  const isSmallDevice = elWidth < 500\n\n  const margin = {\n    bottom: 50,\n    left: isSmallDevice ? 50 : 70,\n    right: isSmallDevice ? 10 : 50,\n    top: 50,\n  }\n\n  const height = 400 - margin.top - margin.bottom\n  const titleYOffset = -15\n  const axisTickSize = 10\n\n  const width = elWidth - margin.left - margin.right\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n    .attr(\"class\", styles.areaChart)\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", styles.chartTitle)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", `translate(${width / 2},${titleYOffset})`)\n    .text(texts.title)\n    .style(\"font-weight\", \"bold\")\n\n  filterBlackOpacity(\"points\", svg, 2, 0.5)\n\n  const xMax = max(data, (point) => point.year) as number\n  const xMin = min(data, (point) => point.year) as number\n\n  const yMax = max(data, (point) => point.percent / 100) as number\n  const yMin = min(data, (point) => point.percent / 100) as number\n\n  const xScale = scaleLinear().domain([xMin, xMax]).range([0, width])\n  const yScale = scaleLinear()\n    .domain([yMax + 0.05, yMin - 0.05])\n    .range([0, height])\n\n  const getSmallDeviceTicksScale = () =>\n    scaleQuantize()\n      .domain([0, 500])\n      .range(Array.from({ length: 6 }).map((_, i) => i))\n\n  const ticks = isSmallDevice ? getSmallDeviceTicksScale()(elWidth) : null\n\n  const xAxis = axisBottom(xScale).tickFormat(format(\".0f\")).ticks(ticks)\n  const yAxis = axisLeft(yScale)\n    .tickFormat(format(\".0%\"))\n    .tickSize(axisTickSize)\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", `${styles.x} ${styles.axis}`)\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(xAxis)\n    .selectAll(\"text\")\n    .attr(\"dy\", \"1.25em\")\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", `${styles.y} ${styles.axis}`)\n    .call(yAxis)\n    .selectAll(\"text\")\n    .attr(\"dx\", \"-.25em\")\n\n  const area = areaD3<Point>()\n    .x((point: Point) => xScale(point.year))\n    .y0(height)\n    .y1((point: Point) => yScale(point.percent / 100))\n\n  const line = lineD3<Point>()\n    .x((d) => xScale(d.year))\n    .y((d) => yScale(d.percent / 100))\n\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"class\", styles.line)\n    .attr(\"d\", line)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  svg\n    .append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"class\", styles.area)\n    .attr(\"d\", area)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  const voronoi = Delaunay.from(\n    data,\n    (point) => xScale(point.year),\n    (point) => yScale(point.percent / 100)\n  ).voronoi([\n    -margin.left,\n    -margin.top,\n    width + margin.right,\n    height + margin.bottom,\n  ])\n\n  const mouseover = (_e: unknown, d: Point) => {\n    select(`.point-${d.index}`).style(\"display\", \"block\")\n  }\n\n  const mouseleave = (_mouseEvent: unknown, point: Point) => {\n    select(`.point-${point.index}`).style(\"display\", \"none\")\n  }\n\n  svg\n    .selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\n      \"transform\",\n      (point: Point) =>\n        `translate(${xScale(point.year)},${yScale(point.percent / 100)})`\n    )\n    .attr(\"r\", \"5px\")\n    .attr(\n      \"class\",\n      (_point: Point, pointIndex: number) =>\n        `${styles.point} point-${pointIndex}`\n    )\n    .style(\"filter\", \"url(#drop-shadow-points)\")\n\n  const voronoiGroup = svg.append(\"g\").attr(\"class\", styles.voronoi)\n\n  voronoiGroup\n    .selectAll(\"path\")\n    .data(data)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", (point: Point, pointIndex: number) => {\n      point.index = pointIndex\n\n      return voronoi.renderCell(pointIndex)\n    })\n    .on(\"mouseover\", mouseover)\n    .on(\"mouseleave\", mouseleave)\n    .append(\"title\")\n    .text(texts.pointTitle)\n\n  return {\n    toggleVoronoi: () => {\n      const currentClass = voronoiGroup.attr(\"class\")\n      const { showVoronoi } = styles\n\n      const newClass = currentClass.includes(showVoronoi)\n        ? currentClass.replace(showVoronoi, \"\").trim()\n        : `${currentClass} ${showVoronoi}`\n\n      voronoiGroup.attr(\"class\", newClass)\n    },\n  }\n}\n\nconst filterBlackOpacity = (\n  id: string,\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>,\n  deviation: number,\n  slope: number\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nconst main = async () => {\n  const data = await fetchData()\n  const rootElId = \"chart\"\n\n  const { toggleVoronoi } = renderChart({\n    data,\n    rootElId,\n  })\n\n  ;(document.getElementById(\"toggle-voronoi\") as HTMLElement).addEventListener(\n    \"click\",\n    (e) => {\n      e.preventDefault()\n\n      toggleVoronoi()\n    }\n  )\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/area/area\"\n\nconst Area = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form>\n      <button className=\"btn btn-info\" id=\"toggle-voronoi\" type=\"button\">\n        Toggle Voronoi\n      </button>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Area\n"],"sourceRoot":""}