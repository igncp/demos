{"version":3,"file":"component---src-pages-d-3-js-bars-tsx-f8cf570b8abbd75d94d4.js","mappings":"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","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/demos/bars/bars-chart-drag.ts","webpack://demos/./src/demos/bars/bars.module.css","webpack://demos/./src/demos/bars/bars-chart.ts","webpack://demos/./src/demos/bars/ui-constants.ts","webpack://demos/./src/demos/bars/bars-chart-config.ts","webpack://demos/./src/demos/bars/bars.ts","webpack://demos/./src/pages/d3js/bars.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import { D3DragEvent, Selection, drag as dragD3 } from \"d3\"\n\nclass DragModule<DragDatum> {\n  private readonly elements: {\n    chart: Selection<SVGGElement, DragDatum, HTMLElement, unknown>\n    dragArea: Selection<SVGGElement, DragDatum, HTMLElement, unknown>\n    svg: Selection<SVGSVGElement, DragDatum, HTMLElement, unknown>\n  }\n\n  private readonly state: {\n    dragX: number\n    marginLeft: number\n    width: number\n  } = {\n    dragX: 0,\n    marginLeft: 0,\n    width: 0,\n  }\n\n  public constructor({\n    chart,\n    dragArea,\n    svg,\n  }: DragModule<DragDatum>[\"elements\"]) {\n    this.elements = {\n      chart,\n      dragArea,\n      svg,\n    }\n  }\n\n  public setDimensions({\n    marginLeft,\n    width,\n  }: {\n    marginLeft: number\n    width: number\n  }) {\n    this.state.width = width\n    this.state.marginLeft = marginLeft\n  }\n\n  public refresh() {\n    const {\n      elements: { svg },\n    } = this\n\n    const diffWidth = this.getDragDiffWidth()\n\n    svg.style(\"cursor\", diffWidth > 0 ? \"move\" : \"default\")\n  }\n\n  public reset() {\n    this.refresh()\n\n    const {\n      elements: { svg },\n    } = this\n\n    this.state.dragX = 0\n\n    const handler = (\n      dragEvent: D3DragEvent<SVGSVGElement, unknown, unknown>\n    ) => {\n      this.state.dragX += dragEvent.dx\n\n      const diffWidth = this.getDragDiffWidth()\n\n      if (diffWidth > 0) {\n        this.state.dragX = Math.min(this.state.dragX, 0)\n        this.state.dragX = Math.max(this.state.dragX, -diffWidth)\n      } else {\n        this.state.dragX = 0\n      }\n\n      this.updateDrag()\n    }\n\n    const dragBehavior = dragD3<SVGSVGElement, DragDatum>().on(\"drag\", handler)\n\n    this.updateDrag()\n\n    svg.call(dragBehavior).on(\"drag\", handler)\n  }\n\n  private updateDrag() {\n    this.elements.dragArea.attr(\"transform\", `translate(${this.state.dragX},0)`)\n  }\n\n  private getDragDiffWidth() {\n    const {\n      elements: { chart },\n      state: { marginLeft, width: currentWidth },\n    } = this\n\n    const comparedWidth = currentWidth - marginLeft\n\n    const { width: svgGWidth } = chart.node()!.getClientRects()[0]\n\n    return svgGWidth - comparedWidth\n  }\n}\n\nexport { DragModule }\n","// extracted by mini-css-extract-plugin\nexport var addItemButton = \"bars-module--addItemButton--4a90d\";\nexport var barsChart = \"bars-module--barsChart--e89b5\";\nexport var axis = \"bars-module--axis--8e5e1\";","import {\n  Selection,\n  axisBottom,\n  axisLeft,\n  extent,\n  max,\n  range,\n  scaleLinear,\n  select,\n} from \"d3\"\nimport $ from \"jquery\"\nimport \"jquery-ui/themes/base/all.css\"\nimport { v1 as uuidv1 } from \"uuid\"\n\nimport { DragModule } from \"./bars-chart-drag\"\nimport * as styles from \"./bars.module.css\"\n\nif (typeof window !== \"undefined\") {\n  require(\"jquery-ui/ui/widgets/tooltip\")\n}\n\ntype ChartData = {\n  id: number\n  metric: number\n}\n\nconst height = 500\nconst smallMarginWidth = 600\n\nconst margin = { left: 160, top: 100 }\nconst floor = height - margin.top * 2\n\nconst barWidth = 30\nconst barHeight = 7\n\nconst colours = [\"#323247\", \"#7C7CC9\", \"#72B66C\", \"#429742\"]\nconst barYFn = (barItem: ChartData) => floor - barHeight * barItem.metric\nconst barHeightFn = (barItem: ChartData) => barItem.metric * barHeight\n\ntype ChartConfig = {\n  bars: ChartData[]\n  rootElId: string\n}\n\ntype ChartElements = {\n  chart: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n  dragArea: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n  svg: Selection<SVGSVGElement, ChartData, HTMLElement, unknown>\n  xAxisG: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n  xAxisText: Selection<SVGTextElement, ChartData, HTMLElement, unknown>\n  yAxisG: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n  yAxisText: Selection<SVGTextElement, ChartData, HTMLElement, unknown>\n}\n\ntype Interval = ReturnType<typeof setInterval>\ntype ColorFn = (c: ChartData) => string\n\nclass BarsChart {\n  private readonly bars: ChartData[]\n  private readonly elements: ChartElements\n  private readonly rootElId: string\n  private readonly barClassName: string\n  private readonly dragModule: DragModule<ChartData>\n  private color: ColorFn | null\n  private readonly state: {\n    interval: Interval | null\n  } = {\n    interval: null,\n  }\n\n  public constructor({ bars, rootElId }: ChartConfig) {\n    this.bars = bars\n    this.rootElId = rootElId\n    this.barClassName = `bars-${uuidv1().slice(0, 6)}`\n\n    const svg = select<HTMLElement, ChartData>(`#${rootElId}`).append(\"svg\")\n\n    svg\n      .append(\"g\")\n      .append(\"filter\")\n      .attr(\"height\", \"300%\")\n      .attr(\"x\", \"-100%\")\n      .attr(\"y\", \"-100%\")\n      .attr(\"id\", \"blur\")\n      .attr(\"width\", \"300%\")\n      .append(\"feGaussianBlur\")\n      .attr(\"stdDeviation\", \"2 2\")\n\n    const dragArea = svg.append(\"g\")\n    const chart = dragArea.append(\"g\")\n    const xAxisG = chart.append(\"g\")\n    const xAxisText = xAxisG.append(\"text\")\n    const yAxisG = chart.append(\"g\")\n    const yAxisText = yAxisG.append(\"text\")\n\n    this.elements = {\n      chart,\n      dragArea,\n      svg,\n      xAxisG,\n      xAxisText,\n      yAxisG,\n      yAxisText,\n    }\n\n    this.dragModule = new DragModule({\n      chart,\n      dragArea,\n      svg,\n    })\n\n    this.color = null\n\n    this.render()\n\n    window.addEventListener(\"resize\", this.handleResize)\n  }\n\n  public addBar(newBar: ChartData) {\n    this.bars.push(newBar)\n  }\n\n  public getBars(): ChartData[] {\n    return this.bars.slice()\n  }\n\n  public refresh() {\n    this.drawRectangles()\n    this.redraw()\n  }\n\n  private render() {\n    const { bars, rootElId } = this\n    const { width } = (\n      document.getElementById(rootElId) as HTMLElement\n    ).getBoundingClientRect()\n\n    const colorScale = scaleLinear()\n      .domain(extent(bars, (bar) => bar.metric) as [number, number])\n      .range([0, 1])\n    const heatmapColour = scaleLinear<string>()\n      .domain(range(0, 1, 1.0 / colours.length))\n      .range(colours)\n\n    const color = (barItem: ChartData) =>\n      heatmapColour(colorScale(barItem.metric))\n\n    this.color = color\n\n    const {\n      elements: { chart, svg, xAxisG, xAxisText, yAxisG, yAxisText },\n    } = this\n\n    svg\n      .attr(\"height\", height)\n      .attr(\"width\", width)\n      .attr(\"class\", styles.barsChart)\n\n    const marginLeft = width > smallMarginWidth ? margin.left : 80\n\n    this.dragModule.setDimensions({\n      marginLeft,\n      width,\n    })\n\n    chart.attr(\"transform\", `translate(${marginLeft},${margin.top})`)\n\n    if (this.state.interval) {\n      clearInterval(this.state.interval)\n    }\n\n    this.state.interval = setInterval(this.getIntervalFn(), 1000)\n\n    const x = scaleLinear()\n      .domain([0.5, bars.length + 0.5])\n      .range([1, barWidth * bars.length])\n\n    const y = scaleLinear()\n      .domain([0, max(bars, (bar) => bar.metric) as number])\n      .rangeRound([\n        0,\n        -1 * barHeight * (max(bars, (bar) => bar.metric) as number),\n      ])\n\n    xAxisG\n      .attr(\"class\", `xAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisBottom(x))\n\n    xAxisText\n      .attr(\"transform\", `translate(${(barWidth * bars.length) / 2} ,0)`)\n      .attr(\"class\", \"xAxisLabel\")\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Number\")\n\n    yAxisG\n      .attr(\"class\", `yAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisLeft(y))\n\n    yAxisText\n      .attr(\"transform\", `translate(-30,${(-1 * (height - 60)) / 2})`)\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\")\n\n    this.dragModule.reset()\n    this.drawRectangles()\n  }\n\n  private clearInterval() {\n    if (this.state.interval) {\n      clearInterval(this.state.interval)\n    }\n  }\n\n  private getBarsSelection() {\n    const {\n      elements: { chart },\n    } = this\n\n    return chart.selectAll<SVGRectElement, ChartData>(\"rect\")\n  }\n\n  private drawRectangles() {\n    const { bars, color } = this\n\n    this.getBarsSelection()\n      .data(bars)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (...[, barIndex]) => barWidth * barIndex)\n      .attr(\"y\", barYFn)\n      .attr(\"width\", barWidth)\n      .attr(\"height\", barHeightFn)\n      .attr(\"class\", this.barClassName)\n      .attr(\"fill\", (barItem) => color!(barItem))\n      .on(\"mouseover\", (...[, mouseBar]) => {\n        this.getBarsSelection().style(\"filter\", (bar) =>\n          bar.id === mouseBar.id ? null : \"url(#blur)\"\n        )\n        this.clearInterval()\n      })\n      .on(\"mouseleave\", () => {\n        this.getBarsSelection().style(\"filter\", null)\n        this.clearInterval()\n        this.state.interval = setInterval(this.getIntervalFn(), 1000)\n      })\n      .attr(\"title\", (bar) => bar.metric)\n\n    $(`.${this.barClassName}`).tooltip({\n      track: true,\n    })\n  }\n\n  private getIntervalFn() {\n    return () => {\n      const { bars } = this\n\n      bars.unshift(bars.pop() as ChartData)\n\n      this.redraw()\n    }\n  }\n\n  private redraw() {\n    const {\n      bars,\n      color,\n      elements: { chart },\n    } = this\n\n    const newX = scaleLinear()\n      .domain([0.5, bars.length + 0.5])\n      .range([1, barWidth * bars.length])\n\n    const newAxis = axisBottom(newX)\n\n    chart.select<SVGGElement>(\".xAxis\").transition().duration(500).call(newAxis)\n\n    chart\n      .select(\".xAxisLabel\")\n      .transition()\n      .duration(500)\n      .attr(\"transform\", `translate(${(barWidth * bars.length) / 2} ,0)`)\n\n    chart\n      .selectAll(\"rect\")\n      .data(bars)\n      .transition()\n      .duration(500)\n      .attr(\"y\", barYFn)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", color!)\n      .select(\"title\")\n      .text((barItem) => barItem.metric)\n\n    this.dragModule.refresh()\n  }\n\n  private readonly handleResize = () => {\n    this.render()\n  }\n}\n\nexport { BarsChart, ChartConfig }\n","const CONTAINER_ID = \"chart\"\nconst ADD_BAR_BUTTON_ID = \"add-bar\"\n\nexport { CONTAINER_ID, ADD_BAR_BUTTON_ID }\n","import { ChartConfig } from \"./bars-chart\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\ntype BarData = number\n\nconst fetchData = async (): Promise<BarData[]> => {\n  const rawData = await fetch(`${ROOT_PATH}data/d3js/bars/data.json`)\n\n  return rawData.json()\n}\n\nconst createChartConfig = ({ bars }: { bars: BarData[] }): ChartConfig => ({\n  bars: bars.map((...[metric, metricIndex]) => ({\n    id: metricIndex,\n    metric,\n  })),\n  rootElId: CONTAINER_ID,\n})\n\nexport { createChartConfig, fetchData }\n","import { max } from \"d3\"\n\nimport { BarsChart } from \"./bars-chart\"\nimport { createChartConfig, fetchData } from \"./bars-chart-config\"\nimport { ADD_BAR_BUTTON_ID, CONTAINER_ID } from \"./ui-constants\"\n\nconst main = async () => {\n  const initialBars = await fetchData()\n\n  const chartConfig = createChartConfig({ bars: initialBars })\n\n  const barsChart = new BarsChart(chartConfig)\n\n  const addItemEl = document.getElementById(ADD_BAR_BUTTON_ID) as HTMLElement\n\n  addItemEl.addEventListener(\"click\", () => {\n    const bars = barsChart.getBars()\n    const newId = max(bars, (bar) => bar.id)! + 1\n\n    barsChart.addBar({\n      id: newId,\n      metric:\n        Math.floor(Math.random() * (max(bars, (bar) => bar.metric) as number)) +\n        1,\n    })\n    barsChart.refresh()\n\n    if (bars.length >= 20) {\n      addItemEl.setAttribute(\"disabled\", \"disabled\")\n    }\n  })\n}\n\nexport { ADD_BAR_BUTTON_ID, CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { ADD_BAR_BUTTON_ID, CONTAINER_ID } from \"@/demos/bars/bars\"\nimport * as styles from \"@/demos/bars/bars.module.css\"\n\nconst Bars = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form>\n      <button\n        className={`btn btn-info ${styles.addItemButton}`}\n        id={ADD_BAR_BUTTON_ID}\n        type=\"button\"\n      >\n        Add item\n      </button>\n    </form>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Bars\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","DragModule","chart","dragArea","svg","state","dragX","marginLeft","width","this","elements","setDimensions","refresh","diffWidth","getDragDiffWidth","style","reset","handler","dragEvent","dx","Math","min","max","updateDrag","dragBehavior","dragD3","on","call","attr","comparedWidth","getClientRects","axis","window","require","margin","floor","barWidth","colours","barYFn","barItem","metric","barHeightFn","BarsChart","bars","rootElId","interval","handleResize","render","barClassName","uuidv1","slice","select","append","xAxisG","xAxisText","yAxisG","yAxisText","dragModule","color","addEventListener","addBar","newBar","getBars","drawRectangles","redraw","document","getElementById","getBoundingClientRect","colorScale","scaleLinear","domain","extent","bar","range","heatmapColour","clearInterval","setInterval","getIntervalFn","x","y","rangeRound","styles","axisBottom","text","axisLeft","getBarsSelection","selectAll","data","enter","barIndex","mouseBar","id","$","tooltip","track","unshift","pop","newX","newAxis","transition","duration","CONTAINER_ID","ADD_BAR_BUTTON_ID","fetchData","fetch","ROOT_PATH","rawData","json","main","initialBars","chartConfig","map","metricIndex","barsChart","addItemEl","newId","setAttribute","pageContext","className","type"],"sourceRoot":""}