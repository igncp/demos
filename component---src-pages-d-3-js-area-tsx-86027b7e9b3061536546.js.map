{"version":3,"sources":["webpack://demos/./src/demos/area/area.ts","webpack://demos/./src/pages/d3js/area.tsx"],"names":["texts","point","year","percent","margin","height","renderChart","data","rootElId","width","document","getElementById","getBoundingClientRect","svg","select","append","attr","text","style","filterBlackOpacity","xMax","max","xMin","min","yMax","yMin","xScale","scaleLinear","domain","range","yScale","xAxis","axisBottom","tickFormat","format","tickSize","yAxis","axisLeft","call","selectAll","area","areaD3","x","y0","y1","line","lineD3","d","y","datum","voronoi","Delaunay","enter","_point","pointIndex","voronoiGroup","index","renderCell","on","_e","_mouseEvent","toggleVoronoi","currentClass","newClass","includes","replace","trim","id","deviation","slope","filter","feMerge","csv","ROOT_PATH","addEventListener","e","preventDefault","pageContext","main","className","type"],"mappings":"yNAyBMA,EACQ,SAACC,GAAD,MACV,SAASA,EAAMC,KAAf,cAAsCD,EAAME,QAA5C,KAFEH,EAGG,uDAGHI,EACI,GADJA,EAEE,GAFFA,EAGG,GAHHA,EAIC,GAGDC,EAAS,IAAMD,EAAaA,EAW5BE,EAA2B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClCC,EACHC,SAASC,eAAeH,GAA0BI,wBAChDH,MACHL,EACAA,EAEIS,GAAMC,QAAO,IAAIN,GACpBO,OAAO,OACPC,KAAK,SAAUX,EAASD,EAAaA,GACrCY,KAAK,QAASP,EAAQL,EAAcA,GACpCW,OAAO,KACPC,KAAK,YALI,aAKsBZ,EALtB,IAKqCA,EALrC,KAMTY,KAAK,QAAS,cAEjBH,EACGE,OAAO,QACPC,KAAK,QAAS,eACdA,KAAK,cAAe,UACpBA,KAAK,YAJR,aAIkCP,EAAQ,EAJ1C,YAKGQ,KAAKjB,GACLkB,MAAM,cAAe,QAExBC,EAAmB,SAAUN,EAAK,EAAG,IAErC,IAAMO,GAAOC,SAAId,GAAM,SAACN,GAAD,OAAWA,EAAMC,QAClCoB,GAAOC,SAAIhB,GAAM,SAACN,GAAD,OAAWA,EAAMC,QAElCsB,GAAOH,SAAId,GAAM,SAACN,GAAD,OAAWA,EAAME,QAAU,OAC5CsB,GAAOF,SAAIhB,GAAM,SAACN,GAAD,OAAWA,EAAME,QAAU,OAE5CuB,GAASC,WAAcC,OAAO,CAACN,EAAMF,IAAOS,MAAM,CAAC,EAAGpB,IACtDqB,GAASH,WACZC,OAAO,CAACJ,EAAO,IAAMC,EAAO,MAC5BI,MAAM,CAAC,EAAGxB,IAEP0B,GAAQC,SAAWN,GACtBO,YAAWC,SAAO,QAClBC,SA/CgB,IAgDbC,GAAQC,SAASP,GACpBG,YAAWC,SAAO,QAClBC,SAlDgB,IAoDnBtB,EACGE,OAAO,KACPC,KAAK,QAAS,UACdA,KAAK,YAHR,eAGoCX,EAHpC,KAIGiC,KAAKP,GACLQ,UAAU,QACVvB,KAAK,KAAM,UAEdH,EACGE,OAAO,KACPC,KAAK,QAAS,UACdsB,KAAKF,GACLG,UAAU,QACVvB,KAAK,KAAM,UAEd,IAAMwB,GAAOC,WACVC,GAAE,SAACzC,GAAD,OAAkByB,EAAOzB,EAAMC,SACjCyC,GAAGtC,GACHuC,IAAG,SAAC3C,GAAD,OAAkB6B,EAAO7B,EAAME,QAAU,QAEzC0C,GAAOC,WACVJ,GAAE,SAACK,GAAD,OAAOrB,EAAOqB,EAAE7C,SAClB8C,GAAE,SAACD,GAAD,OAAOjB,EAAOiB,EAAE5C,QAAU,QAE/BU,EACGE,OAAO,QACPkC,MAAM1C,GACNS,KAAK,QAAS,QACdA,KAAK,IAAK6B,GACV7B,KAAK,YAAa,cAErBH,EACGE,OAAO,YACPC,KAAK,KAAM,QACXD,OAAO,QACPC,KAAK,SAAUX,GACfW,KAAK,QAASP,GAEjBI,EACGE,OAAO,QACPkC,MAAM1C,GACNS,KAAK,QAAS,QACdA,KAAK,IAAKwB,GACVxB,KAAK,YAAa,cAErB,IAAMkC,EAAUC,SACd5C,GACA,SAACN,GAAD,OAAWyB,EAAOzB,EAAMC,SACxB,SAACD,GAAD,OAAW6B,EAAO7B,EAAME,QAAU,QAClC+C,QAAQ,EACP9C,GACAA,EACDK,EAAQL,EACRC,EAASD,IAWXS,EACG0B,UAAU,UACVhC,KAAKA,GACL6C,QACArC,OAAO,UACPC,KACC,aACA,SAACf,GAAD,mBACeyB,EAAOzB,EAAMC,MAD5B,IACqC4B,EAAO7B,EAAME,QAAU,KAD5D,OAGDa,KAAK,IAAK,OACVA,KACC,SACA,SAACqC,EAAeC,GAAhB,qBAAsDA,KAEvDpC,MAAM,SAAU,4BAEnB,IAAMqC,EAAe1C,EAAIE,OAAO,KAAKC,KAAK,QAAS,WAiBnD,OAfAuC,EACGhB,UAAU,QACVhC,KAAKA,GACL6C,QACArC,OAAO,QACPC,KAAK,KAAK,SAACf,EAAcqD,GAGxB,OAFArD,EAAMuD,MAAQF,EAEPJ,EAAQO,WAAWH,MAE3BI,GAAG,aArCY,SAACC,EAAaZ,IAC9BjC,QAAO,UAAUiC,EAAES,OAAStC,MAAM,UAAW,YAqC5CwC,GAAG,cAlCa,SAACE,EAAsB3D,IACxCa,QAAO,UAAUb,EAAMuD,OAAStC,MAAM,UAAW,WAkChDH,OAAO,SACPE,KAAKjB,GAED,CACL6D,cAAe,WACb,IAAMC,EAAeP,EAAavC,KAAK,SAEjC+C,EAAWD,EAAaE,SAAS,gBACnCF,EAAaG,QAAQ,eAAgB,IAAIC,OACtCJ,EAFU,gBAIjBP,EAAavC,KAAK,QAAS+C,MAK3B5C,EAAqB,SACzBgD,EACAtD,EACAuD,EACAC,GAEA,IACMC,EADOzD,EAAIE,OAAO,QAErBA,OAAO,UACPC,KAAK,SAAU,QACfA,KAAK,KAHO,eAGcmD,GAC1BnD,KAAK,QAAS,QACdA,KAAK,IAAK,SACVA,KAAK,IAAK,SAEbsD,EACGvD,OAAO,kBACPC,KAAK,KAAM,eACXA,KAAK,eAAgBoD,GAExBE,EAAOvD,OAAO,YAAYC,KAAK,KAAM,GAAGA,KAAK,KAAM,GACnDsD,EACGvD,OAAO,uBACPA,OAAO,WACPC,KAAK,QAASqD,GACdrD,KAAK,OAAQ,UAEhB,IAAMuD,EAAUD,EAAOvD,OAAO,WAE9BwD,EAAQxD,OAAO,eAEfwD,EAAQxD,OAAO,eAAeC,KAAK,KAAM,kBAsB3C,EAnBU,mCAAG,yGAtNVwD,SAAOC,kCAsNG,OACLlE,EADK,OAEM,QAFN,EAIeD,EAAY,CACpCC,OACAC,SAJe,UAETqD,EAJG,EAIHA,cAKNnD,SAASC,eAAe,kBAAkC+D,iBAC1D,SACA,SAACC,GACCA,EAAEC,iBAEFf,OAdO,2CAAH,qDC1NV,EAXa,SAAC,GAAD,IAAGgB,EAAH,EAAGA,YAAH,OACX,gBAAC,IAAD,CAAMC,KAAMA,EAAMD,YAAaA,GAC7B,4BACE,0BAAQE,UAAU,eAAeZ,GAAG,iBAAiBa,KAAK,UAA1D,mBAIF,uBAAKb,GAAG","file":"component---src-pages-d-3-js-area-tsx-86027b7e9b3061536546.js","sourcesContent":["import {\n  area as areaD3,\n  axisBottom,\n  axisLeft,\n  csv,\n  format,\n  line as lineD3,\n  max,\n  min,\n  scaleLinear,\n  select,\n} from \"d3\"\nimport { Delaunay } from \"d3-delaunay\"\n\nimport \"./area.styl\"\n\ntype Point = {\n  index?: number\n  percent: number\n  year: number\n}\n\nconst fetchData = (): Promise<Point[]> =>\n  (csv(`${ROOT_PATH}data/d3js/area/data.csv`) as unknown) as Promise<Point[]>\n\nconst texts = {\n  pointTitle: (point: Point) =>\n    `Year: ${point.year}, ` + `Percent: ${point.percent}%`,\n  title: \"Share of top decile [aka top 10%] in national income\",\n}\n\nconst margin = {\n  bottom: 50,\n  left: 70,\n  right: 50,\n  top: 50,\n}\n\nconst height = 400 - margin.top - margin.bottom\nconst titleYOffset = -15\nconst axisTickSize = 10\n\ntype RenderChart = (o: {\n  data: Point[]\n  rootElId: string\n}) => {\n  toggleVoronoi(): void\n}\n\nconst renderChart: RenderChart = ({ data, rootElId }) => {\n  const width =\n    (document.getElementById(rootElId) as HTMLElement).getBoundingClientRect()\n      .width -\n    margin.left -\n    margin.right\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n    .attr(\"class\", \"area-chart\")\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", \"chart-title\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", `translate(${width / 2},${titleYOffset})`)\n    .text(texts.title)\n    .style(\"font-weight\", \"bold\")\n\n  filterBlackOpacity(\"points\", svg, 2, 0.5)\n\n  const xMax = max(data, (point) => point.year) as number\n  const xMin = min(data, (point) => point.year) as number\n\n  const yMax = max(data, (point) => point.percent / 100) as number\n  const yMin = min(data, (point) => point.percent / 100) as number\n\n  const xScale = scaleLinear().domain([xMin, xMax]).range([0, width])\n  const yScale = scaleLinear()\n    .domain([yMax + 0.05, yMin - 0.05])\n    .range([0, height])\n\n  const xAxis = axisBottom(xScale)\n    .tickFormat(format(\".0f\"))\n    .tickSize(axisTickSize)\n  const yAxis = axisLeft(yScale)\n    .tickFormat(format(\".0%\"))\n    .tickSize(axisTickSize)\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(xAxis)\n    .selectAll(\"text\")\n    .attr(\"dy\", \"1.25em\")\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .selectAll(\"text\")\n    .attr(\"dx\", \"-.25em\")\n\n  const area = areaD3<Point>()\n    .x((point: Point) => xScale(point.year))\n    .y0(height)\n    .y1((point: Point) => yScale(point.percent / 100))\n\n  const line = lineD3<Point>()\n    .x((d) => xScale(d.year))\n    .y((d) => yScale(d.percent / 100))\n\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  svg\n    .append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"area\")\n    .attr(\"d\", area)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  const voronoi = Delaunay.from(\n    data,\n    (point) => xScale(point.year),\n    (point) => yScale(point.percent / 100)\n  ).voronoi([\n    -margin.left,\n    -margin.top,\n    width + margin.right,\n    height + margin.bottom,\n  ])\n\n  const mouseover = (_e: unknown, d: Point) => {\n    select(`.point-${d.index}`).style(\"display\", \"block\")\n  }\n\n  const mouseleave = (_mouseEvent: unknown, point: Point) => {\n    select(`.point-${point.index}`).style(\"display\", \"none\")\n  }\n\n  svg\n    .selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\n      \"transform\",\n      (point: Point) =>\n        `translate(${xScale(point.year)},${yScale(point.percent / 100)})`\n    )\n    .attr(\"r\", \"5px\")\n    .attr(\n      \"class\",\n      (_point: Point, pointIndex: number) => `point point-${pointIndex}`\n    )\n    .style(\"filter\", \"url(#drop-shadow-points)\")\n\n  const voronoiGroup = svg.append(\"g\").attr(\"class\", \"voronoi\")\n\n  voronoiGroup\n    .selectAll(\"path\")\n    .data(data)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", (point: Point, pointIndex: number) => {\n      point.index = pointIndex\n\n      return voronoi.renderCell(pointIndex)\n    })\n    .on(\"mouseover\", mouseover)\n    .on(\"mouseleave\", mouseleave)\n    .append(\"title\")\n    .text(texts.pointTitle)\n\n  return {\n    toggleVoronoi: () => {\n      const currentClass = voronoiGroup.attr(\"class\")\n\n      const newClass = currentClass.includes(\"show-voronoi\")\n        ? currentClass.replace(\"show-voronoi\", \"\").trim()\n        : `${currentClass} show-voronoi`\n\n      voronoiGroup.attr(\"class\", newClass)\n    },\n  }\n}\n\nconst filterBlackOpacity = (\n  id: string,\n  svg: d3.Selection<SVGGElement, unknown, HTMLElement, unknown>,\n  deviation: number,\n  slope: number\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nconst main = async () => {\n  const data = await fetchData()\n  const rootElId = \"chart\"\n\n  const { toggleVoronoi } = renderChart({\n    data,\n    rootElId,\n  })\n\n  ;(document.getElementById(\"toggle-voronoi\") as HTMLElement).addEventListener(\n    \"click\",\n    (e) => {\n      e.preventDefault()\n\n      toggleVoronoi()\n    }\n  )\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/area/area\"\n\nconst Area = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form>\n      <button className=\"btn btn-info\" id=\"toggle-voronoi\" type=\"button\">\n        Toggle Voronoi\n      </button>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Area\n"],"sourceRoot":""}