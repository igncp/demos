{"version":3,"sources":["webpack://demos/./node_modules/prismjs/components/prism-jsx.js","webpack://demos/./node_modules/prismjs/components/prism-scss.js","webpack://demos/./node_modules/prismjs/components/prism-typescript.js","webpack://demos/./node_modules/prismjs/prism.js","webpack://demos/./src/components/demo-title.tsx","webpack://demos/./src/components/files-details.tsx","webpack://demos/./src/components/demo.tsx"],"names":["Prism","javascript","util","clone","languages","space","source","braces","spread","re","flags","replace","RegExp","jsx","extend","tag","pattern","inside","insertBefore","alias","rest","stringifyToken","token","content","map","join","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","push","openedBraces","plainText","splice","Token","hooks","add","env","language","scss","lookbehind","typescript","greedy","keyword","typeInside","ts","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","encode","Array","isArray","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","deepClone","visited","id","key","hasOwnProperty","forEach","v","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","selector","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","name","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","classes","attributes","aliases","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","g","markup","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","arguments","trim","isCompleted","mainSource","title","href","ROOT_PATH","CodeInGH","filePath","rel","target","CoverageReport","demoInfo","demoFileName","files","demo","pageFilePath","category","page","notes","note","idx","dangerouslySetInnerHTML","__html","summary","sources","docs","doc","style","border","borderRadius","display","margin","padding","file","cssModule","parsePath","main","children","links","pageContext","meta","useEffect","catch","error","Helmet","link","description"],"mappings":"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","file":"40415fbf38e1261bc7d6cc731edb6b3737e5b75f-b54c4ef3e0d15ec3ae5c.js","sourcesContent":["(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') {// Autoclosed tag, ignore\n            } else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);","Prism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;","(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  // eslint-disable-next-line regexp/no-dupe-characters-character-class\n  /\\b(?:asserts|infer|interface|module|namespace|type)(?!\\s*[^\\s_${}*a-zA-Z\\xA0-\\uFFFF])/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);","/* **********************************************\n     Begin prism-core.js\n********************************************** */\n/// <reference lib=\"WebWorker\"/>\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element && !lang.test(element.className)) {\n          element = element.parentElement;\n        }\n\n        if (element) {\n          return (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function currentScript() {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n\n        if ('currentScript' in document && 1 < 2\n        /* hack to trip TS' flow analysis */\n        ) {\n            return (\n              /** @type {any} */\n              document.currentScript\n            );\n          } // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n          var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n\n          return null;\n        }\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. `before-all-elements-highlight`\n     * 3. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n      _.hooks.run('before-all-elements-highlight', env);\n\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n     * the element's language.\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n\n      var grammar = _.languages[language]; // Set language on the element, if not present\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language; // Set language on the parent, for styling\n\n      var parent = element.parentElement;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      }\n\n      _.hooks.run('before-sanity-check', env); // plugins may change/add the parent/element\n\n\n      parent = env.element.parentElement;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n        parent.setAttribute('tabindex', '0');\n      }\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data);\n        var lang = message.language;\n        var code = message.code;\n        var immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } // Get current script and highlight\n\n\n  var script = _.util.currentScript();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n} // some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    Prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: Prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n  if (typeof Prism === 'undefined' || typeof document === 'undefined') {\n    return;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\n\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  var LOADING_MESSAGE = 'Loading…';\n\n  var FAILURE_MESSAGE = function FAILURE_MESSAGE(status, message) {\n    return '✖ Error ' + status + ' while fetching file: ' + message;\n  };\n\n  var FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n  var EXTENSIONS = {\n    'js': 'javascript',\n    'py': 'python',\n    'rb': 'ruby',\n    'ps1': 'powershell',\n    'psm1': 'powershell',\n    'sh': 'bash',\n    'bat': 'batch',\n    'h': 'c',\n    'tex': 'latex'\n  };\n  var STATUS_ATTR = 'data-src-status';\n  var STATUS_LOADING = 'loading';\n  var STATUS_LOADED = 'loaded';\n  var STATUS_FAILED = 'failed';\n  var SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])' + ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  /**\n   * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n   *\n   * @param {HTMLElement} element\n   * @param {string} language\n   * @returns {void}\n   */\n\n  function setLanguageClass(element, language) {\n    var className = element.className;\n    className = className.replace(lang, ' ') + ' language-' + language;\n    element.className = className.replace(/\\s+/g, ' ').trim();\n  }\n\n  Prism.hooks.add('before-highlightall', function (env) {\n    env.selector += ', ' + SELECTOR;\n  });\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var pre =\n    /** @type {HTMLPreElement} */\n    env.element;\n\n    if (pre.matches(SELECTOR)) {\n      env.code = ''; // fast-path the whole thing and go to complete\n\n      pre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n      // add code element with loading message\n\n      var code = pre.appendChild(document.createElement('CODE'));\n      code.textContent = LOADING_MESSAGE;\n      var src = pre.getAttribute('data-src');\n      var language = env.language;\n\n      if (language === 'none') {\n        // the language might be 'none' because there is no language set;\n        // in this case, we want to use the extension as the language\n        var extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n        language = EXTENSIONS[extension] || extension;\n      } // set language classes\n\n\n      setLanguageClass(code, language);\n      setLanguageClass(pre, language); // preload the language\n\n      var autoloader = Prism.plugins.autoloader;\n\n      if (autoloader) {\n        autoloader.loadLanguages(language);\n      } // load file\n\n\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', src, true);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status < 400 && xhr.responseText) {\n            // mark as loaded\n            pre.setAttribute(STATUS_ATTR, STATUS_LOADED); // highlight code\n\n            code.textContent = xhr.responseText;\n            Prism.highlightElement(code);\n          } else {\n            // mark as failed\n            pre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n            if (xhr.status >= 400) {\n              code.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n            } else {\n              code.textContent = FAILURE_EMPTY_MESSAGE;\n            }\n          }\n        }\n      };\n\n      xhr.send(null);\n    }\n  });\n  Prism.plugins.fileHighlight = {\n    /**\n     * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n     *\n     * Note: Elements which are already loaded or currently loading will not be touched by this method.\n     *\n     * @param {ParentNode} [container=document]\n     */\n    highlight: function highlight(container) {\n      var elements = (container || document).querySelectorAll(SELECTOR);\n\n      for (var i = 0, element; element = elements[i++];) {\n        Prism.highlightElement(element);\n      }\n    }\n  };\n  var logged = false;\n  /** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\n  Prism.fileHighlight = function () {\n    if (!logged) {\n      console.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n      logged = true;\n    }\n\n    Prism.plugins.fileHighlight.highlight.apply(this, arguments);\n  };\n})();","import React from \"react\"\n\ntype Props = {\n  isCompleted: boolean\n  mainSource: string\n  name: string\n}\n\nconst DemoTitle = ({ isCompleted, mainSource, name }: Props) => (\n  <h2 className=\"row\" id=\"demo-title\">\n    <span className=\"col-xs-10\">\n      {name} Chart{\" \"}\n      <small id=\"main-source\" title=\"Main Source\">\n        <a href={mainSource}>···</a>\n      </small>\n      {!isCompleted && (\n        <small id=\"demo-wip\" title=\"This demo is still work in progress\">\n          WIP\n        </small>\n      )}\n    </span>\n    <span className=\"col-sm-2 col-xs-12 back-home\">\n      <a className=\"btn btn-default\" href={ROOT_PATH}>\n        <span className=\"glyphicon glyphicon-home\" /> Home\n      </a>\n    </span>\n  </h2>\n)\n\nexport default DemoTitle\n","import React from \"react\"\n\nimport Prism from \"prismjs\"\n\n// https://prismjs.com/#supported-languages\nimport \"prismjs/components/prism-jsx\"\nimport \"prismjs/components/prism-typescript\"\nimport \"prismjs/components/prism-scss\"\n\nimport \"prismjs/themes/prism-coy.css\"\n\nimport { DemoInfo } from \"@/common\"\n\nconst CodeInGH = ({ filePath }: { filePath: string }) => (\n  <>\n    <span>| </span>\n    <a\n      href={`https://github.com/igncp/demos/blob/main/src/${filePath}`}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n    >\n      Code in Github\n    </a>\n  </>\n)\nconst CoverageReport = ({ filePath }: { filePath: string }) => (\n  <>\n    <span>| </span>\n    <a\n      href={`https://igncp.github.io/demos/coverage-ts/files/src/${filePath}.html`}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n    >\n      TypeScript coverage report\n    </a>\n  </>\n)\n\ntype Props = {\n  demoInfo: DemoInfo\n}\n\nconst FilesDetails = ({ demoInfo }: Props) => {\n  if (typeof window === \"undefined\") {\n    return null\n  }\n\n  const demoFileName = `${demoInfo.key}.${demoInfo.files.demo.type}`\n  const pageFilePath = `pages/${demoInfo.category}/${demoInfo.key}.${demoInfo.files.page.type}`\n\n  return (\n    <div>\n      {!!demoInfo.notes.length && (\n        <div className=\"bs-callout bs-callout-info\" id=\"notes\">\n          <p>\n            <strong>Notes:</strong>\n          </p>\n          <ul>\n            {demoInfo.notes.map((note, idx) => (\n              <li dangerouslySetInnerHTML={{ __html: note }} key={idx} />\n            ))}\n          </ul>\n        </div>\n      )}\n      {!!demoInfo.summary.length && (\n        <div className=\"bs-callout bs-callout-summary\" id=\"notes\">\n          <p>\n            <strong>Implementation Summary:</strong>\n          </p>\n          <ul>\n            {demoInfo.summary.map((note, idx) => (\n              <p dangerouslySetInnerHTML={{ __html: note }} key={idx} />\n            ))}\n          </ul>\n        </div>\n      )}\n      <div className=\"bs-callout bs-callout-primary\" id=\"sources-list\">\n        <p>\n          <strong>Sources:</strong>\n        </p>\n        <ul>\n          {demoInfo.sources.map((source, index) => (\n            <li key={index}>\n              <span className=\"source-number\">[{index + 1}]</span>:{\" \"}\n              <a href={source}>{source}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {!!demoInfo.docs.length && (\n        <div className=\"bs-callout bs-callout-secondary\" id=\"docs\">\n          <p>\n            <strong>Docs:</strong>\n          </p>\n          <ul>\n            {demoInfo.docs.map((doc) => (\n              <li\n                key={doc[1]}\n                style={{\n                  border: \"1px solid #157ad4\",\n                  borderRadius: 5,\n                  display: \"inline-block\",\n                  margin: 5,\n                  padding: 5,\n                }}\n              >\n                <a href={doc[1]} rel=\"noreferrer\" target=\"_blank\">\n                  {doc[0]}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {!!demoInfo.data.length && (\n        <div className=\"bs-callout bs-callout-warning\" id=\"data-list\">\n          <p>\n            <strong>Data: </strong>\n            {demoInfo.data.map((file, index) => (\n              <a\n                href={`${ROOT_PATH}data/${demoInfo.category}/${demoInfo.key}/${file}`}\n                key={index}\n              >\n                {file}\n              </a>\n            ))}\n          </p>\n        </div>\n      )}\n\n      <div className=\"bs-callout bs-callout-success\" id=\"code\">\n        <p>\n          <strong>Code:</strong>\n        </p>\n        <ul>\n          <li>\n            <p>\n              {demoFileName}{\" \"}\n              {(() => {\n                const filePath = `demos/${demoInfo.key}/${demoFileName}`\n\n                return (\n                  <>\n                    <CodeInGH filePath={filePath} />{\" \"}\n                    <CoverageReport filePath={filePath} />\n                  </>\n                )\n              })()}\n            </p>\n            <pre>\n              <code\n                dangerouslySetInnerHTML={{\n                  __html: Prism.highlight(\n                    demoInfo.files.demo.content,\n                    demoInfo.files.demo.type === \"ts\"\n                      ? Prism.languages.typescript\n                      : Prism.languages.jsx,\n                    demoInfo.files.demo.type === \"ts\" ? \"typescript\" : \"jsx\"\n                  ),\n                }}\n              />\n            </pre>\n          </li>\n          <li>\n            <p>\n              {pageFilePath} <CodeInGH filePath={pageFilePath} />{\" \"}\n              <CoverageReport filePath={pageFilePath} />\n            </p>\n            <pre>\n              <code\n                dangerouslySetInnerHTML={{\n                  __html: Prism.highlight(\n                    demoInfo.files.page.content,\n                    demoInfo.files.page.type === \"tsx\"\n                      ? Prism.languages.typescript\n                      : Prism.languages.jsx,\n                    demoInfo.files.demo.type === \"tsx\" ? \"typescript\" : \"jsx\"\n                  ),\n                }}\n              />\n            </pre>\n          </li>\n          {demoInfo.files.cssModule && (\n            <li>\n              <p>\n                {`${demoInfo.key}.module.css`}{\" \"}\n                <CodeInGH\n                  filePath={`demos/${demoInfo.key}/${demoInfo.key}.module.css`}\n                />\n              </p>\n              <pre>\n                <code\n                  dangerouslySetInnerHTML={{\n                    __html: Prism.highlight(\n                      demoInfo.files.cssModule,\n                      Prism.languages.scss,\n                      \"scss\"\n                    ),\n                  }}\n                />\n              </pre>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default FilesDetails\n","import React, { useEffect } from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport DemoTitle from \"./demo-title\"\nimport FilesDetails from \"./files-details\"\nimport Layout from \"./layout\"\n\nconst parsePath = (str: string) =>\n  str[0] === \"/\" ? ROOT_PATH + str.replace(/^\\//, \"\") : str\n\ntype Props = {\n  children: React.ReactNode\n  links?: string[]\n  main: () => Promise<void>\n  pageContext: DemoPageProps[\"pageContext\"]\n  scripts?: string[]\n}\n\nconst Demo = ({\n  main,\n  children,\n  scripts = [],\n  links = [],\n  pageContext,\n}: Props) => {\n  const { demoInfo, meta } = pageContext\n  const { isCompleted, name, sources } = demoInfo\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") {\n      return\n    }\n\n    main().catch((e) => {\n      // eslint-disable-next-line no-console\n      console.error(\"error:\", e)\n    })\n  }, [])\n\n  return (\n    <Layout>\n      <Helmet\n        link={(process.env.NODE_ENV === \"production\" ? links : []).map(\n          (href) => ({\n            href: parsePath(href),\n            rel: \"stylesheet\",\n            type: \"text/css\",\n          })\n        )}\n        meta={[\n          {\n            content: meta.description,\n            name: \"description\",\n          },\n        ]}\n        script={(process.env.NODE_ENV === \"production\" ? scripts : []).map(\n          (src) => ({\n            src: parsePath(src),\n            type: \"text/javascript\",\n          })\n        )}\n        title={`${demoInfo.name} | Demos igncp`}\n      />\n      <DemoTitle\n        isCompleted={isCompleted}\n        mainSource={sources[0]}\n        name={name}\n      />\n      {children}\n      <FilesDetails demoInfo={demoInfo} />\n    </Layout>\n  )\n}\n\nexport default Demo\n"],"sourceRoot":""}