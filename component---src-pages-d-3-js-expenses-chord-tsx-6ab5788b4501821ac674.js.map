{"version":3,"file":"component---src-pages-d-3-js-expenses-chord-tsx-6ab5788b4501821ac674.js","mappings":"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","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/demos/expenses-chord/expenses-chord.module.css","webpack://demos/./src/demos/expenses-chord/expenses-chord-chart.ts","webpack://demos/./src/demos/expenses-chord/expenses-chord-data-model.ts","webpack://demos/./src/demos/expenses-chord/ui-constants.ts","webpack://demos/./src/demos/expenses-chord/expenses-chord-chart-data.ts","webpack://demos/./src/demos/expenses-chord/expenses-chord.ts","webpack://demos/./src/demos/expenses-chord/expenses-page.module.css","webpack://demos/./src/pages/d3js/expenses-chord.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","// extracted by mini-css-extract-plugin\nexport var chartWrapper = \"expenses-chord-module--chartWrapper--f066b\";\nexport var chordGroup = \"expenses-chord-module--chordGroup--b443f\";\nexport var groupText = \"expenses-chord-module--groupText--a0329\";\nexport var ribbon = \"expenses-chord-module--ribbon--8347d\";","import {\n  BaseType,\n  Chord,\n  ChordGroup,\n  D3DragEvent,\n  Selection,\n  arc as arcD3,\n  chordDirected,\n  descending as descendingD3,\n  drag,\n  easeCircle,\n  interpolate,\n  ribbonArrow as ribbonArrowD3,\n  ribbon as ribbonD3,\n  scaleOrdinal,\n  schemeTableau10,\n  select,\n} from \"d3\"\nimport $ from \"jquery\"\nimport \"jquery-ui/themes/base/all.css\"\nimport { v1 as uuid } from \"uuid\"\n\nimport * as styles from \"./expenses-chord.module.css\"\n\nif (typeof window !== \"undefined\") {\n  require(\"jquery-ui/ui/widgets/tooltip\")\n}\n\nconst height = 800\nconst elementDefaultOpacity = 0.7\n\nenum DisplayType {\n  Source = \"source\",\n  Target = \"target\",\n}\n\nenum RibbonType {\n  Arrow = \"arrow\",\n  Common = \"common\",\n}\n\ntype ChartState = {\n  lastFocused: string | null\n}\n\nconst durations = {\n  ribbonAnimation: 1000,\n  zoom: 500,\n} as const\n\nconst easingFn = easeCircle\n\nconst applyOpacityEffect = <ContainerEl extends BaseType, Datum>(\n  elementsSelection: Selection<ContainerEl, Datum, BaseType, unknown>\n) => {\n  elementsSelection\n    .style(\"opacity\", elementDefaultOpacity)\n    .on(\"mouseenter\", function onMouseEnter() {\n      select(this).style(\"opacity\", 1)\n    })\n    .on(\"mouseleave\", function onMouseLeave() {\n      select(this).style(\"opacity\", elementDefaultOpacity)\n    })\n}\n\nconst filterBlackOpacity = ({\n  deviation,\n  id,\n  slope,\n  svg,\n}: {\n  deviation: number\n  id: string\n  slope: number\n  svg: Selection<SVGSVGElement, unknown, HTMLElement, unknown>\n}) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\n// @TODO: setup drag with zoom\nconst setupDrag = ({\n  svgDrag,\n  svgTop,\n}: {\n  svgDrag: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  svgTop: Selection<SVGSVGElement, unknown, HTMLElement, unknown>\n}) => {\n  const draggedState = {\n    s: 1,\n    x: 0,\n    y: 0,\n  }\n\n  const setupTransform = () => {\n    svgDrag.attr(\n      \"transform\",\n      `translate(${draggedState.x},${draggedState.y}) scale(${draggedState.s})`\n    )\n  }\n\n  const dragHandler = drag<SVGSVGElement, unknown>().on(\n    \"drag\",\n    (dragEvent: D3DragEvent<SVGSVGElement, unknown, unknown>) => {\n      draggedState.x += dragEvent.dx\n      draggedState.y += dragEvent.dy\n\n      setupTransform()\n    }\n  )\n\n  setupTransform()\n\n  svgTop\n    .style(\"cursor\", \"move\")\n    .call(dragHandler)\n    .on(\"wheel\", (wheelEvent: WheelEvent) => {\n      wheelEvent.preventDefault()\n\n      draggedState.s += -wheelEvent.deltaY / 1000\n\n      setupTransform()\n    })\n}\n\ntype ChartConfig = {\n  chordGroupsIds: string[]\n  getChordGroupTitle: (groupId: string) => string\n  getChordMatrix: () => number[][]\n  getChordTitle: (\n    sourceIndex: number,\n    targetIndex: number,\n    sourceValue: number,\n    targetValue: number\n  ) => string\n  getDisplayTypeOnGroupClick: (chordGroupId: string) => DisplayType\n  getRibbonGroupIdColor: (\n    sourceGroupId: string,\n    targetGroupId: string\n  ) => string\n  getRibbonType: () => RibbonType\n  rootElId: string\n}\n\nconst renderChart = (chartConfig: ChartConfig) => {\n  const { rootElId } = chartConfig\n\n  const chartState: ChartState = {\n    lastFocused: null,\n  }\n\n  const { chordGroupsIds } = chartConfig\n\n  const color = scaleOrdinal(chordGroupsIds, schemeTableau10)\n\n  const { width } = (\n    document.getElementById(rootElId) as HTMLElement\n  ).getBoundingClientRect()\n\n  const innerRadius = Math.min(width, height) * 0.5 - 20\n  const outerRadius = innerRadius + 20\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ribbonCommon = (ribbonType: any) =>\n    ribbonType.radius(innerRadius - 0.5).padAngle(1 / innerRadius)\n\n  const ribbonArrow = ribbonCommon(ribbonArrowD3())\n  const ribbon = ribbonCommon(ribbonD3())\n\n  const totalHeight = height + 50\n\n  const svgTop = select(`#${rootElId}`)\n    .attr(\"class\", styles.chartWrapper)\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", totalHeight)\n\n  filterBlackOpacity({\n    deviation: 2,\n    id: \"groups\",\n    slope: 0.5,\n    svg: svgTop,\n  })\n\n  const svgCenter = svgTop\n    .append(\"g\")\n    .attr(\"transform\", `translate(${width / 2}, ${totalHeight / 2})`)\n\n  const svgG = svgCenter.append(\"g\").attr(\"class\", \"svg-drag\")\n\n  setupDrag({\n    svgDrag: svgG,\n    svgTop,\n  })\n\n  // this rect is to allow zooming\n  svgG\n    .append(\"rect\")\n    .attr(\"fill\", \"#fff\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"transform\", `translate(-${width / 2}, -${totalHeight / 2})`)\n\n  const textId = uuid()\n\n  const chord = chordDirected()\n    .padAngle(12 / innerRadius)\n    .sortSubgroups(descendingD3)\n    .sortChords(descendingD3)\n\n  svgG\n    .append(\"path\")\n    .attr(\"fill\", \"none\")\n    .attr(\"id\", textId)\n    .attr(\n      \"d\",\n      arcD3()({\n        endAngle: 2 * Math.PI,\n        innerRadius: 0,\n        outerRadius,\n        startAngle: 0,\n      }) as string\n    )\n\n  const arc = arcD3<d3.ChordGroup>()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius)\n\n  const ribbonContainer = svgG.append(\"g\")\n  const groupContainer = svgG\n    .append(\"g\")\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", 10)\n\n  const getRibbonKey = (ribbonNode: Chord) =>\n    `${ribbonNode.source.index}_${ribbonNode.target.index}`\n\n  const renderItems = () => {\n    const usedRibbon =\n      chartConfig.getRibbonType() === RibbonType.Common ? ribbon : ribbonArrow\n\n    const matrix = chartConfig.getChordMatrix()\n    const chords = chord(matrix)\n\n    const initialRibbonsData = ribbonContainer\n      .selectAll<SVGPathElement, Chord>(`.${styles.ribbon}`)\n      .data()\n      .reduce<{ [k: string]: Chord | undefined }>((...[acc, ribbonNode]) => {\n        acc[getRibbonKey(ribbonNode)] = ribbonNode\n\n        return acc\n      }, {})\n\n    const fillRibbon = (chordItem: Chord) =>\n      color(\n        chartConfig.getRibbonGroupIdColor(\n          chordGroupsIds[chordItem.source.index],\n          chordGroupsIds[chordItem.target.index]\n        )\n      )\n\n    const ribbons = ribbonContainer\n      .selectAll<SVGPathElement, Chord>(`.${styles.ribbon}`)\n      .data<Chord>(chords, (chordItem) => getRibbonKey(chordItem))\n      .join(\n        (enter) => {\n          const enterSelection = enter\n            .append(\"path\")\n            .attr(\"class\", styles.ribbon)\n            .attr(\"fill\", fillRibbon)\n\n          applyOpacityEffect(enterSelection)\n\n          return enterSelection\n            .transition()\n            .duration(durations.ribbonAnimation)\n            .attrTween(\"d\", (finalRibbon) => {\n              const initialRibbon = {\n                source: {\n                  endAngle: 0,\n                  startAngle: 0,\n                },\n                target: {\n                  endAngle: 0,\n                  startAngle: 0,\n                },\n              }\n              const interpolateSource = interpolate(\n                initialRibbon.source,\n                finalRibbon.source\n              )\n              const interpolateTarget = interpolate(\n                initialRibbon.target,\n                finalRibbon.target\n              )\n\n              return (t) => {\n                const interpolated = {\n                  source: interpolateSource(t),\n                  target: interpolateTarget(t),\n                }\n\n                return usedRibbon(interpolated)\n              }\n            })\n        },\n        (update) => {\n          update\n            .transition()\n            .duration(durations.ribbonAnimation)\n            .attr(\"fill\", fillRibbon)\n            .attrTween(\"d\", (finalRibbon) => {\n              const { [getRibbonKey(finalRibbon)]: initialRibbon } =\n                initialRibbonsData\n\n              if (!initialRibbon) {\n                return () => usedRibbon(finalRibbon)\n              }\n\n              const interpolateSource = interpolate(\n                initialRibbon.source,\n                finalRibbon.source\n              )\n              const interpolateTarget = interpolate(\n                initialRibbon.target,\n                finalRibbon.target\n              )\n\n              return (t) => {\n                const interpolated = {\n                  source: interpolateSource(t),\n                  target: interpolateTarget(t),\n                }\n\n                return usedRibbon(interpolated)\n              }\n            })\n\n          return update\n        }\n      )\n\n    ribbons\n      .attr(\"title\", (chordItem) =>\n        chartConfig.getChordTitle(\n          chordItem.source.index,\n          chordItem.target.index,\n          chordItem.source.value,\n          chordItem.target.value\n        )\n      )\n      .on(\"click\", function onChordClick(...[, chordItem]) {\n        const chordSelection = select(this)\n        const chordGroupId = `${chordGroupsIds[chordItem.source.index]}_${\n          chordGroupsIds[chordItem.target.index]\n        }`\n\n        if (chartState.lastFocused === chordGroupId) {\n          ribbons.attr(\"display\", \"block\")\n          chartState.lastFocused = null\n        } else {\n          ribbons.attr(\"display\", \"none\")\n          chordSelection.attr(\"display\", \"block\")\n          chartState.lastFocused = chordGroupId\n        }\n      })\n\n    $(`.${styles.ribbon}`).tooltip({\n      track: true,\n    })\n\n    const getGroupText = (chordItem: ChordGroup) => {\n      if (chordItem.endAngle - chordItem.startAngle < 0.07) {\n        return \"\"\n      }\n\n      return chartConfig.getChordGroupTitle(chordGroupsIds[chordItem.index])\n    }\n\n    const initialGroupData = groupContainer\n      .selectAll(`.${styles.chordGroup}`)\n      .data()\n\n    groupContainer\n      .selectAll<SVGGElement, ChordGroup>(`.${styles.chordGroup}`)\n      .data<ChordGroup>(chords.groups, (chordGroup) => chordGroup.index)\n      .join(\n        (enter) => {\n          const groupSelection = enter\n            .append(\"g\")\n            .attr(\"class\", styles.chordGroup)\n            .attr(\"title\", (groupItem) =>\n              chartConfig.getChordGroupTitle(chordGroupsIds[groupItem.index])\n            )\n            .style(\"filter\", \"url(#drop-shadow-groups)\")\n\n          applyOpacityEffect(groupSelection)\n\n          groupSelection\n            .append(\"path\")\n            .attr(\"class\", \"group-path\")\n            .transition()\n            .duration(durations.ribbonAnimation)\n            .ease(easingFn)\n            .attrTween(\"d\", (finalGroup) => {\n              const interpolateFn = interpolate<ChordGroup>(\n                {\n                  ...finalGroup,\n                  endAngle: 0,\n                  startAngle: 0,\n                },\n                finalGroup\n              )\n\n              return (t) => arc(interpolateFn(t))!\n            })\n            .attr(\"fill\", (groupItem) => color(chordGroupsIds[groupItem.index]))\n            .attr(\"stroke\", \"#fff\")\n\n          groupSelection\n            .append(\"text\")\n            .attr(\"dy\", -3)\n            .append(\"textPath\")\n            .attr(\"xlink:href\", `#${textId}`)\n            .attr(\"class\", styles.groupText)\n            .text(getGroupText)\n            .transition()\n            .duration(durations.ribbonAnimation)\n            .ease(easingFn)\n            .attr(\n              \"startOffset\",\n              (groupItem) => groupItem.startAngle * outerRadius\n            )\n\n          groupSelection.on(\"click\", (...[, groupItem]) => {\n            const { [groupItem.index]: chordGroupId } = chordGroupsIds\n            const latestRibbons = ribbonContainer.selectAll<\n              SVGPathElement,\n              Chord\n            >(`.${styles.ribbon}`)\n\n            if (chartState.lastFocused === chordGroupId) {\n              latestRibbons.attr(\"display\", () => \"block\")\n              chartState.lastFocused = null\n\n              return\n            }\n\n            chartState.lastFocused = chordGroupId\n\n            if (\n              chartConfig.getDisplayTypeOnGroupClick(chordGroupId) ===\n              DisplayType.Source\n            ) {\n              latestRibbons.attr(\"display\", (otherGroupItem) =>\n                otherGroupItem.source.index === groupItem.index\n                  ? \"block\"\n                  : \"none\"\n              )\n\n              return\n            }\n\n            latestRibbons.attr(\"display\", (otherGroupItem) =>\n              otherGroupItem.target.index === groupItem.index ? \"block\" : \"none\"\n            )\n          })\n\n          $(`.${styles.chordGroup}`).tooltip({\n            track: true,\n          })\n\n          return groupSelection\n        },\n        (update) => {\n          update\n            .select(\".group-path\")\n            .transition()\n            .duration(durations.ribbonAnimation)\n            .attrTween(\"d\", (...[finalGroup, finalGroupIndex]) => {\n              const { [finalGroupIndex]: initialGroup } = initialGroupData\n              const interpolateFn = interpolate(initialGroup, finalGroup)\n\n              return (t) => arc(interpolateFn(t)) as string\n            })\n\n          update\n            .select(`.${styles.groupText}`)\n            .text(getGroupText)\n            .transition()\n            .duration(durations.ribbonAnimation)\n            .attr(\n              \"startOffset\",\n              (groupItem) => groupItem.startAngle * outerRadius\n            )\n\n          return update\n        },\n        (exit) => exit.remove()\n      )\n      .attr(\"class\", styles.chordGroup)\n  }\n\n  renderItems()\n\n  return {\n    renderItems,\n  }\n}\n\nexport { DisplayType, RibbonType, ChartConfig, renderChart }\n","import { json } from \"d3\"\n\ntype DataItem = {\n  value: number | null // eslint-disable-line id-denylist\n  year: number\n}\n\n/**\n * The data types are encapsulated and not shared\n */\ntype ExpensesData = {\n  [country: string]: {\n    [region: string]: DataItem[]\n  }\n}\n\nclass Expenses {\n  public static ALL_ID = \"All\"\n\n  private readonly countries: string[]\n  private readonly expensesData: ExpensesData\n  private readonly names: string[]\n  private readonly regions: string[]\n\n  private constructor(expensesData: ExpensesData) {\n    const countries = Object.keys(expensesData).sort()\n\n    this.countries = countries\n    this.regions = (() => {\n      const allRegions = countries.reduce((...[regions, country]) => {\n        Object.keys(expensesData[country]).forEach((region) => {\n          regions.add(region)\n        })\n\n        return regions\n      }, new Set<string>())\n\n      return Array.from(allRegions).sort()\n    })()\n    this.expensesData = expensesData\n    this.names = countries.concat(this.regions)\n  }\n\n  public static async fetchAndCreate(): Promise<Expenses> {\n    const expensesData = (await (json(\n      `${ROOT_PATH}data/d3js/expenses-chord/data.json`\n    ) as unknown)) as ExpensesData\n\n    return new Expenses(expensesData)\n  }\n\n  public getRelationsMatrix({\n    countryFilter,\n    regionFilter,\n    timeIndexFilter,\n  }: {\n    countryFilter: string\n    regionFilter: string\n    timeIndexFilter: number\n  }): number[][] {\n    const { expensesData, names } = this\n\n    return names.map((maybeCountry) => {\n      if (!expensesData[maybeCountry] as unknown) {\n        return names.map(() => 0)\n      }\n\n      if (![Expenses.ALL_ID, maybeCountry].includes(countryFilter)) {\n        return names.map(() => 0)\n      }\n\n      return names.map((maybeRegion) => {\n        const {\n          [maybeCountry]: { [maybeRegion]: dataItem },\n        } = expensesData\n\n        if (!dataItem as unknown) {\n          return 0\n        }\n\n        if (![Expenses.ALL_ID, maybeRegion].includes(regionFilter)) {\n          return 0\n        }\n\n        return dataItem[timeIndexFilter].value ?? 0\n      })\n    })\n  }\n\n  public getTimeFramesNumber(): number {\n    const { countries, expensesData, regions } = this\n\n    return expensesData[countries[0]][regions[0]].length - 1\n  }\n\n  public getCountriesList(): Expenses[\"countries\"] {\n    return this.countries.slice()\n  }\n\n  public getRegionsList(): Expenses[\"regions\"] {\n    return this.regions.slice()\n  }\n\n  public getAllNames(): Expenses[\"names\"] {\n    return this.names.slice()\n  }\n}\n\nexport { Expenses }\n","const CONTAINER_ID = \"chart\"\n\nexport { CONTAINER_ID }\n","import $ from \"jquery\"\nimport \"jquery-ui/themes/base/all.css\"\n\nimport { ChartConfig, DisplayType, RibbonType } from \"./expenses-chord-chart\"\nimport { Expenses } from \"./expenses-chord-data-model\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\nif (typeof window !== \"undefined\") {\n  require(\"jquery-ui/ui/widgets/slider\")\n}\n\ntype State = {\n  selectedCountry: string\n  selectedRegion: string\n  timeIndex: number\n}\n\nconst AUTOMATIC_TIME_ID = \"automatic-time\"\nconst SLIDER_TIME_ID = \"slider-time\"\nconst COUNTRIES_SELECT_ID = \"countries-select\"\nconst REGIONS_SELECT_ID = \"regions-select\"\n\nconst createInitialState = (): State => ({\n  selectedCountry: Expenses.ALL_ID,\n  selectedRegion: Expenses.ALL_ID,\n  timeIndex: 0,\n})\n\nclass CheckboxHandler {\n  private readonly checkbox: HTMLInputElement\n  private readonly onChecked: () => void\n  private readonly onUnchecked: () => void\n\n  public constructor({\n    onChecked,\n    onUnchecked,\n  }: {\n    onChecked: CheckboxHandler[\"onChecked\"]\n    onUnchecked: CheckboxHandler[\"onUnchecked\"]\n  }) {\n    this.onChecked = onChecked\n    this.onUnchecked = onUnchecked\n    this.checkbox = document.getElementById(\n      AUTOMATIC_TIME_ID\n    ) as HTMLInputElement\n  }\n\n  public init() {\n    this.checkbox.setAttribute(\"checked\", \"checked\")\n    this.onChecked()\n    this.checkbox.addEventListener(\"change\", () => {\n      if (this.checkbox.checked) {\n        this.onChecked()\n      } else {\n        this.onUnchecked()\n      }\n    })\n  }\n\n  public uncheck() {\n    this.checkbox.checked = false\n    this.onUnchecked()\n  }\n}\n\nconst createChartConfig = ({\n  expenses,\n  state,\n}: {\n  expenses: Expenses\n  state: State\n}): ChartConfig => {\n  const getChordMatrix: ChartConfig[\"getChordMatrix\"] = () =>\n    expenses.getRelationsMatrix({\n      countryFilter: state.selectedCountry,\n      regionFilter: state.selectedRegion,\n      timeIndexFilter: state.timeIndex,\n    })\n\n  const allNames = expenses.getAllNames()\n\n  const getChordTitle: ChartConfig[\"getChordTitle\"] = (\n    ...[sourceIndex, targetIndex, sourceValue]\n  ) =>\n    `People from \"${allNames[sourceIndex]}\" spend into \"${allNames[targetIndex]}\": ${sourceValue}`\n\n  const getChordGroupTitle: ChartConfig[\"getChordGroupTitle\"] = (\n    chordItemLabel\n  ) => chordItemLabel\n\n  const getRibbonGroupIdColor: ChartConfig[\"getRibbonGroupIdColor\"] = (\n    ...[sourceGroupId, targetGroupId]\n  ) =>\n    state.selectedRegion === Expenses.ALL_ID ? targetGroupId : sourceGroupId\n\n  const getDisplayTypeOnGroupClick: ChartConfig[\"getDisplayTypeOnGroupClick\"] =\n    (chordGroupId) =>\n      expenses.getCountriesList().includes(chordGroupId)\n        ? DisplayType.Source\n        : DisplayType.Target\n\n  const getRibbonType: ChartConfig[\"getRibbonType\"] = () =>\n    state.selectedCountry !== Expenses.ALL_ID &&\n    state.selectedRegion !== Expenses.ALL_ID\n      ? RibbonType.Common\n      : RibbonType.Arrow\n\n  return {\n    chordGroupsIds: allNames,\n    getChordGroupTitle,\n    getChordMatrix,\n    getChordTitle,\n    getDisplayTypeOnGroupClick,\n    getRibbonGroupIdColor,\n    getRibbonType,\n    rootElId: CONTAINER_ID,\n  }\n}\n\nconst setupChartForm = ({\n  expenses,\n  renderItems,\n  state,\n}: {\n  expenses: Expenses\n  renderItems: () => void\n  state: State\n}) => {\n  const sliderMaxValue = expenses.getTimeFramesNumber()\n\n  $(`#${SLIDER_TIME_ID}`).slider({\n    change: (...[, { value: timeValue }]) => {\n      if (timeValue === 3) {\n        // @TODO: error in this case, find why\n        return\n      }\n\n      state.timeIndex = timeValue!\n      renderItems()\n    },\n    max: sliderMaxValue,\n    min: 0,\n  })\n\n  const setupSelect = ({\n    id,\n    onChange,\n    selectOptions,\n  }: {\n    id: string\n    onChange: (v: string) => void\n    selectOptions: string[]\n  }) => {\n    const selectEl = document.getElementById(id) as HTMLSelectElement\n\n    ;[Expenses.ALL_ID].concat(selectOptions).forEach((selectOption) => {\n      const option = document.createElement(\"option\")\n\n      option.setAttribute(\"value\", selectOption)\n      option.innerText = selectOption\n\n      selectEl.appendChild(option)\n    })\n\n    selectEl.addEventListener(\"change\", () => {\n      onChange(selectEl.value)\n    })\n  }\n\n  setupSelect({\n    id: COUNTRIES_SELECT_ID,\n    onChange: (newSelected: string) => {\n      state.selectedCountry = newSelected\n      renderItems()\n    },\n    selectOptions: expenses.getCountriesList(),\n  })\n  setupSelect({\n    id: REGIONS_SELECT_ID,\n    onChange: (newSelected: string) => {\n      state.selectedRegion = newSelected\n      renderItems()\n    },\n    selectOptions: expenses.getRegionsList(),\n  })\n\n  let timeoutId: number | null = null\n  const checkboxHandler = new CheckboxHandler({\n    onChecked: () => {\n      clearInterval(timeoutId!)\n      timeoutId = window.setInterval(() => {\n        const currentValue = $(`#${SLIDER_TIME_ID}`).slider(\"value\")\n        const nextValue = currentValue + 1\n\n        $(`#${SLIDER_TIME_ID}`).slider(\"value\", nextValue)\n\n        if (nextValue >= sliderMaxValue) {\n          checkboxHandler.uncheck()\n        }\n      }, 2000)\n    },\n    onUnchecked: () => {\n      clearInterval(timeoutId!)\n    },\n  })\n\n  checkboxHandler.init()\n}\n\nexport {\n  AUTOMATIC_TIME_ID,\n  COUNTRIES_SELECT_ID,\n  REGIONS_SELECT_ID,\n  SLIDER_TIME_ID,\n  createChartConfig,\n  createInitialState,\n  setupChartForm,\n}\n","import { renderChart } from \"./expenses-chord-chart\"\nimport {\n  AUTOMATIC_TIME_ID,\n  COUNTRIES_SELECT_ID,\n  REGIONS_SELECT_ID,\n  SLIDER_TIME_ID,\n  createChartConfig,\n  createInitialState,\n  setupChartForm,\n} from \"./expenses-chord-chart-data\"\nimport { Expenses } from \"./expenses-chord-data-model\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\nconst main = async () => {\n  const expenses = await Expenses.fetchAndCreate()\n\n  const state = createInitialState()\n  const chartConfig = createChartConfig({\n    expenses,\n    state,\n  })\n\n  const { renderItems } = renderChart(chartConfig)\n\n  setupChartForm({\n    expenses,\n    renderItems,\n    state,\n  })\n}\n\nexport {\n  AUTOMATIC_TIME_ID,\n  CONTAINER_ID,\n  COUNTRIES_SELECT_ID,\n  REGIONS_SELECT_ID,\n  SLIDER_TIME_ID,\n}\n\nexport default main\n","// extracted by mini-css-extract-plugin\nexport var label = \"expenses-page-module--label--0c13f\";\nexport var selectRow = \"expenses-page-module--selectRow--55763\";\nexport var sliderRow = \"expenses-page-module--sliderRow--fa29f\";\nexport var sliderTime = \"expenses-page-module--sliderTime--aa98e\";","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, {\n  AUTOMATIC_TIME_ID,\n  CONTAINER_ID,\n  COUNTRIES_SELECT_ID,\n  REGIONS_SELECT_ID,\n  SLIDER_TIME_ID,\n} from \"@/demos/expenses-chord/expenses-chord\"\nimport * as styles from \"@/demos/expenses-chord/expenses-page.module.css\"\n\nconst ExpensesChord = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div className={styles.sliderRow}>\n      <div className={styles.label}>Time Item:</div>\n      <div className={styles.sliderTime} id={SLIDER_TIME_ID} />\n    </div>\n    <div className={styles.selectRow}>\n      <span>\n        <span className={styles.label}>Countries:</span>\n        <select className=\"form-select\" id={COUNTRIES_SELECT_ID} />\n      </span>\n      <span>\n        <span className={styles.label}>Regions:</span>\n        <select className=\"form-select\" id={REGIONS_SELECT_ID} />\n      </span>\n      <span>\n        <span className={styles.label}>Automatic Time Change:</span>\n        <input\n          className=\"form-check-input\"\n          id={AUTOMATIC_TIME_ID}\n          type=\"checkbox\"\n        />\n      </span>\n    </div>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default ExpensesChord\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","chordGroup","groupText","window","require","DisplayType","RibbonType","durations","easingFn","easeCircle","applyOpacityEffect","elementsSelection","style","on","select","this","renderChart","chartConfig","rootElId","chartState","lastFocused","chordGroupsIds","color","scaleOrdinal","schemeTableau10","width","document","getElementById","getBoundingClientRect","innerRadius","Math","min","outerRadius","ribbonCommon","ribbonType","radius","padAngle","ribbonArrow","ribbonArrowD3","ribbon","ribbonD3","svgTop","attr","append","height","deviation","id","slope","filter","svg","feMerge","filterBlackOpacity","svgG","svgDrag","draggedState","s","x","y","setupTransform","dragHandler","drag","dragEvent","dx","dy","call","wheelEvent","preventDefault","deltaY","setupDrag","textId","chord","chordDirected","sortSubgroups","descendingD3","sortChords","arcD3","endAngle","PI","startAngle","arc","ribbonContainer","groupContainer","getRibbonKey","ribbonNode","source","index","target","renderItems","usedRibbon","getRibbonType","Common","matrix","getChordMatrix","chords","initialRibbonsData","selectAll","styles","data","reduce","acc","fillRibbon","chordItem","getRibbonGroupIdColor","ribbons","join","enter","enterSelection","transition","duration","attrTween","finalRibbon","initialRibbon","interpolateSource","interpolate","interpolateTarget","t","interpolated","update","getChordTitle","value","chordSelection","chordGroupId","$","tooltip","track","getGroupText","getChordGroupTitle","initialGroupData","groups","groupSelection","groupItem","ease","finalGroup","interpolateFn","text","latestRibbons","getDisplayTypeOnGroupClick","Source","otherGroupItem","finalGroupIndex","initialGroup","exit","remove","Expenses","expensesData","allRegions","countries","Object","keys","sort","regions","country","forEach","region","add","Set","from","names","concat","fetchAndCreate","json","ROOT_PATH","getRelationsMatrix","countryFilter","regionFilter","timeIndexFilter","map","maybeCountry","ALL_ID","includes","maybeRegion","dataItem","getTimeFramesNumber","getCountriesList","slice","getRegionsList","getAllNames","CONTAINER_ID","AUTOMATIC_TIME_ID","SLIDER_TIME_ID","COUNTRIES_SELECT_ID","REGIONS_SELECT_ID","CheckboxHandler","onChecked","onUnchecked","checkbox","init","setAttribute","addEventListener","checked","uncheck","createChartConfig","expenses","state","allNames","chordItemLabel","selectedCountry","selectedRegion","timeIndex","sourceIndex","targetIndex","sourceValue","Target","sourceGroupId","targetGroupId","Arrow","setupChartForm","sliderMaxValue","slider","change","timeValue","max","setupSelect","onChange","selectOptions","selectEl","selectOption","option","createElement","innerText","appendChild","newSelected","timeoutId","checkboxHandler","clearInterval","setInterval","nextValue","main","label","pageContext","className","type"],"sourceRoot":""}