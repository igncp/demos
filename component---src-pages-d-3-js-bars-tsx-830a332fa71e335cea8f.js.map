{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/bars/bars.module.css","webpack://demos/./src/demos/bars/bars.ts","webpack://demos/./src/pages/d3js/bars.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","axis","margin","floor","barWidth","colours","barYFn","d","barHeightFn","fetchData","fetch","ROOT_PATH","rawData","json","data","BarsChart","rootElId","interval","chart","color","render","width","document","getElementById","getBoundingClientRect","c","scaleLinear","domain","extent","range","heatmapColour","length","svg","select","append","attr","setInterval","getIntervalFn","x","y","max","rangeRound","xAxisG","styles","call","axisBottom","style","text","yAxisG","axisLeft","drawRectangles","refresh","redraw","clearInterval","selectAll","enter","_d","i","on","unshift","pop","newX","newAxis","transition","duration","barsChart","addItemEl","addEventListener","push","Math","random","setAttribute","pageContext","main","className","id","type"],"mappings":"mGAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O,+KC7BDC,EAAO,2BCcZC,EAAiB,IAAjBA,EAA2B,IAC3BC,EAFS,IAEqB,EAAbD,EAEjBE,EAAW,GAGXC,EAAU,CAAC,UAAW,UAAW,UAAW,WAC5CC,EAAS,SAACC,GAAD,OAAqBJ,EAHlB,EAGsCI,GAClDC,EAAc,SAACD,GAAD,OAJF,EAIuBA,GAEnCE,EAAS,mCAAG,sGACMC,MAASC,mCADf,cACVC,EADU,gBAEGA,EAAQC,OAFX,cAEVC,EAFU,yBAITA,GAJS,2CAAH,qDAgBTC,E,WAOJ,cAAuD,IAAlCD,EAAiC,EAAjCA,KAAME,EAA2B,EAA3BA,SACzBrB,KAAKmB,KAAOA,EACZnB,KAAKqB,SAAWA,EAEhBrB,KAAKsB,SAAW,KAChBtB,KAAKuB,MAAQ,KACbvB,KAAKwB,MAAQ,K,2BAGRC,OAAP,WACE,IAAQN,EAAmBnB,KAAnBmB,KAAME,EAAarB,KAAbqB,SACNK,EAAWC,SAASC,eAC1BP,GACgBQ,wBAFVH,MAIFI,GAAIC,WACPC,QAAOC,SAAOd,IACde,MAAM,CAAC,EAAG,IACPC,GAAyBJ,WAC5BC,QAAOE,SAAM,EAAG,EAAG,EAAMxB,EAAQ0B,SACjCF,MAAMxB,GAITV,KAAKwB,MAFS,SAACZ,GAAD,OAAqBuB,EAAcL,EAAElB,KAInD,IAAMyB,GAAMC,QAAO,IAAIjB,GAAYkB,OAAO,OAE1CF,EACGG,KAAK,SA/DG,KAgERA,KAAK,QAASd,GACdc,KAAK,QD/EW,iCCiFnB,IAAMjB,EAAQc,EAAIE,OAAO,KAEzBvC,KAAKuB,MAAQA,EAEbA,EAAMiB,KAAK,YAAX,aAAqCjC,EAArC,IAAoDA,EAApD,KAEAP,KAAKsB,SAAWmB,YAAYzC,KAAK0C,gBAAiB,KAElD,IAAMC,GAAIZ,WACPC,OAAO,CAAC,GAAKb,EAAKiB,OAAS,KAC3BF,MAAM,CAAC,EAAGzB,EAAWU,EAAKiB,SAEvBQ,GAAIb,WACPC,OAAO,CAAC,GAAGa,SAAI1B,KACf2B,WAAW,CAAC,GAAG,GAAkBD,SAAI1B,KAElC4B,EAASxB,EAAMgB,OAAO,KAE5BQ,EACGP,KAAK,QADR,SAC0BQ,GACvBR,KAAK,YAFR,eAEoChC,EAFpC,KAGGyC,MAAKC,SAAWP,IAEnBI,EACGR,OAAO,QACPC,KAAK,YAFR,aAEmC/B,EAAWU,EAAKiB,OAAU,EAF7D,QAGGI,KAAK,QAAS,cACdA,KAAK,IAAK,IACVA,KAAK,YAAa,SAClBA,KAAK,OAAQ,SACbW,MAAM,cAAe,OACrBC,KAAK,UAER,IAAMC,EAAS9B,EAAMgB,OAAO,KAE5Bc,EACGb,KAAK,QADR,SAC0BQ,GACvBR,KAAK,YAFR,eAEoChC,EAFpC,KAGGyC,MAAKK,SAASV,IAEjBS,EACGd,OAAO,QACPC,KAAK,YAFR,uBAGGA,KAAK,IAAK,IACVA,KAAK,YAAa,SAClBA,KAAK,OAAQ,SACbW,MAAM,cAAe,OACrBC,KAAK,SAERpD,KAAKuD,kB,EAGAC,QAAP,WACExD,KAAKuD,iBACLvD,KAAKyD,U,EAGCC,c,8GAAR,WACM1D,KAAKsB,UACPoC,cAAc1D,KAAKsB,a,EAIfiC,eAAR,WAA0B,IAAD,OACfhC,EAAuBvB,KAAvBuB,MAAOC,EAAgBxB,KAAhBwB,MAAOL,EAASnB,KAATmB,KAEpBI,EACCoC,UAAU,QACVxC,KAAKA,GACLyC,QACArB,OAAO,QACPC,KAAK,KAAK,SAACqB,EAAaC,GAAd,OAA4BrD,EAAWqD,KACjDtB,KAAK,IAAK7B,GACV6B,KAAK,QAAS/B,GACd+B,KAAK,SAAU3B,GACf2B,KAAK,QAAQ,SAAC5B,GAAD,OAAsBY,EAAkBZ,MACrDmD,GAAG,aAAa,WACf,EAAKL,mBAENK,GAAG,cAAc,WAChB,EAAKL,gBACL,EAAKpC,SAAWmB,YAAY,EAAKC,gBAAiB,QAEnDH,OAAO,SACPa,MAAK,SAACxC,GAAD,OAAqBA,M,EAGvB8B,cAAR,WAAyB,IAAD,OACtB,OAAO,WACL,IAAQvB,EAAS,EAATA,KAERA,EAAK6C,QAAQ7C,EAAK8C,OAClB,EAAKR,W,EAIDA,OAAR,WACE,IAAQlC,EAAuBvB,KAAvBuB,MAAOC,EAAgBxB,KAAhBwB,MAAOL,EAASnB,KAATmB,KAEtB,GAAKI,EAAL,CAIA,IAAM2C,GAAOnC,WACVC,OAAO,CAAC,GAAKb,EAAKiB,OAAS,KAC3BF,MAAM,CAAC,EAAGzB,EAAWU,EAAKiB,SAEvB+B,GAAUjB,SAAWgB,GAE3B3C,EAAMe,OAAoB,UAAU8B,aAAaC,SAAS,KAAKpB,KAAKkB,GAEpE5C,EACGe,OAAO,eACP8B,aACAC,SAAS,KACT7B,KAAK,YAJR,aAImC/B,EAAWU,EAAKiB,OAAU,EAJ7D,QAMAb,EACGoC,UAAU,QACVxC,KAAKA,GACLiD,aACAC,SAAS,KACT7B,KAAK,IAAK7B,GACV6B,KAAK,SAAU3B,GACf2B,KAAK,OAAQhB,GACbc,OAAO,SACPc,MAAK,SAACxC,GAAD,OAAqBA,O,KA0BjC,EAtBU,mCAAG,wGACQE,IADR,OACLK,EADK,QAGLmD,EAAY,IAAIlD,EAAU,CAC9BD,OACAE,SAAU,WAGFI,UAEJ8C,EAAY5C,SAASC,eAAe,aAEhC4C,iBAAiB,SAAS,WAC9BrD,EAAKiB,OAAS,IAChBjB,EAAKsD,KAAKC,KAAKlE,MAAMkE,KAAKC,UAAY9B,SAAI1B,IAAoB,GAC9DmD,EAAUd,WAEVe,EAAUK,aAAa,WAAY,eAjB5B,2CAAH,qDCjMV,EAXa,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACX,gBAAC,IAAD,CAAMC,KAAMA,EAAMD,YAAaA,GAC7B,4BACE,0BAAQE,UAAU,eAAeC,GAAG,WAAWC,KAAK,UAApD,aAIF,uBAAKD,GAAG","file":"component---src-pages-d-3-js-bars-tsx-830a332fa71e335cea8f.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var barsChart = \"bars-module--barsChart--3abBv\";\nexport var axis = \"bars-module--axis--_Qwuv\";","import {\n  Selection,\n  axisBottom,\n  axisLeft,\n  extent,\n  max,\n  range,\n  scaleLinear,\n  select,\n} from \"d3\"\n\nimport * as styles from \"./bars.module.css\"\n\ntype Data = number[]\n\nconst height = 500\nconst margin = { left: 160, top: 100 }\nconst floor = height - margin.top * 2\n\nconst barWidth = 30\nconst barHeight = 7\n\nconst colours = [\"#323247\", \"#7C7CC9\", \"#72B66C\", \"#429742\"]\nconst barYFn = (d: Data[number]) => floor - barHeight * d\nconst barHeightFn = (d: Data[number]) => d * barHeight\n\nconst fetchData = async (): Promise<Data> => {\n  const rawData = await fetch(`${ROOT_PATH}data/d3js/bars/data.json`)\n  const data = await rawData.json()\n\n  return data\n}\n\ntype BarsChartOpts = {\n  data: Data\n  rootElId: string\n}\n\ntype Interval = ReturnType<typeof setInterval>\ntype Chart = Selection<SVGGElement, unknown, HTMLElement, unknown>\ntype ColorFn = (c: Data[number]) => string\n\nclass BarsChart {\n  private readonly data: Data\n  private readonly rootElId: string\n  private interval: Interval | null\n  private chart: Chart | null\n  private color: ColorFn | null\n\n  public constructor({ data, rootElId }: BarsChartOpts) {\n    this.data = data\n    this.rootElId = rootElId\n\n    this.interval = null\n    this.chart = null\n    this.color = null\n  }\n\n  public render() {\n    const { data, rootElId } = this\n    const { width } = (document.getElementById(\n      rootElId\n    ) as HTMLElement).getBoundingClientRect()\n\n    const c = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([0, 1])\n    const heatmapColour: ColorFn = scaleLinear<string>()\n      .domain(range(0, 1, 1.0 / colours.length))\n      .range(colours)\n\n    const color = (d: Data[number]) => heatmapColour(c(d))\n\n    this.color = color as ColorFn\n\n    const svg = select(`#${rootElId}`).append(\"svg\")\n\n    svg\n      .attr(\"height\", height)\n      .attr(\"width\", width)\n      .attr(\"class\", styles.barsChart)\n\n    const chart = svg.append(\"g\")\n\n    this.chart = chart\n\n    chart.attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    this.interval = setInterval(this.getIntervalFn(), 1000)\n\n    const x = scaleLinear()\n      .domain([0.5, data.length + 0.5])\n      .range([1, barWidth * data.length])\n\n    const y = scaleLinear()\n      .domain([0, max(data) as number])\n      .rangeRound([0, -1 * barHeight * (max(data) as number)])\n\n    const xAxisG = chart.append(\"g\")\n\n    xAxisG\n      .attr(\"class\", `xAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisBottom(x))\n\n    xAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(${(barWidth * data.length) / 2} ,0)`)\n      .attr(\"class\", \"xAxisLabel\")\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Number\")\n\n    const yAxisG = chart.append(\"g\")\n\n    yAxisG\n      .attr(\"class\", `yAxis ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(axisLeft(y))\n\n    yAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(-30,${(-1 * (height - 60)) / 2})`)\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\")\n\n    this.drawRectangles()\n  }\n\n  public refresh() {\n    this.drawRectangles()\n    this.redraw()\n  }\n\n  private clearInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  private drawRectangles() {\n    const { chart, color, data } = this\n\n    ;(chart as Chart)\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (_d: unknown, i: number) => barWidth * i)\n      .attr(\"y\", barYFn)\n      .attr(\"width\", barWidth)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", (d: Data[number]) => (color as ColorFn)(d))\n      .on(\"mouseover\", () => {\n        this.clearInterval()\n      })\n      .on(\"mouseleave\", () => {\n        this.clearInterval()\n        this.interval = setInterval(this.getIntervalFn(), 1000)\n      })\n      .append(\"title\")\n      .text((d: Data[number]) => d)\n  }\n\n  private getIntervalFn() {\n    return () => {\n      const { data } = this\n\n      data.unshift(data.pop() as Data[0])\n      this.redraw()\n    }\n  }\n\n  private redraw() {\n    const { chart, color, data } = this\n\n    if (!chart) {\n      return\n    }\n\n    const newX = scaleLinear()\n      .domain([0.5, data.length + 0.5])\n      .range([1, barWidth * data.length])\n\n    const newAxis = axisBottom(newX)\n\n    chart.select<SVGGElement>(\".xAxis\").transition().duration(500).call(newAxis)\n\n    chart\n      .select(\".xAxisLabel\")\n      .transition()\n      .duration(500)\n      .attr(\"transform\", `translate(${(barWidth * data.length) / 2} ,0)`)\n\n    chart\n      .selectAll(\"rect\")\n      .data(data)\n      .transition()\n      .duration(500)\n      .attr(\"y\", barYFn)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", color as ColorFn)\n      .select(\"title\")\n      .text((d: Data[number]) => d)\n  }\n}\n\nconst main = async () => {\n  const data = await fetchData()\n\n  const barsChart = new BarsChart({\n    data,\n    rootElId: \"chart\",\n  })\n\n  barsChart.render()\n\n  const addItemEl = document.getElementById(\"add-item\") as HTMLElement\n\n  addItemEl.addEventListener(\"click\", () => {\n    if (data.length < 20) {\n      data.push(Math.floor(Math.random() * (max(data) as number)) + 1)\n      barsChart.refresh()\n    } else {\n      addItemEl.setAttribute(\"disabled\", \"disabled\")\n    }\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/bars/bars\"\n\nconst Bars = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form>\n      <button className=\"btn btn-info\" id=\"add-item\" type=\"button\">\n        Add item\n      </button>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Bars\n"],"sourceRoot":""}