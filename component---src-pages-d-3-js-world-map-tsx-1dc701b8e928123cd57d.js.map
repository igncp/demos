{"version":3,"file":"component---src-pages-d-3-js-world-map-tsx-1dc701b8e928123cd57d.js","mappings":"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","sources":["webpack://demos/./node_modules/topojson-client/src/identity.js","webpack://demos/./node_modules/topojson-client/src/feature.js","webpack://demos/./node_modules/topojson-client/src/transform.js","webpack://demos/./node_modules/topojson-client/src/reverse.js","webpack://demos/./src/demos/world-map/world-map.ts","webpack://demos/./src/pages/d3js/world-map.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export default function (x) {\n  return x;\n}","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\nexport default function (topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }\n\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n\n    while (points.length < 4) {\n      points.push(points[0]);\n    } // This may happen if an arc has only two points.\n\n\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n\n  return geometry(o);\n}","import identity from \"./identity.js\";\nexport default function (transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n\n    while (j < n) {\n      output[j] = input[j], ++j;\n    }\n\n    return output;\n  };\n}","export default function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n}","import {\n  D3DragEvent,\n  GeoPath,\n  GeoPermissibleObjects,\n  Selection,\n  drag as dragD3,\n  geoMercator,\n  geoPath,\n  interpolateBlues,\n  interpolateRdYlGn,\n  interpolateSpectral,\n  interpolateTurbo,\n  interpolateViridis,\n  json,\n  scaleLinear,\n  select,\n} from \"d3\"\nimport { feature } from \"topojson-client\"\n\nconst CONTAINER_ID = \"chart\"\nconst UPDATE_BUTTON_ID = \"update-colors\"\n\ntype CountryData = GeoPermissibleObjects & {\n  id: number\n}\n\nconst fetchData = () => json(`${ROOT_PATH}data/d3js/world-map/world.json`)\n\nconst transitionDuration = 1500\n\ntype WorldData = any // eslint-disable-line @typescript-eslint/no-explicit-any\n\ntype ChartConfig = {\n  rootElId: string\n  world: WorldData\n}\n\ntype Bounds = [[number, number], [number, number]]\n\nconst calculateBounds = ({\n  featuresData,\n  projectionPath,\n}: {\n  featuresData: any[] // eslint-disable-line @typescript-eslint/no-explicit-any\n  projectionPath: GeoPath\n}) =>\n  featuresData.reduce<Bounds>(\n    (...[acc, featureData]) => {\n      const dataBounds = projectionPath.bounds(featureData)\n\n      acc[0][0] = Math.min(acc[0][0], dataBounds[0][0])\n      acc[0][1] = Math.min(acc[0][1], dataBounds[0][1])\n      acc[1][0] = Math.max(acc[1][0], dataBounds[1][0])\n      acc[1][1] = Math.max(acc[1][1], dataBounds[1][1])\n\n      return acc\n    },\n    [\n      [Infinity, Infinity],\n      [-Infinity, -Infinity],\n    ]\n  )\n\nconst boundDrag = ({\n  bounds,\n  dragPoint,\n  height,\n  width,\n}: {\n  bounds: Bounds\n  dragPoint: { draggedX: number; draggedY: number }\n  height: number\n  width: number\n}) => {\n  if (dragPoint.draggedX * -1 < bounds[0][0]) {\n    dragPoint.draggedX = bounds[0][0] * -1\n  } else if (dragPoint.draggedX * -1 > bounds[1][0] - width) {\n    dragPoint.draggedX = (bounds[1][0] - width) * -1\n  }\n\n  if (dragPoint.draggedY * -1 < bounds[0][1]) {\n    dragPoint.draggedY = bounds[0][1] * -1\n  } else if (dragPoint.draggedY * -1 > bounds[1][1] - height) {\n    dragPoint.draggedY = (bounds[1][1] - height) * -1\n  }\n}\n\ntype ChartElements = Readonly<{\n  backgroundSel: Selection<SVGRectElement, unknown, HTMLElement, unknown>\n  contentSel: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  svgDragSel: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  svgSel: Selection<SVGSVGElement, unknown, HTMLElement, unknown>\n}>\n\nconst addDropShadowFilter = ({\n  deviation,\n  slope,\n  svg,\n}: {\n  deviation: number\n  slope: number\n  svg: Selection<SVGSVGElement, unknown, HTMLElement, unknown>\n}) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs.append(\"filter\").attr(\"id\", `drop-shadow`)\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nconst addBlurFilter = <T>(\n  svg: Selection<SVGSVGElement, T, HTMLElement, unknown>\n) => {\n  svg\n    .append(\"g\")\n    .append(\"filter\")\n    .attr(\"height\", \"300%\")\n    .attr(\"x\", \"-100%\")\n    .attr(\"y\", \"-100%\")\n    .attr(\"id\", \"blur\")\n    .attr(\"width\", \"300%\")\n    .append(\"feGaussianBlur\")\n    .attr(\"stdDeviation\", \"5 5\")\n}\n\nconst colorFns = [\n  interpolateRdYlGn,\n  interpolateSpectral,\n  interpolateBlues,\n  interpolateViridis,\n  interpolateTurbo,\n]\n\nclass WorldMap {\n  private readonly config: ChartConfig\n  private readonly state: {\n    colorFnIndex: number\n    draggedX: number\n    draggedY: number\n    lastZoomId: number | null\n  } = {\n    colorFnIndex: 0,\n    draggedX: 0,\n    draggedY: 0,\n    lastZoomId: null,\n  }\n\n  private dimensions!: {\n    height: number\n    width: number\n  }\n\n  private projectionPath!: GeoPath\n  private bounds!: Bounds\n\n  private readonly elements: ChartElements\n\n  public constructor(config: ChartConfig) {\n    this.config = config\n\n    const {\n      config: { rootElId },\n    } = this\n\n    const svgSel = select(`#${rootElId}`).append(\"svg\")\n    const svgDragSel = svgSel.append(\"g\")\n    const backgroundSel = svgDragSel\n      .append(\"rect\")\n      .attr(\"class\", \"background\")\n      .style(\"fill\", \"#daedff\")\n    const contentSel = svgDragSel.append(\"g\")\n\n    addDropShadowFilter({\n      deviation: 2,\n      slope: 0.5,\n      svg: svgSel,\n    })\n    addBlurFilter(svgSel)\n\n    this.elements = {\n      backgroundSel,\n      contentSel,\n      svgDragSel,\n      svgSel,\n    }\n\n    this.render()\n    this.setupDrag()\n\n    window.addEventListener(\"resize\", this.handleWindowResize)\n  }\n\n  public teardown() {\n    window.removeEventListener(\"resize\", this.handleWindowResize)\n  }\n\n  public updateColors() {\n    this.state.colorFnIndex += 1\n\n    if (this.state.colorFnIndex >= colorFns.length) {\n      this.state.colorFnIndex = 0\n    }\n\n    this.render()\n  }\n\n  private setDimensions() {\n    const {\n      config: { rootElId },\n    } = this\n    const { width } = (\n      document.getElementById(rootElId) as HTMLElement\n    ).getBoundingClientRect()\n    const height = 500\n\n    this.dimensions = {\n      height,\n      width,\n    }\n  }\n\n  private render() {\n    const {\n      config: { world },\n      elements: { backgroundSel, svgSel },\n    } = this\n\n    this.setDimensions()\n\n    const {\n      dimensions: { height, width },\n    } = this\n    const projection = geoMercator()\n      .center([0, 45.4])\n      .scale(Math.max((150 * width) / 750, 140))\n      .translate([width / 2, height / 2])\n\n    this.projectionPath = geoPath().projection(projection)\n\n    const { features: featuresData } = feature(\n      world,\n      world.objects.countries\n    ) as any // eslint-disable-line @typescript-eslint/no-explicit-any\n\n    this.bounds = calculateBounds({\n      featuresData,\n      projectionPath: this.projectionPath,\n    })\n\n    const colorScale = scaleLinear()\n      .domain([0, featuresData.length - 1])\n      .range([0, 1])\n\n    const colorFn = (...[, countryIndex]: [unknown, number]) =>\n      colorFns[this.state.colorFnIndex](colorScale(countryIndex))\n\n    svgSel.attr(\"width\", width).attr(\"height\", height)\n\n    const backgroundSize = 100_000\n\n    backgroundSel\n      .on(\"click\", this.setZoom as any) // eslint-disable-line @typescript-eslint/no-explicit-any\n      .attr(\"height\", backgroundSize)\n      .attr(\"width\", backgroundSize)\n      .attr(\n        \"transform\",\n        `translate(${Math.min(0, (backgroundSize - width) / -2)}, ${Math.min(\n          0,\n          (backgroundSize - height) / -2\n        )})`\n      )\n\n    const countriesUpdateSel =\n      this.getCountriesSel().data<CountryData>(featuresData)\n\n    const countriesStrokeWidth = \"1px\"\n\n    countriesUpdateSel.exit().remove()\n    countriesUpdateSel\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", (countryData: CountryData) => `country ${countryData.id}`)\n      .style(\"stroke\", \"#fff\")\n      .style(\"stroke-width\", countriesStrokeWidth)\n      .attr(\"filter\", \"url(#drop-shadow)\")\n\n    const countriesSel = this.getCountriesSel()\n      .attr(\"d\", this.projectionPath)\n      .style(\"fill\", colorFn)\n      .on(\"mouseenter\", function handleCountryMouseEnter() {\n        countriesSel.attr(\"filter\", \"url(#blur)\")\n        select(this)\n          .attr(\"filter\", \"url(#drop-shadow)\")\n          .style(\"stroke-width\", \"2px\")\n      })\n      .on(\"mouseleave\", () => {\n        countriesSel\n          .attr(\"filter\", \"url(#drop-shadow)\")\n          .style(\"stroke-width\", countriesStrokeWidth)\n      })\n      .on(\"click\", this.setZoom)\n\n    this.updateDrag()\n  }\n\n  private getCountriesSel() {\n    return this.elements.contentSel.selectAll<SVGPathElement, CountryData>(\n      \".country\"\n    )\n  }\n\n  private updateDrag() {\n    const {\n      bounds,\n      dimensions: { height, width },\n      elements: { svgDragSel },\n    } = this\n\n    boundDrag({\n      bounds,\n      dragPoint: this.state,\n      height,\n      width,\n    })\n\n    svgDragSel.attr(\n      \"transform\",\n      `translate(${this.state.draggedX},${this.state.draggedY})`\n    )\n  }\n\n  private setupDrag() {\n    const {\n      elements: { svgSel },\n    } = this\n\n    const dragHandler = (\n      dragEvent: D3DragEvent<SVGSVGElement, unknown, unknown>\n    ) => {\n      this.state.draggedX += dragEvent.dx\n      this.state.draggedY += dragEvent.dy\n\n      this.updateDrag()\n    }\n\n    const dragBehavior = dragD3<SVGSVGElement, unknown>().on(\n      \"drag\",\n      dragHandler\n    )\n\n    svgSel.style(\"cursor\", \"move\").call(dragBehavior).on(\"drag\", dragHandler)\n  }\n\n  private readonly setZoom = (...[, countryData]: [unknown, CountryData]) => {\n    const {\n      dimensions: { height, width },\n    } = this\n    const countriesSel = this.getCountriesSel()\n\n    if (!(countryData as unknown) || this.state.lastZoomId === countryData.id) {\n      this.state.lastZoomId = null\n\n      countriesSel\n        .transition()\n        .duration(transitionDuration)\n        .attr(\n          \"transform\",\n          `translate(${width / 2},${height / 2})scale(${1})translate(${\n            -width / 2\n          },${-height / 2})`\n        )\n\n      return\n    }\n\n    this.state.lastZoomId = countryData.id\n\n    const centroid = this.projectionPath.centroid(countryData)\n\n    const x = centroid[0]\n    const y = centroid[1]\n\n    countriesSel\n      .transition()\n      .duration(transitionDuration)\n      .attr(\n        \"transform\",\n        `translate(${width / 2},${height / 2})scale(${8})translate(${-x},${-y})`\n      )\n  }\n\n  private readonly handleWindowResize = () => {\n    this.render()\n  }\n}\n\nconst main = async () => {\n  const world = await fetchData()\n\n  const worldMap = new WorldMap({\n    rootElId: CONTAINER_ID,\n    world,\n  })\n\n  document.getElementById(UPDATE_BUTTON_ID)?.addEventListener(\"click\", () => {\n    worldMap.updateColors()\n  })\n}\n\nexport { CONTAINER_ID, UPDATE_BUTTON_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, {\n  CONTAINER_ID,\n  UPDATE_BUTTON_ID,\n} from \"@/demos/world-map/world-map\"\n\nconst WorldMap = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form style={{ marginBottom: 20 }}>\n      <button className=\"btn btn-info\" id={UPDATE_BUTTON_ID} type=\"button\">\n        Update colors\n      </button>\n    </form>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default WorldMap\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["x","topology","o","objects","type","features","geometries","map","id","bbox","properties","geometry","transformPoint","transform","identity","x0","y0","kx","scale","ky","dx","translate","dy","input","i","j","n","length","output","Array","arcs","arc","points","pop","a","k","push","array","t","reverse","point","p","line","ring","polygon","coordinates","object","CONTAINER_ID","UPDATE_BUTTON_ID","transitionDuration","colorFns","interpolateRdYlGn","interpolateSpectral","interpolateBlues","interpolateViridis","interpolateTurbo","WorldMap","config","state","colorFnIndex","draggedX","draggedY","lastZoomId","setZoom","countryData","dimensions","height","width","countriesSel","getCountriesSel","transition","duration","attr","centroid","projectionPath","y","handleWindowResize","render","this","rootElId","svgSel","select","append","svgDragSel","backgroundSel","style","contentSel","deviation","slope","filter","svg","feMerge","addDropShadowFilter","elements","setupDrag","window","addEventListener","teardown","removeEventListener","updateColors","setDimensions","document","getElementById","getBoundingClientRect","world","projection","geoMercator","center","Math","max","geoPath","featuresData","feature","countries","bounds","reduce","acc","featureData","dataBounds","min","Infinity","calculateBounds","colorScale","scaleLinear","domain","range","backgroundSize","on","countriesUpdateSel","data","exit","remove","enter","countryIndex","updateDrag","selectAll","dragPoint","boundDrag","dragHandler","dragEvent","dragBehavior","dragD3","call","main","json","ROOT_PATH","worldMap","pageContext","marginBottom","className","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}