{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/common.ts","webpack://demos/./src/demos/chord/chord-chart-config.ts","webpack://demos/./src/demos/chord/chord-data-model.ts","webpack://demos/./src/demos/chord/chord.module.css","webpack://demos/./src/demos/chord/double-chord-chart.ts","webpack://demos/./src/demos/chord/chord.ts","webpack://demos/./src/pages/d3js/chord.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","length","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","STORYBOOK_DEMO_KEY","JQUERYUI","SCRIPT","STYLE","CONTAINER_ID","getChartConfig","financialData","debits","getDebits","credits","getCredits","countriesList","getCountriesList","formatCurrency","format","groupItems","map","country","id","label","name","extractChordMatrix","row","cell","amount","chords","chordsTitles","getGroupTitle","chartIndex","chordGroup","index","getRibbonTitle","sourceIndex","sourceValue","targetIndex","sourceData","targetData","rootElId","FinancialData","fetchAndCreate","csv","ROOT_PATH","originalCSVItems","countries","countryName","parsedList","originalCSVItem","creditor","debtor","risk","from","forEach","financialItem","chord","group","headingTitle","addDropShadowFilter","charts","deviation","slope","filter","append","attr","colours","margin","height","renderChart","chartConfig","rootEl","document","getElementById","leftChordItems","rightChordItems","leftChordLabel","rightChordLabel","dropShadowRibbonsId","uuidv1","slice","dropShadowGroupsId","ribbonItemClass","chordGroupClass","classList","add","width","getBoundingClientRect","r1","Math","min","r0","chordGroupArc","arcD3","innerRadius","outerRadius","select","selectAll","data","enter","style","leftChart","rightChart","setLabel","chart","text","colorDomain","scaleLinear","domain","extent","range","heatmapColour","fillGroupIndex","chordGroupIndex","each","numberMatrix","svgComp","chordData","sortGroups","descending","sortSubgroups","sortChords","ribbonPath","ribbonD3","radius","styles","chordItem","target","ribbonItem","originalColor","rgb","darker","formatHex","source","targetValue","g","groups","$","tooltip","track","pageContext","links","main","scripts"],"mappings":"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","file":"component---src-pages-d-3-js-chord-tsx-0bbbbdb58c4da0f239c7.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","type DocName = string\ntype DocLink = string\n\nexport type Meta = {\n  description: string\n}\n\nexport type DemoBase = {\n  dataFiles: string[]\n  docs: Array<[DocName, DocLink]>\n  isCompleted: boolean\n  name: string\n  notes: string[]\n  sources: string[]\n  summary: string[]\n}\n\ntype DemoFile = {\n  content: string\n  fileName: string\n}\n\nexport type DemoInfo = DemoBase & {\n  category: string\n  files: {\n    demoCSS: DemoFile[]\n    demoTS: DemoFile[]\n    page: {\n      content: string\n      type: string\n    }\n  }\n  key: string\n}\n\nexport type DemoSummary = {\n  category: string\n  key: string\n  name: DemoBase[\"name\"]\n  route: string\n}\n\nexport type IndexPageProps = {\n  pageContext: {\n    groupedDemos: DemoSummary[][]\n    meta: Meta\n    numberPerGroup: number\n  }\n}\n\nexport type DemoPageProps = {\n  pageContext: {\n    demoInfo: DemoInfo\n    meta: Meta\n  }\n}\n\nexport const STORYBOOK_DEMO_KEY = \"storybook\"\n\nexport const JQUERYUI = {\n  SCRIPT: \"/vendors/jquery-ui/jquery-ui.min.js\",\n  STYLE: \"/vendors/jquery-ui/themes/base/jquery-ui.min.css\",\n}\n","import { format } from \"d3\"\n\nimport { FinancialData, FinancialMatrix } from \"./chord-data-model\"\nimport { ChartConfig } from \"./double-chord-chart\"\n\nexport const CONTAINER_ID = \"chart\"\n\nexport const getChartConfig = (financialData: FinancialData): ChartConfig => {\n  const debits = financialData.getDebits()\n  const credits = financialData.getCredits()\n  const countriesList = financialData.getCountriesList()\n\n  const formatCurrency = format(\",.3r\")\n\n  const getRibbonTitle: ChartConfig[\"getRibbonTitle\"] = ({\n    sourceIndex,\n    sourceValue,\n    targetIndex,\n  }) => {\n    const {\n      [sourceIndex]: sourceData,\n      [targetIndex]: targetData,\n    } = countriesList\n\n    return `${sourceData.name} owes ${targetData.name} $${formatCurrency(\n      sourceValue\n    )}B.`\n  }\n\n  const getGroupTitle: ChartConfig[\"getGroupTitle\"] = ({\n    chartIndex,\n    chordGroup,\n  }) =>\n    `${countriesList[chordGroup.index].name} ${\n      chartIndex ? \"owes\" : \"is owed\"\n    } $${formatCurrency(chordGroup.value)}B.`\n\n  const groupItems = countriesList.map((country) => ({\n    id: country.id,\n    label: country.name,\n  }))\n\n  const extractChordMatrix = (row: FinancialMatrix[0]) =>\n    row.map((cell) => (cell ? +cell.amount : 0))\n\n  const chordLeft = debits.map(extractChordMatrix)\n  const chordRight = credits.map(extractChordMatrix)\n\n  return {\n    chords: [chordLeft, chordRight],\n    chordsTitles: [\"Debits\", \"Credits\"],\n    getGroupTitle,\n    getRibbonTitle,\n    groupItems,\n    rootElId: CONTAINER_ID,\n  }\n}\n","import { csv } from \"d3\"\n\ntype CSVDataItem = {\n  amount: string\n  creditor: string\n  debtor: string\n  risk: string\n}\n\ntype Country = {\n  id: number\n  name: string\n}\n\ntype Creditor = Country\ntype Debtor = Country & { risk: string }\n\ntype CSVParsedItem = {\n  amount: string\n  creditor: Creditor\n  debtor: Debtor\n  risk: string\n}\n\nexport type FinancialMatrix = Array<Array<CSVParsedItem | null>>\n\nclass FinancialData {\n  private readonly credits: FinancialMatrix\n  private readonly debits: FinancialMatrix\n  private readonly countriesList: Country[]\n\n  private constructor({\n    countriesList,\n    credits,\n    debits,\n  }: {\n    countriesList: Country[]\n    credits: FinancialMatrix\n    debits: FinancialMatrix\n  }) {\n    this.credits = credits\n    this.debits = debits\n    this.countriesList = countriesList\n  }\n\n  public static async fetchAndCreate(): Promise<FinancialData> {\n    const originalCSVItems = (await csv(\n      `${ROOT_PATH}data/d3js/chord/data.csv`\n    )) as CSVDataItem[]\n\n    const countriesList: Country[] = []\n    const countries: Record<string, Country> = {}\n    const debits: FinancialMatrix = []\n    const credits: FinancialMatrix = []\n\n    let id = 0\n\n    const country = (countryName: string): Country => {\n      if (!(countryName in countries)) {\n        countries[countryName] = {\n          id,\n          name: countryName,\n        }\n\n        id += 1\n      }\n\n      return countries[countryName]\n    }\n\n    const parsedList: CSVParsedItem[] = originalCSVItems.map(\n      (originalCSVItem) => ({\n        ...originalCSVItem,\n        creditor: country(originalCSVItem.creditor),\n        debtor: {\n          ...country(originalCSVItem.debtor),\n          risk: originalCSVItem.risk,\n        },\n      })\n    )\n\n    Array.from({ length: id }).forEach((...[, sourceIndex]) => {\n      debits[sourceIndex] = []\n      credits[sourceIndex] = []\n\n      Array.from({ length: id }).forEach((...[, targetIndex]) => {\n        debits[sourceIndex][targetIndex] = null\n        credits[sourceIndex][targetIndex] = null\n      })\n    })\n\n    parsedList.forEach((financialItem) => {\n      debits[financialItem.creditor.id][financialItem.debtor.id] = financialItem\n      credits[financialItem.debtor.id][\n        financialItem.creditor.id\n      ] = financialItem\n\n      countriesList[financialItem.creditor.id] = financialItem.creditor\n      countriesList[financialItem.debtor.id] = financialItem.debtor\n    })\n\n    return new FinancialData({\n      countriesList,\n      credits,\n      debits,\n    })\n  }\n\n  public getCredits() {\n    return this.credits\n  }\n\n  public getDebits() {\n    return this.debits\n  }\n\n  public getCountriesList() {\n    return this.countriesList\n  }\n}\n\nexport { FinancialData }\n","// extracted by mini-css-extract-plugin\nexport var chordChart = \"chord-module--chordChart--lzAYO\";\nexport var chord = \"chord-module--chord--1Zjd0\";\nexport var chartTitle = \"chord-module--chartTitle--33urD\";\nexport var group = \"chord-module--group--309FH\";\nexport var headingTitle = \"chord-module--headingTitle--A2lxW\";","import {\n  BaseType,\n  Chord,\n  ChordGroup,\n  Selection,\n  arc as arcD3,\n  chord,\n  descending,\n  extent,\n  range,\n  rgb,\n  ribbon as ribbonD3,\n  scaleLinear,\n  select,\n} from \"d3\"\nimport { v1 as uuidv1 } from \"uuid\"\n\nimport * as styles from \"./chord.module.css\"\n\nconst addDropShadowFilter = <SVGData>({\n  charts,\n  deviation,\n  name,\n  slope,\n}: {\n  charts: Selection<BaseType, SVGData, BaseType, unknown>\n  deviation: number\n  name: string\n  slope: number\n}) => {\n  const defs = charts.append(\"defs\")\n  const filter = defs.append(\"filter\").attr(\"id\", name)\n\n  filter\n    .append(\"feOffset\")\n    .attr(\"dx\", 0.5)\n    .attr(\"dy\", 0.5)\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"result\", \"offOut\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"offOut\")\n    .attr(\"result\", \"blurOut\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter\n    .append(\"feBlend\")\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"in2\", \"blurOut\")\n    .attr(\"mode\", \"normal\")\n\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n}\n\nconst colours = [\n  \"#39B347\",\n  \"#C92E47\",\n  \"#DB704D\",\n  \"#FFA22C\",\n  \"#5E92AA\",\n  \"#F8EDD3\",\n]\n\nconst margin = {\n  bottom: 20,\n  top: 50,\n}\nconst height = 500\n\ntype GroupItem = {\n  id: number\n  label: string\n}\ntype ChordMatrix = number[][]\n\nexport type ChartConfig = {\n  chords: [ChordMatrix, ChordMatrix]\n  chordsTitles: [string, string]\n  getGroupTitle: (o: { chartIndex: number; chordGroup: ChordGroup }) => string\n  getRibbonTitle: (o: {\n    sourceIndex: number\n    sourceValue: number\n    targetIndex: number\n    targetValue: number\n  }) => string\n  groupItems: GroupItem[]\n  rootElId: string\n}\n\nexport const renderChart = (chartConfig: ChartConfig) => {\n  const { chords, chordsTitles, groupItems, rootElId } = chartConfig\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n  const [leftChordItems, rightChordItems] = chords\n  const [leftChordLabel, rightChordLabel] = chordsTitles\n\n  const dropShadowRibbonsId = `drop-shadow-ribbons-${uuidv1().slice(0, 6)}`\n  const dropShadowGroupsId = `drop-shadow-groups-${uuidv1().slice(0, 6)}`\n\n  const ribbonItemClass = `ribbon-item-${uuidv1().slice(0, 6)}`\n  const chordGroupClass = `chord-group-${uuidv1().slice(0, 6)}`\n\n  rootEl.classList.add(styles.chordChart)\n\n  const width = rootEl.getBoundingClientRect().width / 2 - 20\n\n  const r1 = Math.min(width, height) / 2 - 4\n  const r0 = r1 - 20\n\n  const chordGroupArc = arcD3<ChordGroup>().innerRadius(r0).outerRadius(r1)\n  const svg = select(`#${rootElId}`)\n\n  const charts = svg\n    .selectAll(\"div\")\n    .data([leftChordItems, rightChordItems])\n    .enter()\n    .append(\"div\")\n    .style(\"display\", \"inline-block\")\n    .style(\"width\", `${width}px`)\n    .style(\"height\", `${height + margin.top + margin.bottom}px`)\n    .append(\"svg:svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"svg:g\")\n    .attr(\"transform\", `translate(${width / 2},${height / 2 + margin.top})`)\n\n  const leftChart = charts.filter((...[, chartIndex]) => chartIndex === 0)\n  const rightChart = charts.filter((...[, chartIndex]) => chartIndex === 1)\n\n  const setLabel = ({\n    chart,\n    label,\n  }: {\n    chart: Selection<BaseType, ChordMatrix, BaseType, unknown>\n    label: string\n  }) =>\n    chart\n      .append(\"text\")\n      .text(label)\n      .attr(\"transform\", `translate(0,${(-1 * height) / 2 - 10})`)\n      .attr(\"class\", styles.chartTitle)\n      .attr(\"text-anchor\", \"middle\")\n\n  setLabel({ chart: leftChart, label: leftChordLabel })\n  setLabel({ chart: rightChart, label: rightChordLabel })\n\n  addDropShadowFilter({\n    charts,\n    deviation: 2,\n    name: dropShadowRibbonsId,\n    slope: 0.4,\n  })\n  addDropShadowFilter({\n    charts,\n    deviation: 3,\n    name: dropShadowGroupsId,\n    slope: 0.5,\n  })\n\n  const colorDomain = scaleLinear()\n    .domain(extent([0, groupItems.length - 1]) as [number, number])\n    .range([0, 1])\n\n  const heatmapColour = scaleLinear<string>()\n    .domain(range(0, 1, 1.0 / colours.length))\n    .range(colours)\n\n  const fillGroupIndex = (chordGroupIndex: number) =>\n    heatmapColour(colorDomain(chordGroupIndex))\n\n  charts.each(function (...[numberMatrix, chartIndex]) {\n    const svgComp = select(this)\n\n    const chordData = chord()\n      .sortGroups(descending)\n      .sortSubgroups(descending)\n      .sortChords(descending)(numberMatrix)\n\n    const ribbonPath = ribbonD3<Chord, Chord>().radius(r0)\n\n    svgComp\n      .selectAll(`path.${styles.chord}`)\n      .data(chordData)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", ribbonPath)\n      .attr(\"class\", `${styles.chord} ${ribbonItemClass}`)\n      .style(\"fill\", (chordItem) => fillGroupIndex(chordItem.target.index))\n      .style(\"filter\", `url(#${dropShadowRibbonsId})`)\n      .style(\"stroke\", (ribbonItem) => {\n        const originalColor = fillGroupIndex(ribbonItem.target.index)\n        const newColor = rgb(originalColor).darker()\n\n        return newColor.formatHex()\n      })\n      .style(\"stroke-width\", 2)\n      .attr(\"title\", (ribbonItem) =>\n        chartConfig.getRibbonTitle({\n          sourceIndex: ribbonItem.source.index,\n          sourceValue: ribbonItem.source.value,\n          targetIndex: ribbonItem.target.index,\n          targetValue: ribbonItem.source.value,\n        })\n      )\n\n    const g = svgComp\n      .selectAll(`g.${styles.group}`)\n      .data(chordData.groups)\n      .enter()\n      .append(\"svg:g\")\n      .attr(\"class\", styles.group)\n\n    g.append(\"svg:path\")\n      .attr(\"d\", chordGroupArc)\n      .style(\"fill\", (chordGroup) => fillGroupIndex(chordGroup.index))\n      .attr(\"id\", (chordGroup) => `group${chordGroup.index}-${chartIndex}`)\n      .attr(\"class\", chordGroupClass)\n      .style(\"filter\", () => `url(#${dropShadowGroupsId})`)\n      .attr(\"title\", (chordGroup) =>\n        chartConfig.getGroupTitle({\n          chartIndex,\n          chordGroup,\n        })\n      )\n\n    g.append(\"svg:text\")\n      .attr(\"x\", 6)\n      .attr(\"dy\", 15)\n      .filter((chordGroup) => chordGroup.value > 150)\n      .append(\"svg:textPath\")\n      .attr(\n        \"xlink:href\",\n        (chordGroup) => `#group${chordGroup.index}-${chartIndex}`\n      )\n      .text((chordGroup) => groupItems[chordGroup.index].label)\n      .attr(\"class\", styles.headingTitle)\n\n    $(`.${ribbonItemClass}`).tooltip({\n      track: true,\n    })\n\n    $(`.${chordGroupClass}`).tooltip({\n      track: true,\n    })\n  })\n}\n","import { CONTAINER_ID, getChartConfig } from \"./chord-chart-config\"\nimport { FinancialData } from \"./chord-data-model\"\nimport { renderChart } from \"./double-chord-chart\"\n\nconst main = async () => {\n  const financialData = await FinancialData.fetchAndCreate()\n  const chartConfig = getChartConfig(financialData)\n\n  renderChart(chartConfig)\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps, JQUERYUI } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/chord/chord\"\n\nconst Chord = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[JQUERYUI.STYLE]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[JQUERYUI.SCRIPT]}\n  >\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Chord\n"],"sourceRoot":""}