{"version":3,"file":"component---src-pages-d-3-js-fish-eye-tsx-7c431ca617a0b4534fa9.js","mappings":"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","sources":["webpack://demos/./src/demos/_utils/fish-eye.ts","webpack://demos/./src/demos/fish-eye/fish-eye.module.css","webpack://demos/./src/demos/fish-eye/fish-eye-chart.ts","webpack://demos/./src/demos/fish-eye/fish-eye-config.ts","webpack://demos/./src/demos/fish-eye/fish-eye.ts","webpack://demos/./src/pages/d3js/fish-eye.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { AxisScale, ScaleLinear, extent, scaleLinear } from \"d3\"\n\ntype ScaleFn = typeof scaleLinear\ntype Scale = ScaleLinear<number, number>\n\nconst d3Rebind = <\n  MethodArgs extends any[], // eslint-disable-line @typescript-eslint/no-explicit-any\n  Method extends string,\n  Source extends { [k in Method]: (...args: MethodArgs) => Source },\n  Target\n>({\n  method,\n  source,\n  target,\n}: {\n  method: Method\n  source: Source\n  target: Target\n}) =>\n  function boundMethod(...args: MethodArgs) {\n    const methodResult = source[method](...args)\n\n    return methodResult === source ? target : methodResult\n  }\n\nconst fishEyeScale = ({\n  distortion: initialDistortion,\n  focus: initialFocus,\n  scale,\n}: {\n  distortion: number\n  focus: number\n  scale: Scale\n}) => {\n  let distortion = initialDistortion\n  let focus = initialFocus\n\n  function fisheye(scaleArgs: Parameters<Scale>[0]) {\n    const x = scale(scaleArgs)\n    const left = x < focus\n    const [min, max] = extent<number>(scale.range()) as [number, number]\n    let m = left ? focus - min : max - focus\n\n    if (m === 0) {\n      m = max - min\n    }\n\n    return (\n      ((left ? -1 : 1) * m * (distortion + 1)) /\n        (distortion + m / Math.abs(x - focus)) +\n      focus\n    )\n  }\n\n  type FisheyeFn = {\n    (newValue: number): typeof fisheye\n    (): number\n  }\n\n  const createFisheyeFn = (cb: (newValue: number) => void): FisheyeFn =>\n    ((newValue?: number) => {\n      if (typeof newValue === \"undefined\") {\n        return distortion\n      }\n\n      cb(newValue)\n\n      return fisheye\n    }) as FisheyeFn\n\n  fisheye.distortion = createFisheyeFn((newDistortion) => {\n    distortion = +newDistortion\n  })\n\n  fisheye.focus = createFisheyeFn((newFocus) => {\n    focus = +newFocus\n  })\n\n  fisheye.copy = function fisheyeCopy() {\n    return fishEyeScale({\n      distortion,\n      focus,\n      scale: scale.copy(),\n    })\n  }\n\n  fisheye.nice = scale.nice\n  fisheye.ticks = scale.ticks\n  fisheye.tickFormat = scale.tickFormat\n\n  fisheye.domain = d3Rebind({\n    method: \"domain\",\n    source: scale,\n    target: fisheye,\n  })\n\n  fisheye.range = d3Rebind({\n    method: \"range\",\n    source: scale,\n    target: fisheye,\n  })\n\n  return fisheye\n}\n\nconst fisheye = {\n  scale(scaleType: ScaleFn) {\n    return fishEyeScale({\n      distortion: 3,\n      focus: 0,\n      scale: scaleType(),\n    })\n  },\n}\n\nexport type FishEyeScale = AxisScale<number> &\n  ReturnType<typeof fisheye.scale> &\n  Scale\n\nexport default fisheye\n","// extracted by mini-css-extract-plugin\nexport var fishEyeChart = \"fish-eye-module--fishEyeChart--20e7a\";\nexport var axis = \"fish-eye-module--axis--33d9a\";\nexport var background = \"fish-eye-module--background--ac9ea\";\nexport var chartTitle = \"fish-eye-module--chartTitle--a1de9\";\nexport var pointer = \"fish-eye-module--pointer--15827\";","import {\n  Axis,\n  AxisScale,\n  ScaleOrdinal,\n  ScalePower,\n  Selection,\n  axisBottom,\n  axisLeft,\n  format,\n  pointer as pointerD3,\n  scaleLinear,\n  scaleLog,\n  scaleOrdinal,\n  scaleSqrt,\n  schemePastel2,\n  select,\n} from \"d3\"\n\nimport d3Fisheye, { FishEyeScale } from \"@/demos/_utils/fish-eye\"\n\nimport * as styles from \"./fish-eye.module.css\"\n\nconst margin = {\n  bottom: 70,\n  left: 70,\n  right: 50,\n  top: 80,\n}\nconst height = 700 - margin.top - margin.bottom\n\ntype FishEyeChartOpts<ChartData> = Readonly<{\n  chartItems: ChartData[]\n  chartTitle: string\n  colorDomain: string[]\n  getCircleTitle: (chartItem: ChartData) => string\n  getColorValue: (chartItem: ChartData) => string\n  getRadiusValue: (chartItem: ChartData) => number\n  getXValue: (chartItem: ChartData) => number\n  getYValue: (chartItem: ChartData) => number\n  rootElId: string\n  xAxisLabel: string\n  yAxisLabel: string\n}>\n\nclass FishEyeChart<ChartData> {\n  private readonly config: FishEyeChartOpts<ChartData>\n\n  private width = 0\n\n  private dom!: {\n    dot?: Selection<SVGCircleElement, ChartData, SVGGElement, unknown>\n    pointer?: Selection<SVGTextElement, unknown, HTMLElement, unknown>\n    svg: Selection<SVGSVGElement, unknown, HTMLElement, unknown>\n    svgG: Selection<SVGGElement, unknown, HTMLElement, unknown>\n    xAxis?: Axis<number>\n    yAxis?: Axis<number>\n  }\n\n  private vars!: {\n    colorScale: ScaleOrdinal<string, string>\n    focused: boolean\n    radiusScale: ScalePower<number, number>\n    xScale: FishEyeScale\n    yScale: FishEyeScale\n  }\n\n  public constructor(chartConfig: FishEyeChartOpts<ChartData>) {\n    this.config = chartConfig\n\n    this.setupRootEl()\n    this.setVars()\n    this.setDom()\n  }\n\n  public render() {\n    this.setChartTitle()\n    this.setBackground()\n    this.setPointer()\n    this.setAxis()\n    this.setLabels()\n    this.setDots()\n    this.setTitles()\n    this.updateDimensions()\n    this.bindMousemove()\n    this.bindMouseLeave()\n    this.bindClick()\n    this.bindResize()\n  }\n\n  private setupRootEl() {\n    const rootEl = document.getElementById(this.config.rootElId) as HTMLElement\n\n    rootEl.classList.add(styles.fishEyeChart)\n\n    this.width =\n      rootEl.getBoundingClientRect().width - margin.left - margin.right\n  }\n\n  private setDom() {\n    const svg = select(`#${this.config.rootElId}`).append(\"svg\")\n    const svgG = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    this.dom = {\n      svg,\n      svgG,\n    }\n  }\n\n  private setChartTitle() {\n    this.dom.svgG\n      .append(\"text\")\n      .attr(\"class\", styles.chartTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .text(this.config.chartTitle)\n      .style(\"font-weight\", \"bold\")\n  }\n\n  private setVars() {\n    const colorScale = scaleOrdinal<string>()\n      .domain(this.config.colorDomain)\n      .range(schemePastel2)\n\n    const radiusScale = scaleSqrt().domain([0, 5e8]).range([5, 60])\n    const xScale = d3Fisheye\n      .scale(scaleLog)\n      .domain([300, 1e5])\n      .range([0, this.width]) as FishEyeScale\n    const yScale = d3Fisheye\n      .scale(scaleLinear)\n      .domain([20, 90])\n      .range([height, 0]) as FishEyeScale\n\n    this.vars = {\n      colorScale,\n      focused: false,\n      radiusScale,\n      xScale,\n      yScale,\n    }\n  }\n\n  private setAxis() {\n    const formatFn = format(\",d\")\n\n    this.dom.xAxis = axisBottom(this.vars.xScale as AxisScale<number>)\n      .tickFormat((tickNumber) => {\n        if (tickNumber < 1000) {\n          return formatFn(tickNumber)\n        }\n\n        const reducedNum = Math.round(tickNumber / 1000)\n\n        return `${formatFn(reducedNum)}k`\n      })\n      .tickSize(-height)\n    this.dom.yAxis = axisLeft(this.vars.yScale as AxisScale<number>).tickSize(\n      -this.width\n    )\n    this.dom.svgG\n      .append(\"g\")\n      .attr(\"class\", `x ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(this.dom.xAxis)\n    this.dom.svgG\n      .append(\"g\")\n      .attr(\"class\", `y ${styles.axis}`)\n      .call(this.dom.yAxis)\n  }\n\n  private setBackground() {\n    return this.dom.svgG.append(\"rect\").attr(\"class\", styles.background)\n  }\n\n  private setLabels() {\n    this.dom.svgG\n      .append(\"text\")\n      .attr(\"class\", \"x label\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(this.config.xAxisLabel)\n\n    this.dom.svgG\n      .append(\"text\")\n      .attr(\"class\", \"y label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", -height / 2)\n      .attr(\"y\", -40)\n      .attr(\"dy\", \".75em\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(this.config.yAxisLabel)\n  }\n\n  private position(animationDuration: number) {\n    this.dom\n      .dot!.transition()\n      .duration(animationDuration)\n      .attr(\"cx\", (chartItem) => {\n        const xValue = this.config.getXValue(chartItem)\n\n        return this.vars.xScale(xValue) as number\n      })\n      .attr(\"cy\", (chartItem) => {\n        const yValue = this.config.getYValue(chartItem)\n\n        return this.vars.yScale(yValue) as number\n      })\n      .attr(\"r\", (chartItem) => {\n        const radiusValue = this.config.getRadiusValue(chartItem)\n\n        return this.vars.radiusScale(radiusValue)\n      })\n    this.dom.svgG\n      .select<SVGGElement>(`.x.${styles.axis}`)\n      .transition()\n      .duration(animationDuration)\n      .call(this.dom.xAxis!)\n    this.dom.svgG\n      .select<SVGGElement>(`.y.${styles.axis}`)\n      .transition()\n      .duration(animationDuration)\n      .call(this.dom.yAxis!)\n  }\n\n  private setDots() {\n    this.dom.dot = this.dom.svgG\n      .append(\"g\")\n      .attr(\"class\", \"dots\")\n      .selectAll(\".dot\")\n      .data<ChartData>(this.config.chartItems)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .style(\"fill\", (chartItem) => {\n        const colorValue = this.config.getColorValue(chartItem)\n\n        return this.vars.colorScale(colorValue)\n      })\n      .style(\"stroke\", \"black\")\n      .style('\"stroke-width\"', \"1px\")\n      .sort(\n        (...[chartItemA, chartItemB]) =>\n          this.config.getRadiusValue(chartItemB) -\n          this.config.getRadiusValue(chartItemA)\n      )\n\n    this.position(0)\n  }\n\n  private setTitles() {\n    this.dom\n      .dot!.append(\"title\")\n      .text((chartItem) => this.config.getCircleTitle(chartItem))\n  }\n\n  private setZoom({\n    animationDuration,\n    distortion,\n    focus,\n  }: {\n    animationDuration: number\n    distortion: number\n    focus: [number, number]\n  }) {\n    this.vars.xScale.distortion(distortion).focus(focus[0])\n    this.vars.yScale.distortion(distortion).focus(focus[1])\n    this.position(animationDuration)\n  }\n\n  private zoom(interactionEvent: Event) {\n    const focus = pointerD3(interactionEvent)\n\n    this.setZoom({\n      animationDuration: 0,\n      distortion: 2.5,\n      focus,\n    })\n  }\n\n  private setPointer() {\n    this.dom.pointer = this.dom.svgG\n      .append(\"text\")\n      .text(\"+\")\n      .attr(\"class\", styles.pointer)\n  }\n\n  private bindMousemove() {\n    return this.dom.svgG.on(\"mousemove\", (interactionEvent) => {\n      if (!this.vars.focused) {\n        this.zoom(interactionEvent)\n      }\n    })\n  }\n\n  private bindMouseLeave() {\n    return this.dom.svgG.on(\"mouseleave\", () => {\n      if (!this.vars.focused) {\n        this.setZoom({\n          animationDuration: 1000,\n          distortion: 0,\n          focus: [0, 0],\n        })\n      }\n    })\n  }\n\n  private bindClick() {\n    this.dom.svgG.on(\"click\", (interactionEvent: Event) => {\n      this.vars.focused = !this.vars.focused\n\n      if (this.vars.focused) {\n        const pointer = pointerD3(this)\n\n        this.dom\n          .pointer!.attr(\"x\", pointer[0])\n          .attr(\"y\", pointer[1])\n          .style(\"opacity\", 1)\n\n        return\n      }\n\n      this.dom.pointer!.style(\"opacity\", 0)\n\n      this.zoom(interactionEvent)\n    })\n  }\n\n  private updateDimensions() {\n    this.setupRootEl()\n    // this.vars.xScale.range([0, this.width])\n    this.dom.svg\n      .attr(\"width\", this.width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    this.dom.svgG\n      .select(`.${styles.chartTitle}`)\n      .attr(\"transform\", `translate(${this.width / 2},-40)`)\n\n    this.dom.svgG\n      .select(`.${styles.background}`)\n      .attr(\"width\", this.width)\n      .attr(\"height\", height)\n\n    this.dom.svgG\n      .select(\".x.label\")\n      .attr(\"y\", height + 26)\n      .attr(\"x\", this.width / 2)\n\n    this.vars.xScale.range([0, this.width])\n    this.position(0)\n  }\n\n  private bindResize() {\n    window.addEventListener(\"resize\", () => {\n      this.updateDimensions()\n    })\n  }\n}\n\nexport { FishEyeChart, FishEyeChartOpts }\n","import { json } from \"d3\"\n\nimport { FishEyeChartOpts } from \"./fish-eye-chart\"\n\nconst CONTAINER_ID = \"chart\"\n\ntype IncomeMetric = {\n  income: number\n  lifeExpectancy: number\n  name: string\n  population: number\n  region: string\n}\n\nconst fetchData = async () =>\n  json(`${ROOT_PATH}data/d3js/fish-eye/data.json`) as Promise<IncomeMetric[]>\n\ntype Opts = FishEyeChartOpts<IncomeMetric>\n\nconst getXValue: Opts[\"getXValue\"] = (incomeMetric) => incomeMetric.income\nconst getYValue: Opts[\"getYValue\"] = (incomeMetric) =>\n  incomeMetric.lifeExpectancy\nconst getRadiusValue: Opts[\"getRadiusValue\"] = (incomeMetric) =>\n  incomeMetric.population\nconst getColorValue: Opts[\"getColorValue\"] = (incomeMetric) =>\n  incomeMetric.region\n\nconst humanizeNumber = (initialN: number): string => {\n  let numStr = initialN.toString()\n\n  while (true) {\n    const numStrFormatted = numStr.replace(/(\\d)(\\d{3})($|,|\\.)/g, \"$1,$2$3\")\n\n    if (numStrFormatted === numStr) {\n      break\n    }\n\n    numStr = numStrFormatted\n  }\n\n  return numStr\n}\n\nconst getCircleTitle: Opts[\"getCircleTitle\"] = (incomeMetric) =>\n  `${incomeMetric.name}:\\n- Income: ${humanizeNumber(\n    incomeMetric.income\n  )} $/P.C.\\n` +\n  `- Population: ${humanizeNumber(incomeMetric.population)}\\n` +\n  `- Life expectancy: ${incomeMetric.lifeExpectancy} years`\n\nconst regions = [\n  \"Sub-Saharan Africa\",\n  \"South Asia\",\n  \"Middle East & North Africa\",\n  \"America\",\n  \"Europe & Central Asia\",\n  \"East Asia & Pacific\",\n]\n\nconst title =\n  \"Income Per Capita vs \" +\n  \"Life Expectancy vs Population vs Region - 180 Countries\"\n\nconst xAxisLabel = \"income per capita, inflation-adjusted (dollars)\"\nconst yAxisLabel = \"life expectancy (years)\"\n\nconst getChartConfig = (incomeMetrics: IncomeMetric[]): Opts => ({\n  chartItems: incomeMetrics,\n  chartTitle: title,\n  colorDomain: regions,\n  getCircleTitle,\n  getColorValue,\n  getRadiusValue,\n  getXValue,\n  getYValue,\n  rootElId: CONTAINER_ID,\n  xAxisLabel,\n  yAxisLabel,\n})\n\nexport { CONTAINER_ID, getChartConfig, fetchData }\n","import { FishEyeChart } from \"./fish-eye-chart\"\nimport { CONTAINER_ID, fetchData, getChartConfig } from \"./fish-eye-config\"\n\nconst main = async () => {\n  const incomeMetrics = await fetchData()\n  const chartConfig = getChartConfig(incomeMetrics)\n\n  const chart = new FishEyeChart(chartConfig)\n\n  chart.render()\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/fish-eye/fish-eye\"\n\nconst FishEye = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default FishEye\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["d3Rebind","method","source","target","methodResult","fishEyeScale","initialDistortion","distortion","initialFocus","focus","scale","fisheye","scaleArgs","x","left","extent","range","min","max","m","Math","abs","createFisheyeFn","cb","newValue","newDistortion","newFocus","copy","nice","ticks","tickFormat","domain","scaleType","axis","background","chartTitle","margin","height","FishEyeChart","chartConfig","width","this","config","setupRootEl","setVars","setDom","render","setChartTitle","setBackground","setPointer","setAxis","setLabels","setDots","setTitles","updateDimensions","bindMousemove","bindMouseLeave","bindClick","bindResize","rootEl","document","getElementById","rootElId","classList","add","getBoundingClientRect","svg","select","append","svgG","attr","dom","styles","text","style","colorScale","scaleOrdinal","colorDomain","schemePastel2","radiusScale","scaleSqrt","xScale","d3Fisheye","scaleLog","yScale","scaleLinear","vars","focused","formatFn","format","xAxis","axisBottom","tickNumber","reducedNum","round","tickSize","yAxis","axisLeft","call","xAxisLabel","yAxisLabel","position","animationDuration","dot","transition","duration","chartItem","xValue","getXValue","yValue","getYValue","radiusValue","getRadiusValue","selectAll","data","chartItems","enter","colorValue","getColorValue","sort","chartItemA","chartItemB","getCircleTitle","setZoom","zoom","interactionEvent","pointerD3","pointer","on","window","addEventListener","CONTAINER_ID","fetchData","json","ROOT_PATH","incomeMetric","income","lifeExpectancy","population","region","humanizeNumber","initialN","numStr","toString","numStrFormatted","replace","name","regions","getChartConfig","incomeMetrics","main","pageContext","id","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}