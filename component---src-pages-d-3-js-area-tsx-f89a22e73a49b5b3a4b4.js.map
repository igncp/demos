{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./node_modules/robust-predicates/esm/util.js","webpack://demos/./node_modules/robust-predicates/esm/orient2d.js","webpack://demos/./node_modules/robust-predicates/esm/orient3d.js","webpack://demos/./node_modules/robust-predicates/esm/incircle.js","webpack://demos/./node_modules/robust-predicates/esm/insphere.js","webpack://demos/./node_modules/delaunator/index.js","webpack://demos/./node_modules/d3-delaunay/src/path.js","webpack://demos/./node_modules/d3-delaunay/src/polygon.js","webpack://demos/./node_modules/d3-delaunay/src/voronoi.js","webpack://demos/./node_modules/d3-delaunay/src/delaunay.js","webpack://demos/./src/demos/area/area.ts","webpack://demos/./src/pages/d3js/area.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","elen","e","flen","f","h","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","n","Float64Array","B","C1","C2","D","u","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","Math","abs","acxtail","acytail","bcxtail","bcytail","c","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","i","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","coords","length","Error","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","x","y","i0","i1","i2","minDist","d","dist","i0x","i0y","_i2","_d","i1x","i1y","minRadius","_i3","r","circumradius","i2x","i2y","_i4","quicksort","hull","j","_i5","d0","id","subarray","triangles","halfedges","_i6","_x","_y","center","dx","dy","ex","ey","bl","cl","circumcenter","_cx","_cy","_i7","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","k","_i8","_x2","_y2","start","q","t","_legalize","_n","_i9","_e","floor","p","a","px","py","fx","fy","bp","cp","ar","b","a0","b0","al","p0","pr","pl","p1","ap","hbl","_link","br","points","getX","defaultGetX","getY","defaultGetY","ids","dists","left","right","temp","tempDist","_i10","_j2","swap","_temp","_tempDist","arr","tmp","Path","_x0","_y0","_x1","_y1","_","concat","x0","y0","w","Polygon","push","slice","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","Object","prototype","toString","call","constructor","name","from","test","_unsupportedIterableToArray","F","s","TypeError","normalCompletion","didErr","step","next","_e2","return","len","arr2","Voronoi","delaunay","_ref","_ref2","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","_this$delaunay","circumcenters","t2","t3","x2","y2","x3","y3","ab","sign","x1","y1","context","buffer","_this$delaunay2","inedges","ti","tj","xi","yi","xj","yj","_renderSegment","h0","h1","v","_project","rect","_clip","moveTo","lineTo","closePath","cellPolygons","cell","_context","prev","cellPolygon","index","stop","polygon","renderCell","S","c0","_regioncode","c1","_clipSegment","_step","neighbors","ci","_iterator","cj","ai","li","aj","lj","_context2","abrupt","finish","_this$delaunay3","e0","_cell","V","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_S","_S2","_S3","_S4","_edgecode","_edge","contains","vx0","vy0","vxn","vyn","unshift","splice","vx","vy","_marked","flatIterable","_e3","tau","PI","pointX","pointY","jitter","sin","cos","Delaunay","_delaunator","_hullIndex","collinear","sort","bounds","hypot","hullIndex","_p","_n2","l","indexOf","dc","dt","renderHull","arc","_h","trianglePolygons","trianglePolygon","renderTriangle","that","flatArray","array","_step2","_context3","texts","point","year","percent","margin","height","renderChart","data","rootElId","width","document","getElementById","getBoundingClientRect","svg","select","append","attr","String","text","style","filterBlackOpacity","xMax","xMin","min","yMax","yMin","xScale","scaleLinear","domain","range","yScale","xAxis","axisBottom","tickFormat","format","tickSize","yAxis","axisLeft","selectAll","area","areaD3","line","lineD3","datum","voronoi","enter","_point","pointIndex","voronoiGroup","on","_mouseEvent","toggleVoronoi","currentClass","newClass","includes","replace","trim","deviation","slope","filter","feMerge","csv","ROOT_PATH","addEventListener","preventDefault","demoInfo","pageContext","main","className","type"],"mappings":"mGAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O,oMC9BD,G,QAAW,WAGf,SAAS,EAAIC,EAAMC,EAAGC,EAAMC,EAAGC,GACpC,IAAIC,EAAGC,EAAMC,EAAIC,EACbC,EAAOR,EAAE,GACTS,EAAOP,EAAE,GACTQ,EAAS,EACTC,EAAS,EAETF,EAAOD,GAASC,GAAQD,GAC1BJ,EAAII,EACJA,EAAOR,IAAIU,KAEXN,EAAIK,EACJA,EAAOP,IAAIS,IAGb,IAAIC,EAAS,EAEb,GAAIF,EAASX,GAAQY,EAASV,EAiB5B,IAhBIQ,EAAOD,GAASC,GAAQD,GAE1BF,EAAKF,IADLC,EAAOG,EAAOJ,GACGI,GACjBA,EAAOR,IAAIU,KAGXJ,EAAKF,IADLC,EAAOI,EAAOL,GACGK,GACjBA,EAAOP,IAAIS,IAGbP,EAAIC,EAEO,IAAPC,IACFH,EAAES,KAAYN,GAGTI,EAASX,GAAQY,EAASV,GAC3BQ,EAAOD,GAASC,GAAQD,GAG1BF,EAAKF,IAFLC,EAAOD,EAAII,IACXD,EAAQF,EAAOD,KACYI,EAAOD,GAClCC,EAAOR,IAAIU,KAIXJ,EAAKF,IAFLC,EAAOD,EAAIK,IACXF,EAAQF,EAAOD,KACYK,EAAOF,GAClCE,EAAOP,IAAIS,IAGbP,EAAIC,EAEO,IAAPC,IACFH,EAAES,KAAYN,GAKpB,KAAOI,EAASX,GAGdO,EAAKF,IAFLC,EAAOD,EAAII,IACXD,EAAQF,EAAOD,KACYI,EAAOD,GAClCC,EAAOR,IAAIU,GACXN,EAAIC,EAEO,IAAPC,IACFH,EAAES,KAAYN,GAIlB,KAAOK,EAASV,GAGdK,EAAKF,IAFLC,EAAOD,EAAIK,IACXF,EAAQF,EAAOD,KACYK,EAAOF,GAClCE,EAAOP,IAAIS,GACXP,EAAIC,EAEO,IAAPC,IACFH,EAAES,KAAYN,GAQlB,OAJU,IAANF,GAAsB,IAAXQ,IACbT,EAAES,KAAYR,GAGTQ,EAqEF,SAASC,EAAIC,GAClB,OAAO,IAAIC,aAAaD,GC5J1B,IAGIE,EAAIH,EAAI,GACRI,EAAKJ,EAAI,GACTK,EAAKL,EAAI,IACTM,EAAIN,EAAI,IACRO,EAAIP,EAAI,GA4JL,SAASQ,EAASC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3C,IAAIC,GAAWL,EAAKI,IAAOH,EAAKE,GAC5BG,GAAYP,EAAKI,IAAOD,EAAKE,GAC7BG,EAAMF,EAAUC,EACpB,GAAgB,IAAZD,GAA8B,IAAbC,GAAkBD,EAAU,GAAMC,EAAW,EAAG,OAAOC,EAC5E,IAAIC,EAASC,KAAKC,IAAIL,EAAUC,GAChC,OAAIG,KAAKC,IAAIH,IAzKI,sBAyKmBC,EAAeD,GAhKrD,SAAuBR,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAII,GAC7C,IAAIG,EAASC,EAASC,EAASC,EAE3B9B,EAAO+B,EAAGC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAE1DC,EAAM7B,EAAKI,EACX0B,EAAM5B,EAAKE,EACX2B,EAAM9B,EAAKI,EACX2B,EAAM7B,EAAKE,EAkBfpB,GAVAwC,GAJAP,EAAMW,GADNZ,GADAD,EAAI,EAAWa,IACJb,EAAIa,MAIfT,EAAMY,GADNb,GADAH,EAAI,EAAWgB,IACJhB,EAAIgB,OALfR,EAAKK,EAAMG,GAOYf,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KASrDC,EAAKI,GADLE,GAJAT,EAAMa,GADNd,GADAD,EAAI,EAAWe,IACJf,EAAIe,MAIfX,EAAMU,GADNX,GADAH,EAAI,EAAWc,IACJd,EAAIc,OALfJ,EAAKK,EAAMD,GAOYb,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KAGrD1B,EAAE,GAAK+B,GAAMJ,EAAKpC,IAAUA,EAAQ0C,GAKpC1C,GAFAsC,EAAKC,IAFLF,EAAKE,EAAKH,IACVpC,EAAQqC,EAAKE,KACaH,EAAKpC,KAC/BoC,EAAKE,EAAKG,GAEVhC,EAAE,GAAK6B,GAAMF,EAAKpC,IAAUA,EAAQyC,GAEpCzC,GADA2C,EAAKN,EAAKD,GACGC,EACb5B,EAAE,GAAK4B,GAAMM,EAAK3C,IAAUoC,EAAKpC,GACjCS,EAAE,GAAKkC,EACP,IAAIpB,EDmGC,SAAkB/B,EAAMC,GAG7B,IAFA,IAAII,EAAIJ,EAAE,GAEDuD,EAAI,EAAGA,EAAIxD,EAAMwD,IACxBnD,GAAKJ,EAAEuD,GAGT,OAAOnD,EC1GG,CAAS,EAAGY,GAClBwC,EA/Ca,sBA+CazB,EAE9B,GAAID,GAAO0B,IAAa1B,GAAO0B,EAC7B,OAAO1B,EAYT,GARAI,EAAUZ,GAAM6B,GADhB5C,EAAQe,EAAK6B,KACmB5C,EAAQmB,GAExCU,EAAUZ,GAAM4B,GADhB7C,EAAQiB,EAAK4B,KACmB7C,EAAQmB,GAExCS,EAAUZ,GAAM8B,GADhB9C,EAAQgB,EAAK8B,KACmB9C,EAAQoB,GAExCU,EAAUZ,GAAM6B,GADhB/C,EAAQkB,EAAK6B,KACmB/C,EAAQoB,GAExB,IAAZO,GAA6B,IAAZC,GAA6B,IAAZC,GAA6B,IAAZC,EACrD,OAAOP,EAKT,GAFA0B,EAjEiB,sBAiESzB,EDlEA,sBCkE0BC,KAAKC,IAAIH,IAC7DA,GAAOqB,EAAMd,EAAUiB,EAAMpB,GAAWmB,EAAMjB,EAAUgB,EAAMjB,KACnDqB,IAAa1B,GAAO0B,EAAU,OAAO1B,EAkBhDvB,GAVAwC,GAJAP,EAAMN,GADNK,GADAD,EAAI,EAAWJ,IACJI,EAAIJ,MAIfQ,EAAMY,GADNb,GADAH,EAAI,EAAWgB,IACJhB,EAAIgB,OALfR,EAAKZ,EAAUoB,GAOQf,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KASrDC,EAAKI,GADLE,GAJAT,EAAML,GADNI,GADAD,EAAI,EAAWH,IACJG,EAAIH,MAIfO,EAAMU,GADNX,GADAH,EAAI,EAAWc,IACJd,EAAIc,OALfJ,EAAKb,EAAUiB,GAOQb,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KAGrDtB,EAAE,GAAK2B,GAAMJ,EAAKpC,IAAUA,EAAQ0C,GAKpC1C,GAFAsC,EAAKC,IAFLF,EAAKE,EAAKH,IACVpC,EAAQqC,EAAKE,KACaH,EAAKpC,KAC/BoC,EAAKE,EAAKG,GAEV5B,EAAE,GAAKyB,GAAMF,EAAKpC,IAAUA,EAAQyC,GAEpCzC,GADA2C,EAAKN,EAAKD,GACGC,EACbxB,EAAE,GAAKwB,GAAMM,EAAK3C,IAAUoC,EAAKpC,GACjCa,EAAE,GAAK8B,EACP,IAAIO,EAAQ,EAAI,EAAGzC,EAAG,EAAGI,EAAGH,GAkB5BV,GAVAwC,GAJAP,EAAMW,GADNZ,GADAD,EAAI,EAAWa,IACJb,EAAIa,MAIfT,EAAML,GADNI,GADAH,EAAI,EAAWD,IACJC,EAAID,OALfS,EAAKK,EAAMd,GAOYE,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KASrDC,EAAKI,GADLE,GAJAT,EAAMa,GADNd,GADAD,EAAI,EAAWe,IACJf,EAAIe,MAIfX,EAAMN,GADNK,GADAH,EAAI,EAAWF,IACJE,EAAIF,OALfY,EAAKK,EAAMjB,GAOYG,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KAGrDtB,EAAE,GAAK2B,GAAMJ,EAAKpC,IAAUA,EAAQ0C,GAKpC1C,GAFAsC,EAAKC,IAFLF,EAAKE,EAAKH,IACVpC,EAAQqC,EAAKE,KACaH,EAAKpC,KAC/BoC,EAAKE,EAAKG,GAEV5B,EAAE,GAAKyB,GAAMF,EAAKpC,IAAUA,EAAQyC,GAEpCzC,GADA2C,EAAKN,EAAKD,GACGC,EACbxB,EAAE,GAAKwB,GAAMM,EAAK3C,IAAUoC,EAAKpC,GACjCa,EAAE,GAAK8B,EACP,IAAIQ,EAAQ,EAAID,EAAOxC,EAAI,EAAGG,EAAGF,GAkBjCX,GAVAwC,GAJAP,EAAMN,GADNK,GADAD,EAAI,EAAWJ,IACJI,EAAIJ,MAIfQ,EAAML,GADNI,GADAH,EAAI,EAAWD,IACJC,EAAID,OALfS,EAAKZ,EAAUG,GAOQE,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KASrDC,EAAKI,GADLE,GAJAT,EAAML,GADNI,GADAD,EAAI,EAAWH,IACJG,EAAIH,MAIfO,EAAMN,GADNK,GADAH,EAAI,EAAWF,IACJE,EAAIF,OALfY,EAAKb,EAAUC,GAOQG,EAAME,EAAMD,EAAMC,EAAMF,EAAMG,KAGrDtB,EAAE,GAAK2B,GAAMJ,EAAKpC,IAAUA,EAAQ0C,GAKpC1C,GAFAsC,EAAKC,IAFLF,EAAKE,EAAKH,IACVpC,EAAQqC,EAAKE,KACaH,EAAKpC,KAC/BoC,EAAKE,EAAKG,GAEV5B,EAAE,GAAKyB,GAAMF,EAAKpC,IAAUA,EAAQyC,GAEpCzC,GADA2C,EAAKN,EAAKD,GACGC,EACbxB,EAAE,GAAKwB,GAAMM,EAAK3C,IAAUoC,EAAKpC,GACjCa,EAAE,GAAK8B,EACP,IAAIS,EAAO,EAAID,EAAOxC,EAAI,EAAGE,EAAGD,GAChC,OAAOA,EAAEwC,EAAO,GAURC,CAActC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAII,GCvKvClB,EAAI,GACJA,EAAI,GACJA,EAAI,GACFA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACLA,EAAI,GACJA,EAAI,GACJA,EAAI,GACNA,EAAI,GAEHA,EAAI,GAEHA,EAAI,GAEJA,EAAI,GAEJA,EAAI,IAEJA,EAAI,KACHA,EAAI,KCvBNA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACLA,EAAI,GACJA,EAAI,GACAA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACNA,EAAI,GACJA,EAAI,GACJA,EAAI,GACHA,EAAI,GACJA,EAAI,GACJA,EAAI,GAENA,EAAI,GAEHA,EAAI,IAEHA,EAAI,IAEJA,EAAI,IAELA,EAAI,IAEHA,EAAI,IAELA,EAAI,IAEJA,EAAI,IAEJA,EAAI,MACHA,EAAI,MCtCNA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACHA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACHA,EAAI,MACJA,EAAI,MACJA,EAAI,MACJA,EAAI,MACJA,EAAI,MACHA,EAAI,MACJA,EAAI,MACHA,EAAI,MACLA,EAAI,MAEPA,EAAI,GAEHA,EAAI,GAEJA,EAAI,GAEJA,EAAI,IAEJA,EAAI,IAEJA,EAAI,IAEHA,EAAI,IAELA,EAAI,IAEHA,EAAI,KAEHA,EAAI,KAEJA,EAAI,KAEJA,EAAI,KAELA,EAAI,KA8TJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACLA,EAAI,MCzXd,IAAIgD,EAAU7B,KAAK8B,IAAI,GAAI,IACvBC,EAAa,IAAIC,YAAY,KAG7BC,EAA0B,WAC5B,SAASA,EAAWC,IAClB,OAAgBzE,KAAMwE,GAEtB,IAAInD,EAAIoD,EAAOC,QAAU,EACzB,GAAIrD,EAAI,GAA0B,iBAAdoD,EAAO,GAAiB,MAAM,IAAIE,MAAM,uCAC5D3E,KAAKyE,OAASA,EAEd,IAAIG,EAAerC,KAAKsC,IAAI,EAAIxD,EAAI,EAAG,GACvCrB,KAAK8E,WAAa,IAAIP,YAA2B,EAAfK,GAClC5E,KAAK+E,WAAa,IAAIC,WAA0B,EAAfJ,GAEjC5E,KAAKiF,UAAY1C,KAAK2C,KAAK3C,KAAK4C,KAAK9D,IACrCrB,KAAKoF,UAAY,IAAIb,YAAYlD,GAEjCrB,KAAKqF,UAAY,IAAId,YAAYlD,GAEjCrB,KAAKsF,SAAW,IAAIf,YAAYlD,GAEhCrB,KAAKuF,UAAY,IAAIP,WAAWhF,KAAKiF,WAAWO,MAAM,GAGtDxF,KAAKyF,KAAO,IAAIlB,YAAYlD,GAC5BrB,KAAK0F,OAAS,IAAIpE,aAAaD,GAC/BrB,KAAK2F,SAsWP,OAnWA,OAAanB,EAAY,CAAC,CACxBnF,IAAK,SACLG,MAAO,WAaL,IAZA,IAAIiF,EAASzE,KAAKyE,OACdmB,EAAW5F,KAAKoF,UAChBS,EAAW7F,KAAKqF,UAChBS,EAAU9F,KAAKsF,SACfS,EAAW/F,KAAKuF,UAChBlE,EAAIoD,EAAOC,QAAU,EAErBsB,EAAOC,IACPC,EAAOD,IACPE,GAAQF,IACRG,GAAQH,IAEHnC,EAAI,EAAGA,EAAIzC,EAAGyC,IAAK,CAC1B,IAAIuC,EAAI5B,EAAO,EAAIX,GACfwC,EAAI7B,EAAO,EAAIX,EAAI,GACnBuC,EAAIL,IAAMA,EAAOK,GACjBC,EAAIJ,IAAMA,EAAOI,GACjBD,EAAIF,IAAMA,EAAOE,GACjBC,EAAIF,IAAMA,EAAOE,GACrBtG,KAAKyF,KAAK3B,GAAKA,EAQjB,IALA,IAGIyC,EAAIC,EAAIC,EAHRxE,GAAM+D,EAAOG,GAAQ,EACrBjE,GAAMgE,EAAOE,GAAQ,EACrBM,EAAUT,IAGL/C,EAAK,EAAGA,EAAK7B,EAAG6B,IAAM,CAC7B,IAAIyD,EAAIC,EAAK3E,EAAIC,EAAIuC,EAAO,EAAIvB,GAAKuB,EAAO,EAAIvB,EAAK,IAEjDyD,EAAID,IACNH,EAAKrD,EACLwD,EAAUC,GAId,IAAIE,EAAMpC,EAAO,EAAI8B,GACjBO,EAAMrC,EAAO,EAAI8B,EAAK,GAC1BG,EAAUT,IAEV,IAAK,IAAIc,EAAM,EAAGA,EAAM1F,EAAG0F,IACzB,GAAIA,IAAQR,EAAZ,CAEA,IAAIS,EAAKJ,EAAKC,EAAKC,EAAKrC,EAAO,EAAIsC,GAAMtC,EAAO,EAAIsC,EAAM,IAEtDC,EAAKN,GAAWM,EAAK,IACvBR,EAAKO,EACLL,EAAUM,GAQd,IAJA,IAAIC,EAAMxC,EAAO,EAAI+B,GACjBU,EAAMzC,EAAO,EAAI+B,EAAK,GACtBW,EAAYlB,IAEPmB,EAAM,EAAGA,EAAM/F,EAAG+F,IACzB,GAAIA,IAAQb,GAAMa,IAAQZ,EAA1B,CACA,IAAIa,EAAIC,EAAaT,EAAKC,EAAKG,EAAKC,EAAKzC,EAAO,EAAI2C,GAAM3C,EAAO,EAAI2C,EAAM,IAEvEC,EAAIF,IACNV,EAAKW,EACLD,EAAYE,GAIhB,IAAIE,EAAM9C,EAAO,EAAIgC,GACjBe,EAAM/C,EAAO,EAAIgC,EAAK,GAE1B,GAAIU,IAAclB,IAAU,CAG1B,IAAK,IAAIwB,EAAM,EAAGA,EAAMpG,EAAGoG,IACzBzH,KAAK0F,OAAO+B,GAAOhD,EAAO,EAAIgD,GAAOhD,EAAO,IAAMA,EAAO,EAAIgD,EAAM,GAAKhD,EAAO,GAGjFiD,EAAU1H,KAAKyF,KAAMzF,KAAK0F,OAAQ,EAAGrE,EAAI,GAIzC,IAHA,IAAIsG,EAAO,IAAIpD,YAAYlD,GACvBuG,EAAI,EAECC,EAAM,EAAGC,GAAM7B,IAAU4B,EAAMxG,EAAGwG,IAAO,CAChD,IAAIE,EAAK/H,KAAKyF,KAAKoC,GAEf7H,KAAK0F,OAAOqC,GAAMD,IACpBH,EAAKC,KAAOG,EACZD,EAAK9H,KAAK0F,OAAOqC,IAOrB,OAHA/H,KAAK2H,KAAOA,EAAKK,SAAS,EAAGJ,GAC7B5H,KAAKiI,UAAY,IAAI1D,YAAY,QACjCvE,KAAKkI,UAAY,IAAI3D,YAAY,IAKnC,GAAI3C,EAASiF,EAAKC,EAAKG,EAAKC,EAAKK,EAAKC,GAAO,EAAG,CAC9C,IAAIW,EAAM3B,EACN4B,EAAKnB,EACLoB,EAAKnB,EACTV,EAAKC,EACLQ,EAAMM,EACNL,EAAMM,EACNf,EAAK0B,EACLZ,EAAMa,EACNZ,EAAMa,EAGR,IAAIC,EAgSV,SAAsBzG,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACxC,IAAIqG,EAAKxG,EAAKF,EACV2G,EAAKxG,EAAKF,EACV2G,EAAKxG,EAAKJ,EACV6G,EAAKxG,EAAKJ,EACV6G,EAAKJ,EAAKA,EAAKC,EAAKA,EACpBI,EAAKH,EAAKA,EAAKC,EAAKA,EACpB/B,EAAI,IAAO4B,EAAKG,EAAKF,EAAKC,GAG9B,MAAO,CACLpC,EAHMxE,GAAM6G,EAAKC,EAAKH,EAAKI,GAAMjC,EAIjCL,EAHMxE,GAAMyG,EAAKK,EAAKH,EAAKE,GAAMhC,GAzSlBkC,CAAahC,EAAKC,EAAKG,EAAKC,EAAKK,EAAKC,GACnDxH,KAAK8I,IAAMR,EAAOjC,EAClBrG,KAAK+I,IAAMT,EAAOhC,EAElB,IAAK,IAAI0C,EAAM,EAAGA,EAAM3H,EAAG2H,IACzBhJ,KAAK0F,OAAOsD,GAAOpC,EAAKnC,EAAO,EAAIuE,GAAMvE,EAAO,EAAIuE,EAAM,GAAIV,EAAOjC,EAAGiC,EAAOhC,GAIjFoB,EAAU1H,KAAKyF,KAAMzF,KAAK0F,OAAQ,EAAGrE,EAAI,GAEzCrB,KAAKiJ,WAAa1C,EAClB,IAAI2C,EAAW,EACfrD,EAASU,GAAMX,EAASa,GAAMD,EAC9BX,EAASW,GAAMZ,EAASW,GAAME,EAC9BZ,EAASY,GAAMb,EAASY,GAAMD,EAC9BT,EAAQS,GAAM,EACdT,EAAQU,GAAM,EACdV,EAAQW,GAAM,EACdV,EAASP,MAAM,GACfO,EAAS/F,KAAKmJ,SAAStC,EAAKC,IAAQP,EACpCR,EAAS/F,KAAKmJ,SAASlC,EAAKC,IAAQV,EACpCT,EAAS/F,KAAKmJ,SAAS5B,EAAKC,IAAQf,EACpCzG,KAAKoJ,aAAe,EAEpBpJ,KAAKqJ,aAAa9C,EAAIC,EAAIC,GAAK,GAAI,GAAI,GAEvC,IAAK,IAAW6C,EAAIC,EAAXC,EAAI,EAAWA,EAAIxJ,KAAKyF,KAAKf,OAAQ8E,IAAK,CACjD,IAAIC,EAAMzJ,KAAKyF,KAAK+D,GAChBE,EAAMjF,EAAO,EAAIgF,GACjBE,GAAMlF,EAAO,EAAIgF,EAAM,GAE3B,KAAID,EAAI,GAAKjH,KAAKC,IAAIkH,EAAMJ,IAAOlF,GAAW7B,KAAKC,IAAImH,GAAMJ,IAAOnF,KACpEkF,EAAKI,EACLH,EAAKI,GAEDF,IAAQlD,GAAMkD,IAAQjD,GAAMiD,IAAQhD,GAAxC,CAIA,IAFA,IAAImD,GAAQ,EAEHzG,GAAK,EAAG9D,GAAMW,KAAKmJ,SAASO,EAAKC,IAAMxG,GAAKnD,KAAKiF,aAEzC,KADf2E,GAAQ7D,GAAU1G,GAAM8D,IAAMnD,KAAKiF,aACf2E,KAAU/D,EAAS+D,KAF4BzG,MASrE,IAHA,IAAI5C,GADJqJ,GAAQhE,EAASgE,IAEbC,QAAI,EAEDA,GAAIhE,EAAStF,IAAIqB,EAAS8H,EAAKC,GAAKlF,EAAO,EAAIlE,IAAIkE,EAAO,EAAIlE,GAAI,GAAIkE,EAAO,EAAIoF,IAAIpF,EAAO,EAAIoF,GAAI,KAAO,GAGhH,IAFAtJ,GAAIsJ,MAEMD,GAAO,CACfrJ,IAAK,EACL,MAIJ,IAAW,IAAPA,GAAJ,CAGA,IAAIuJ,GAAI9J,KAAKqJ,aAAa9I,GAAGkJ,EAAK5D,EAAStF,KAAK,GAAI,EAAGuF,EAAQvF,KAG/DuF,EAAQ2D,GAAOzJ,KAAK+J,UAAUD,GAAI,GAClChE,EAAQvF,IAAKuJ,GAEbZ,IAIA,IAFA,IAAIc,GAAKnE,EAAStF,IAEXsJ,GAAIhE,EAASmE,IAAKpI,EAAS8H,EAAKC,GAAKlF,EAAO,EAAIuF,IAAKvF,EAAO,EAAIuF,GAAK,GAAIvF,EAAO,EAAIoF,IAAIpF,EAAO,EAAIoF,GAAI,IAAM,GAClHC,GAAI9J,KAAKqJ,aAAaW,GAAIP,EAAKI,GAAG/D,EAAQ2D,IAAO,EAAG3D,EAAQkE,KAC5DlE,EAAQ2D,GAAOzJ,KAAK+J,UAAUD,GAAI,GAClCjE,EAASmE,IAAMA,GAEfd,IACAc,GAAKH,GAIP,GAAItJ,KAAMqJ,GACR,KAAwBhI,EAAS8H,EAAKC,GAAKlF,EAAO,GAA3CoF,GAAIjE,EAASrF,MAAsCkE,EAAO,EAAIoF,GAAI,GAAIpF,EAAO,EAAIlE,IAAIkE,EAAO,EAAIlE,GAAI,IAAM,GAC/GuJ,GAAI9J,KAAKqJ,aAAaQ,GAAGJ,EAAKlJ,IAAI,EAAGuF,EAAQvF,IAAIuF,EAAQ+D,KAEzD7J,KAAK+J,UAAUD,GAAI,GAEnBhE,EAAQ+D,IAAKC,GACbjE,EAAStF,IAAKA,GAEd2I,IACA3I,GAAIsJ,GAKR7J,KAAKiJ,WAAarD,EAAS6D,GAAOlJ,GAClCsF,EAAStF,IAAKqF,EAASoE,IAAMP,EAC7B5D,EAAS4D,GAAOO,GAEhBjE,EAAS/F,KAAKmJ,SAASO,EAAKC,KAAQF,EACpC1D,EAAS/F,KAAKmJ,SAAS1E,EAAO,EAAIlE,IAAIkE,EAAO,EAAIlE,GAAI,KAAOA,KAG9DP,KAAK2H,KAAO,IAAIpD,YAAY2E,GAE5B,IAAK,IAAIe,GAAM,EAAGC,GAAKlK,KAAKiJ,WAAYgB,GAAMf,EAAUe,KACtDjK,KAAK2H,KAAKsC,IAAOC,GACjBA,GAAKrE,EAASqE,IAIhBlK,KAAKiI,UAAYjI,KAAK8E,WAAWkD,SAAS,EAAGhI,KAAKoJ,cAClDpJ,KAAKkI,UAAYlI,KAAK+E,WAAWiD,SAAS,EAAGhI,KAAKoJ,gBAEnD,CACD/J,IAAK,WACLG,MAAO,SAAkB6G,EAAGC,GAC1B,OAAO/D,KAAK4H,OAqIG5B,EArIelC,EAAIrG,KAAK8I,IAqIpBN,EArIyBlC,EAAItG,KAAK+I,IAsIrDqB,EAAI7B,GAAMhG,KAAKC,IAAI+F,GAAMhG,KAAKC,IAAIgG,KAC9BA,EAAK,EAAI,EAAI4B,EAAI,EAAIA,GAAK,EAvI8BpK,KAAKiF,YAAajF,KAAKiF,UAqIzF,IAAqBsD,EAAIC,EACnB4B,IApID,CACD/K,IAAK,YACLG,MAAO,SAAmB6K,GAOxB,IANA,IA2IYxI,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIoI,EAAIC,EACxChC,EACAC,EACAC,EACAC,EACA8B,EACAC,EAEAC,EACAC,EApJI1C,EAAYjI,KAAK8E,WACjBoD,EAAYlI,KAAK+E,WACjBN,EAASzE,KAAKyE,OACdX,EAAI,EACJ8G,EAAK,IAEI,CACX,IAAIC,EAAI3C,EAAUmC,GAiBdS,EAAKT,EAAIA,EAAI,EAGjB,GAFAO,EAAKE,GAAMT,EAAI,GAAK,GAET,IAAPQ,EAAJ,CAOA,IAAIE,EAAKF,EAAIA,EAAI,EACbG,EAAKF,GAAMT,EAAI,GAAK,EACpB1B,EAAKoC,GAAMF,EAAI,GAAK,EACpBI,EAAKhD,EAAU2C,GACfM,EAAKjD,EAAUoC,GACfc,EAAKlD,EAAU+C,GACfI,EAAKnD,EAAUU,GAGnB,GAgGU9G,EAlGa4C,EAAO,EAAIwG,GAkGpBnJ,EAlGyB2C,EAAO,EAAIwG,EAAK,GAkGrClJ,EAlGyC0C,EAAO,EAAIyG,GAkGhDlJ,EAlGqDyC,EAAO,EAAIyG,EAAK,GAkGjEjJ,EAlGqEwC,EAAO,EAAI0G,GAkG5EjJ,EAlGiFuC,EAAO,EAAI0G,EAAK,GAkG7Fb,EAlGiG7F,EAAO,EAAI2G,GAkGxGb,EAlG6G9F,EAAO,EAAI2G,EAAK,GAmGrK7C,SACAC,SACAC,SACAC,SACA8B,SACAC,cACAY,EACAX,SACAC,UARApC,EAAK1G,EAAKyI,KAGV5B,EAAK1G,EAAKuI,IAKVI,GAJAH,EAAKvI,EAAKqI,GAIAE,GAHVC,EAAKvI,EAAKqI,GAGUE,IADpBC,GALAjC,EAAK1G,EAAKuI,GAKA7B,EAAKC,EAAKA,GAEI+B,IARxBjC,EAAK1G,EAAKyI,IAQ0B9B,EAAKkC,EAAKD,EAAKF,IAH9CjC,EAAKA,EAAKC,EAAKA,IAG2CC,EAAKgC,EAAK/B,EAAK8B,GAAM,EA1GrE,CACXvC,EAAUoC,GAAKe,EACfnD,EAAU4C,GAAKI,EACf,IAAIK,EAAMpD,EAAUS,GAEpB,IAAa,IAAT2C,EAAY,CACd,IAAI/K,EAAIP,KAAKiJ,WAEb,EAAG,CACD,GAAIjJ,KAAKsF,SAAS/E,KAAOoI,EAAI,CAC3B3I,KAAKsF,SAAS/E,GAAK8J,EACnB,MAGF9J,EAAIP,KAAKoF,UAAU7E,SACZA,IAAMP,KAAKiJ,YAGtBjJ,KAAKuL,MAAMlB,EAAGiB,GAEdtL,KAAKuL,MAAMV,EAAG3C,EAAU0C,IAExB5K,KAAKuL,MAAMX,EAAIjC,GAEf,IAAI6C,EAAKT,GAAMF,EAAI,GAAK,EAEpB/G,EAAIQ,EAAWI,SACjBJ,EAAWR,KAAO0H,OAEf,CACL,GAAU,IAAN1H,EAAS,MACbuG,EAAI/F,IAAaR,QA/CnB,CAEE,GAAU,IAANA,EAAS,MACbuG,EAAI/F,IAAaR,IAgDrB,OAAO8G,IAER,CACDvL,IAAK,QACLG,MAAO,SAAe6K,EAAGQ,GACvB7K,KAAK+E,WAAWsF,GAAKQ,GACV,IAAPA,IAAU7K,KAAK+E,WAAW8F,GAAKR,KAGpC,CACDhL,IAAK,eACLG,MAAO,SAAsB+G,EAAIC,EAAIC,EAAI4D,EAAGQ,EAAGhI,GAC7C,IAAIiH,EAAI9J,KAAKoJ,aAYb,OAXApJ,KAAK8E,WAAWgF,GAAKvD,EACrBvG,KAAK8E,WAAWgF,EAAI,GAAKtD,EACzBxG,KAAK8E,WAAWgF,EAAI,GAAKrD,EAEzBzG,KAAKuL,MAAMzB,EAAGO,GAEdrK,KAAKuL,MAAMzB,EAAI,EAAGe,GAElB7K,KAAKuL,MAAMzB,EAAI,EAAGjH,GAElB7C,KAAKoJ,cAAgB,EACdU,KAEP,CAAC,CACHzK,IAAK,OACLG,MAAO,SAAciM,GAMnB,IALA,IAAIC,EAAOxL,UAAUwE,OAAS,QAAsBrE,IAAjBH,UAAU,GAAmBA,UAAU,GAAKyL,EAC3EC,EAAO1L,UAAUwE,OAAS,QAAsBrE,IAAjBH,UAAU,GAAmBA,UAAU,GAAK2L,EAC3ExK,EAAIoK,EAAO/G,OACXD,EAAS,IAAInD,aAAiB,EAAJD,GAErByC,EAAI,EAAGA,EAAIzC,EAAGyC,IAAK,CAC1B,IAAIsG,EAAIqB,EAAO3H,GACfW,EAAO,EAAIX,GAAK4H,EAAKtB,GACrB3F,EAAO,EAAIX,EAAI,GAAK8H,EAAKxB,GAG3B,OAAO,IAAI5F,EAAWC,OAInBD,EA9XqB,GAyY9B,SAASoC,EAAK/E,EAAIC,EAAIC,EAAIC,GACxB,IAAIuG,EAAK1G,EAAKE,EACVyG,EAAK1G,EAAKE,EACd,OAAOuG,EAAKA,EAAKC,EAAKA,EAgBxB,SAASlB,EAAazF,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACxC,IAAIqG,EAAKxG,EAAKF,EACV2G,EAAKxG,EAAKF,EACV2G,EAAKxG,EAAKJ,EACV6G,EAAKxG,EAAKJ,EACV6G,EAAKJ,EAAKA,EAAKC,EAAKA,EACpBI,EAAKH,EAAKA,EAAKC,EAAKA,EACpB/B,EAAI,IAAO4B,EAAKG,EAAKF,EAAKC,GAC1BpC,GAAKqC,EAAKC,EAAKH,EAAKI,GAAMjC,EAC1BL,GAAKiC,EAAKK,EAAKH,EAAKE,GAAMhC,EAC9B,OAAON,EAAIA,EAAIC,EAAIA,EAmBrB,SAASoB,EAAUoE,EAAKC,EAAOC,EAAMC,GACnC,GAAIA,EAAQD,GAAQ,GAClB,IAAK,IAAIlI,EAAIkI,EAAO,EAAGlI,GAAKmI,EAAOnI,IAAK,CAKtC,IAJA,IAAIoI,EAAOJ,EAAIhI,GACXqI,EAAWJ,EAAMG,GACjBtE,EAAI9D,EAAI,EAEL8D,GAAKoE,GAAQD,EAAMD,EAAIlE,IAAMuE,GAClCL,EAAIlE,EAAI,GAAKkE,EAAIlE,KAGnBkE,EAAIlE,EAAI,GAAKsE,MAEV,CACL,IAEIE,EAAOJ,EAAO,EAEdK,EAAMJ,EACVK,EAAKR,EALQE,EAAOC,GAAS,EAKXG,GACdL,EAAMD,EAAIE,IAASD,EAAMD,EAAIG,KAASK,EAAKR,EAAKE,EAAMC,GACtDF,EAAMD,EAAIM,IAASL,EAAMD,EAAIG,KAASK,EAAKR,EAAKM,EAAMH,GACtDF,EAAMD,EAAIE,IAASD,EAAMD,EAAIM,KAAQE,EAAKR,EAAKE,EAAMI,GAIzD,IAHA,IAAIG,EAAQT,EAAIM,GACZI,EAAYT,EAAMQ,KAET,CACX,GACEH,UACOL,EAAMD,EAAIM,IAASI,GAE5B,GACEH,UACON,EAAMD,EAAIO,IAAQG,GAE3B,GAAIH,EAAMD,EAAM,MAChBE,EAAKR,EAAKM,EAAMC,GAGlBP,EAAIE,EAAO,GAAKF,EAAIO,GACpBP,EAAIO,GAAOE,EAEPN,EAAQG,EAAO,GAAKC,EAAML,GAC5BtE,EAAUoE,EAAKC,EAAOK,EAAMH,GAC5BvE,EAAUoE,EAAKC,EAAOC,EAAMK,EAAM,KAElC3E,EAAUoE,EAAKC,EAAOC,EAAMK,EAAM,GAClC3E,EAAUoE,EAAKC,EAAOK,EAAMH,KAKlC,SAASK,EAAKG,EAAK3I,EAAG8D,GACpB,IAAI8E,EAAMD,EAAI3I,GACd2I,EAAI3I,GAAK2I,EAAI7E,GACb6E,EAAI7E,GAAK8E,EAGX,SAASf,EAAYvB,GACnB,OAAOA,EAAE,GAGX,SAASyB,EAAYzB,GACnB,OAAOA,EAAE,GC5fX,IAAI,EAAU,KAEVuC,EAAoB,WACtB,SAASA,KACP,OAAgB3M,KAAM2M,GAEtB3M,KAAK4M,IAAM5M,KAAK6M,IAChB7M,KAAK8M,IAAM9M,KAAK+M,IAAM,KAEtB/M,KAAKgN,EAAI,GA4CX,OAzCA,OAAaL,EAAM,CAAC,CAClBtN,IAAK,SACLG,MAAO,SAAgB6G,EAAGC,GACxBtG,KAAKgN,GAAK,IAAIC,OAAOjN,KAAK4M,IAAM5M,KAAK8M,KAAOzG,EAAG,KAAK4G,OAAOjN,KAAK6M,IAAM7M,KAAK+M,KAAOzG,KAEnF,CACDjH,IAAK,YACLG,MAAO,WACY,OAAbQ,KAAK8M,MACP9M,KAAK8M,IAAM9M,KAAK4M,IAAK5M,KAAK+M,IAAM/M,KAAK6M,IACrC7M,KAAKgN,GAAK,OAGb,CACD3N,IAAK,SACLG,MAAO,SAAgB6G,EAAGC,GACxBtG,KAAKgN,GAAK,IAAIC,OAAOjN,KAAK8M,KAAOzG,EAAG,KAAK4G,OAAOjN,KAAK+M,KAAOzG,KAE7D,CACDjH,IAAK,MACLG,MAAO,SAAa6G,EAAGC,EAAGe,GAExB,IAAI6F,GADJ7G,GAAKA,IAAWgB,GAAKA,GAEjB8F,EAFI7G,GAAKA,EAGb,GAAIe,EAAI,EAAG,MAAM,IAAI1C,MAAM,mBACV,OAAb3E,KAAK8M,IAAc9M,KAAKgN,GAAK,IAAIC,OAAOC,EAAI,KAAKD,OAAOE,IAAa5K,KAAKC,IAAIxC,KAAK8M,IAAMI,GAAM,GAAW3K,KAAKC,IAAIxC,KAAK+M,IAAMI,GAAM,KAASnN,KAAKgN,GAAK,IAAME,EAAK,IAAMC,GACvK9F,IACLrH,KAAKgN,GAAK,IAAIC,OAAO5F,EAAG,KAAK4F,OAAO5F,EAAG,WAAW4F,OAAO5G,EAAIgB,EAAG,KAAK4F,OAAO3G,EAAG,KAAK2G,OAAO5F,EAAG,KAAK4F,OAAO5F,EAAG,WAAW4F,OAAOjN,KAAK8M,IAAMI,EAAI,KAAKD,OAAOjN,KAAK+M,IAAMI,MAEtK,CACD9N,IAAK,OACLG,MAAO,SAAc6G,EAAGC,EAAG8G,EAAG1M,GAC5BV,KAAKgN,GAAK,IAAIC,OAAOjN,KAAK4M,IAAM5M,KAAK8M,KAAOzG,EAAG,KAAK4G,OAAOjN,KAAK6M,IAAM7M,KAAK+M,KAAOzG,EAAG,KAAK2G,QAAQG,EAAG,KAAKH,QAAQvM,EAAG,KAAKuM,QAAQG,EAAG,OAEtI,CACD/N,IAAK,QACLG,MAAO,WACL,OAAOQ,KAAKgN,GAAK,SAIdL,EAnDe,GCDpBU,EAAuB,WACzB,SAASA,KACP,OAAgBrN,KAAMqN,GAEtBrN,KAAKgN,EAAI,GAyBX,OAtBA,OAAaK,EAAS,CAAC,CACrBhO,IAAK,SACLG,MAAO,SAAgB6G,EAAGC,GACxBtG,KAAKgN,EAAEM,KAAK,CAACjH,EAAGC,MAEjB,CACDjH,IAAK,YACLG,MAAO,WACLQ,KAAKgN,EAAEM,KAAKtN,KAAKgN,EAAE,GAAGO,WAEvB,CACDlO,IAAK,SACLG,MAAO,SAAgB6G,EAAGC,GACxBtG,KAAKgN,EAAEM,KAAK,CAACjH,EAAGC,MAEjB,CACDjH,IAAK,QACLG,MAAO,WACL,OAAOQ,KAAKgN,EAAEtI,OAAS1E,KAAKgN,EAAI,SAI7BK,EA7BkB,G,UCC3B,SAASG,EAA2BC,EAAGC,GAAkB,IAAIC,EAAuB,oBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAAe,IAAKE,EAAI,CAAE,GAAIG,MAAMC,QAAQN,KAAOE,EAE9K,SAAqCF,EAAGO,GAAU,IAAKP,EAAG,OAAQ,GAAiB,iBAANA,EAAgB,OAAOQ,EAAkBR,EAAGO,GAAS,IAAI3M,EAAI6M,OAAOC,UAAUC,SAASC,KAAKZ,GAAGF,MAAM,GAAI,GAAc,WAANlM,GAAkBoM,EAAEa,cAAajN,EAAIoM,EAAEa,YAAYC,MAAM,GAAU,QAANlN,GAAqB,QAANA,EAAa,OAAOyM,MAAMU,KAAKf,GAAI,GAAU,cAANpM,GAAqB,2CAA2CoN,KAAKpN,GAAI,OAAO4M,EAAkBR,EAAGO,GAFnOU,CAA4BjB,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAE/I,OAAqB,CAAMiJ,IAAIF,EAAIE,GAAI,IAAI7J,EAAI,EAAO6K,EAAI,aAAiB,MAAO,CAAEC,EAAGD,EAAGtN,EAAG,WAAe,OAAIyC,GAAK2J,EAAE/I,OAAe,CAAEhF,MAAM,GAAe,CAAEA,MAAM,EAAOF,MAAOiO,EAAE3J,OAAWvD,EAAG,SAAW2J,GAAM,MAAMA,GAAOzJ,EAAGkO,GAAO,MAAM,IAAIE,UAAU,yIAA4I,IAA6CzO,EAAzC0O,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEH,EAAG,WAAejB,EAAKA,EAAGU,KAAKZ,IAAOpM,EAAG,WAAe,IAAI2N,EAAOrB,EAAGsB,OAAsC,OAA9BH,EAAmBE,EAAKtP,KAAasP,GAASzO,EAAG,SAAW2O,GAAOH,GAAS,EAAM3O,EAAM8O,GAAQzO,EAAG,WAAe,IAAWqO,GAAiC,MAAbnB,EAAGwB,QAAgBxB,EAAGwB,SAAY,QAAU,GAAIJ,EAAQ,MAAM3O,KAIz9B,SAAS6N,EAAkBxB,EAAK2C,IAAkB,MAAPA,GAAeA,EAAM3C,EAAI/H,UAAQ0K,EAAM3C,EAAI/H,QAAQ,IAAK,IAAIZ,EAAI,EAAGuL,EAAO,IAAIvB,MAAMsB,GAAMtL,EAAIsL,EAAKtL,IAAOuL,EAAKvL,GAAK2I,EAAI3I,GAAM,OAAOuL,EAMhL,IAAIC,EAAuB,WACzB,SAASA,EAAQC,GACf,IAAIC,EAAOtP,UAAUwE,OAAS,QAAsBrE,IAAjBH,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAAG,EAAG,IAAK,KACvFuP,GAAQ,OAAeD,EAAM,GAC7BE,EAAOD,EAAM,GACbE,EAAOF,EAAM,GACbG,EAAOH,EAAM,GACbI,EAAOJ,EAAM,GAIjB,IAFA,OAAgBzP,KAAMsP,MAEfM,GAAQA,KAAUF,GAAQA,KAAaG,GAAQA,KAAUF,GAAQA,IAAQ,MAAM,IAAIhL,MAAM,kBAChG3E,KAAKuP,SAAWA,EAChBvP,KAAK8P,eAAiB,IAAIxO,aAAsC,EAAzBiO,EAAS9D,OAAO/G,QACvD1E,KAAK+P,QAAU,IAAIzO,aAAsC,EAAzBiO,EAAS9D,OAAO/G,QAChD1E,KAAK4P,KAAOA,EAAM5P,KAAK0P,KAAOA,EAC9B1P,KAAK6P,KAAOA,EAAM7P,KAAK2P,KAAOA,EAE9B3P,KAAKgQ,QA+jBP,OA5jBA,OAAaV,EAAS,CAAC,CACrBjQ,IAAK,SACLG,MAAO,WAKL,OAJAQ,KAAKuP,SAAS5J,SAEd3F,KAAKgQ,QAEEhQ,OAER,CACDX,IAAK,QACLG,MAAO,WASL,IARA,IAQ6C6G,EAAGC,EAR5C2J,EAAiBjQ,KAAKuP,SACtB9D,EAASwE,EAAexE,OACxB9D,EAAOsI,EAAetI,KACtBM,EAAYgI,EAAehI,UAC3B8H,EAAU/P,KAAK+P,QAEfG,EAAgBlQ,KAAKkQ,cAAgBlQ,KAAK8P,eAAe9H,SAAS,EAAGC,EAAUvD,OAAS,EAAI,GAEvFZ,EAAI,EAAG8D,EAAI,EAAGvG,EAAI4G,EAAUvD,OAAcZ,EAAIzC,EAAGyC,GAAK,EAAG8D,GAAK,EAAG,CACxE,IAAIrE,EAAoB,EAAf0E,EAAUnE,GACfqM,EAAwB,EAAnBlI,EAAUnE,EAAI,GACnBsM,EAAwB,EAAnBnI,EAAUnE,EAAI,GACnBsE,EAAKqD,EAAOlI,GACZ8E,EAAKoD,EAAOlI,EAAK,GACjB8M,EAAK5E,EAAO0E,GACZG,EAAK7E,EAAO0E,EAAK,GACjBI,EAAK9E,EAAO2E,GACZI,EAAK/E,EAAO2E,EAAK,GACjB7H,EAAK8H,EAAKjI,EACVI,EAAK8H,EAAKjI,EACVI,EAAK8H,EAAKnI,EACVM,EAAK8H,EAAKnI,EACVoI,EAA2B,GAArBlI,EAAKG,EAAKF,EAAKC,GAEzB,GAAIlG,KAAKC,IAAIiO,GAAM,KAAM,CAMvB,IAAIpG,EAAI,IAIJhD,EAAmB,EAAfY,EAAU,GAElB5B,GAAK+B,EAAKmI,GAAM,GADhBlG,GAAK9H,KAAKmO,MAAMjF,EAAOpE,GAAKe,GAAMM,GAAM+C,EAAOpE,EAAI,GAAKgB,GAAMI,IACtCC,EACxBpC,GAAK+B,EAAKmI,GAAM,EAAInG,EAAI5B,MACnB,CACL,IAAI9B,EAAI,EAAI8J,EACR9H,EAAKJ,EAAKA,EAAKC,EAAKA,EACpBI,EAAKH,EAAKA,EAAKC,EAAKA,EACxBrC,EAAI+B,GAAMM,EAAKC,EAAKH,EAAKI,GAAMjC,EAC/BL,EAAI+B,GAAME,EAAKK,EAAKH,EAAKE,GAAMhC,EAGjCuJ,EAActI,GAAKvB,EACnB6J,EAActI,EAAI,GAAKtB,EAIzB,IACI2E,EAEAiC,EAEAC,EALAzM,EAAIiH,EAAKA,EAAKjD,OAAS,GAEvB0G,EAAS,EAAJ1K,EAELiQ,EAAKlF,EAAO,EAAI/K,GAEhBkQ,EAAKnF,EAAO,EAAI/K,EAAI,GACxBqP,EAAQvK,KAAK,GAEb,IAAK,IAAItC,EAAK,EAAGA,EAAKyE,EAAKjD,SAAUxB,EAEnC+H,EAAKG,EAAI8B,EAAKyD,EAAIxD,EAAKyD,EACvBxF,EAAS,GAFT1K,EAAIiH,EAAKzE,IAEGyN,EAAKlF,EAAO,EAAI/K,GAAIkQ,EAAKnF,EAAO,EAAI/K,EAAI,GACpDqP,EAAQ9E,EAAK,GAAK8E,EAAQ3E,GAAM+B,EAAKyD,EACrCb,EAAQ9E,EAAK,GAAK8E,EAAQ3E,EAAK,GAAKuF,EAAKzD,IAG5C,CACD7N,IAAK,SACLG,MAAO,SAAgBqR,GACrB,IAAIC,EAAoB,MAAXD,EAAkBA,EAAU,IAAIlE,OAAStM,EAClD0Q,EAAkB/Q,KAAKuP,SACvBrH,EAAY6I,EAAgB7I,UAC5B8I,EAAUD,EAAgBC,QAC1BrJ,EAAOoJ,EAAgBpJ,KACvBuI,EAAgBlQ,KAAKkQ,cACrBH,EAAU/P,KAAK+P,QACnB,GAAIpI,EAAKjD,QAAU,EAAG,OAAO,KAE7B,IAAK,IAAIZ,EAAI,EAAGzC,EAAI6G,EAAUxD,OAAQZ,EAAIzC,IAAKyC,EAAG,CAChD,IAAI8D,EAAIM,EAAUpE,GAClB,KAAI8D,EAAI9D,GAAR,CACA,IAAImN,EAAyB,EAApB1O,KAAK4H,MAAMrG,EAAI,GACpBoN,EAAyB,EAApB3O,KAAK4H,MAAMvC,EAAI,GACpBuJ,EAAKjB,EAAce,GACnBG,EAAKlB,EAAce,EAAK,GACxBI,EAAKnB,EAAcgB,GACnBI,EAAKpB,EAAcgB,EAAK,GAE5BlR,KAAKuR,eAAeJ,EAAIC,EAAIC,EAAIC,EAAIT,IAMtC,IAHA,IAAIW,EACAC,EAAK9J,EAAKA,EAAKjD,OAAS,GAEnBqC,EAAM,EAAGA,EAAMY,EAAKjD,SAAUqC,EAAK,CAC1CyK,EAAKC,EAAIA,EAAK9J,EAAKZ,GACnB,IAAI+C,EAAkC,EAA9BvH,KAAK4H,MAAM6G,EAAQS,GAAM,GAC7BpL,EAAI6J,EAAcpG,GAClBxD,EAAI4J,EAAcpG,EAAI,GACtB4H,EAAS,EAALF,EAEJpH,EAAIpK,KAAK2R,SAAStL,EAAGC,EAAGyJ,EAAQ2B,EAAI,GAAI3B,EAAQ2B,EAAI,IAEpDtH,GAAGpK,KAAKuR,eAAelL,EAAGC,EAAG8D,EAAE,GAAIA,EAAE,GAAIyG,GAG/C,OAAOC,GAAUA,EAAOtR,UAEzB,CACDH,IAAK,eACLG,MAAO,SAAsBqR,GAC3B,IAAIC,EAAoB,MAAXD,EAAkBA,EAAU,IAAIlE,OAAStM,EAEtD,OADAwQ,EAAQe,KAAK5R,KAAK0P,KAAM1P,KAAK2P,KAAM3P,KAAK4P,KAAO5P,KAAK0P,KAAM1P,KAAK6P,KAAO7P,KAAK2P,MACpEmB,GAAUA,EAAOtR,UAEzB,CACDH,IAAK,aACLG,MAAO,SAAoBsE,EAAG+M,GAC5B,IAAIC,EAAoB,MAAXD,EAAkBA,EAAU,IAAIlE,OAAStM,EAElDoL,EAASzL,KAAK6R,MAAM/N,GAExB,GAAe,OAAX2H,GAAoBA,EAAO/G,OAA/B,CACAmM,EAAQiB,OAAOrG,EAAO,GAAIA,EAAO,IAGjC,IAFA,IAAIpK,EAAIoK,EAAO/G,OAER+G,EAAO,KAAOA,EAAOpK,EAAI,IAAMoK,EAAO,KAAOA,EAAOpK,EAAI,IAAMA,EAAI,GACvEA,GAAK,EAGP,IAAK,IAAI+F,EAAM,EAAGA,EAAM/F,EAAG+F,GAAO,EAC5BqE,EAAOrE,KAASqE,EAAOrE,EAAM,IAAMqE,EAAOrE,EAAM,KAAOqE,EAAOrE,EAAM,IAAIyJ,EAAQkB,OAAOtG,EAAOrE,GAAMqE,EAAOrE,EAAM,IAIvH,OADAyJ,EAAQmB,YACDlB,GAAUA,EAAOtR,WAEzB,CACDH,IAAK,eACLG,MAAoB,UAAyB,SAASyS,IACpD,IAAIxG,EAAQ3H,EAAGzC,EAAG6Q,EAClB,OAAO,UAAyB,SAAuBC,GACrD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EACHxD,EAASzL,KAAKuP,SAAS9D,OACvB3H,EAAI,EAAGzC,EAAIoK,EAAO/G,OAAS,EAE7B,KAAK,EACH,KAAMZ,EAAIzC,GAAI,CACZ8Q,EAASlD,KAAO,GAChB,MAKF,KAFAiD,EAAOlS,KAAKqS,YAAYvO,IAEb,CACTqO,EAASlD,KAAO,EAChB,MAKF,OAFAiD,EAAKI,MAAQxO,EACbqO,EAASlD,KAAO,EACTiD,EAET,KAAK,IACDpO,EACFqO,EAASlD,KAAO,EAChB,MAEF,KAAK,GACL,IAAK,MACH,OAAOkD,EAASI,UAGrBN,EAAcjS,UAElB,CACDX,IAAK,cACLG,MAAO,SAAqBsE,GAC1B,IAAI0O,EAAU,IAAInF,EAElB,OADArN,KAAKyS,WAAW3O,EAAG0O,GACZA,EAAQhT,UAEhB,CACDH,IAAK,iBACLG,MAAO,SAAwB0N,EAAIC,EAAIwD,EAAIC,EAAIC,GAC7C,IAAI6B,EAEAC,EAAK3S,KAAK4S,YAAY1F,EAAIC,GAE1B0F,EAAK7S,KAAK4S,YAAYjC,EAAIC,GAEnB,IAAP+B,GAAmB,IAAPE,GACdhC,EAAQiB,OAAO5E,EAAIC,GACnB0D,EAAQkB,OAAOpB,EAAIC,KACV8B,EAAI1S,KAAK8S,aAAa5F,EAAIC,EAAIwD,EAAIC,EAAI+B,EAAIE,MACnDhC,EAAQiB,OAAOY,EAAE,GAAIA,EAAE,IACvB7B,EAAQkB,OAAOW,EAAE,GAAIA,EAAE,OAG1B,CACDrT,IAAK,WACLG,MAAO,SAAkBsE,EAAGuC,EAAGC,GAC7B,OAAKD,GAAKA,IAASA,IAAOC,GAAKA,IAASA,GACjCtG,KAAKuP,SAASwD,MAAMjP,EAAGuC,EAAGC,KAAOxC,IAEzC,CACDzE,IAAK,YACLG,MAAoB,UAAyB,SAASwT,EAAUlP,GAC9D,IAAImP,EAAIC,EAAWH,EAAOnL,EAAGuL,EAAIC,EAAIC,EAAIC,EAAIC,EAE7C,OAAO,UAAyB,SAAoBC,GAClD,OACE,OAAQA,EAAUpB,KAAOoB,EAAUvE,MACjC,KAAK,EAGH,KAFAgE,EAAKjT,KAAK6R,MAAM/N,IAEP,CACP0P,EAAUvE,KAAO,GACjB,MAGFiE,EAAY1F,EAA2BxN,KAAKuP,SAASyD,UAAUlP,IAC/D0P,EAAUpB,KAAO,EAEjBc,EAAUtE,IAEZ,KAAK,EACH,IAAKmE,EAAQG,EAAU7R,KAAK3B,KAAM,CAChC8T,EAAUvE,KAAO,GACjB,MAMF,GAHArH,EAAImL,EAAMvT,QACV2T,EAAKnT,KAAK6R,MAAMjK,IAEP,CACP4L,EAAUvE,KAAO,GACjB,MAGFmE,EAAK,EAAGC,EAAKJ,EAAGvO,OAElB,KAAK,GACH,KAAM0O,EAAKC,GAAK,CACdG,EAAUvE,KAAO,GACjB,MAGFqE,EAAK,EAAGC,EAAKJ,EAAGzO,OAElB,KAAK,GACH,KAAM4O,EAAKC,GAAK,CACdC,EAAUvE,KAAO,GACjB,MAGF,GAAMgE,EAAGG,IAAOD,EAAGG,IAAOL,EAAGG,EAAK,IAAMD,EAAGG,EAAK,IAAML,GAAIG,EAAK,GAAKC,IAAOF,GAAIG,EAAKC,EAAK,GAAKA,IAAON,GAAIG,EAAK,GAAKC,IAAOF,GAAIG,EAAKC,EAAK,GAAKA,GAAM,CACjJC,EAAUvE,KAAO,GACjB,MAIF,OADAuE,EAAUvE,KAAO,GACVrH,EAET,KAAK,GACH,OAAO4L,EAAUC,OAAO,QAAS,IAEnC,KAAK,GACHH,GAAM,EACNE,EAAUvE,KAAO,GACjB,MAEF,KAAK,GACHmE,GAAM,EACNI,EAAUvE,KAAO,GACjB,MAEF,KAAK,GACHuE,EAAUvE,KAAO,EACjB,MAEF,KAAK,GACHuE,EAAUvE,KAAO,GACjB,MAEF,KAAK,GACHuE,EAAUpB,KAAO,GACjBoB,EAAUhQ,GAAKgQ,EAAiB,MAAE,GAElCN,EAAU3S,EAAEiT,EAAUhQ,IAExB,KAAK,GAKH,OAJAgQ,EAAUpB,KAAO,GAEjBc,EAAUzS,IAEH+S,EAAUE,OAAO,IAE1B,KAAK,GACL,IAAK,MACH,OAAOF,EAAUjB,UAGtBS,EAAWhT,KAAM,CAAC,CAAC,EAAG,GAAI,GAAI,UAElC,CACDX,IAAK,QACLG,MAAO,SAAesE,GACpB,IAAIoM,EAAgBlQ,KAAKkQ,cACrByD,EAAkB3T,KAAKuP,SACvByB,EAAU2C,EAAgB3C,QAC1B9I,EAAYyL,EAAgBzL,UAC5BD,EAAY0L,EAAgB1L,UAC5B2L,EAAK5C,EAAQlN,GACjB,IAAY,IAAR8P,EAAW,OAAO,KAEtB,IAAInI,EAAS,GACTlL,EAAIqT,EAER,EAAG,CACD,IAAI9J,EAAIvH,KAAK4H,MAAM5J,EAAI,GAGvB,GAFAkL,EAAO6B,KAAK4C,EAAkB,EAAJpG,GAAQoG,EAAkB,EAAJpG,EAAQ,IAEpD7B,EADJ1H,EAAIA,EAAI,GAAM,EAAIA,EAAI,EAAIA,EAAI,KACTuD,EAAG,MAExBvD,EAAI2H,EAAU3H,SACPA,IAAMqT,IAAa,IAAPrT,GAErB,OAAOkL,IAER,CACDpM,IAAK,QACLG,MAAO,SAAesE,GAEpB,GAAU,IAANA,GAAyC,IAA9B9D,KAAKuP,SAAS5H,KAAKjD,OAChC,MAAO,CAAC1E,KAAK4P,KAAM5P,KAAK2P,KAAM3P,KAAK4P,KAAM5P,KAAK6P,KAAM7P,KAAK0P,KAAM1P,KAAK6P,KAAM7P,KAAK0P,KAAM1P,KAAK2P,MAG5F,IAAIlE,EAASzL,KAAK6T,MAAM/P,GAExB,GAAe,OAAX2H,EAAiB,OAAO,KAC5B,IAAIqI,EAAI9T,KAAK+P,QACT2B,EAAQ,EAAJ5N,EACR,OAAOgQ,EAAEpC,IAAMoC,EAAEpC,EAAI,GAAK1R,KAAK+T,cAAcjQ,EAAG2H,EAAQqI,EAAEpC,GAAIoC,EAAEpC,EAAI,GAAIoC,EAAEpC,EAAI,GAAIoC,EAAEpC,EAAI,IAAM1R,KAAKgU,YAAYlQ,EAAG2H,KAEnH,CACDpM,IAAK,cACLG,MAAO,SAAqBsE,EAAG2H,GAc7B,IAbA,IAEIyB,EACAC,EAIAwF,EAGAiB,EAVAvS,EAAIoK,EAAO/G,OACXuP,EAAI,KAGJtD,EAAKlF,EAAOpK,EAAI,GAChBuP,EAAKnF,EAAOpK,EAAI,GAGhBwR,EAAK7S,KAAK4S,YAAYjC,EAAIC,GAG1BsD,EAAK,EAEAtM,EAAI,EAAGA,EAAIvG,EAAGuG,GAAK,EAI1B,GAHAsF,EAAKyD,EAAIxD,EAAKyD,EAAID,EAAKlF,EAAO7D,GAAIgJ,EAAKnF,EAAO7D,EAAI,GAClD+K,EAAKE,EAAIA,EAAK7S,KAAK4S,YAAYjC,EAAIC,GAExB,IAAP+B,GAAmB,IAAPE,EACde,EAAKM,EAAIA,EAAK,EACVD,EAAGA,EAAE3G,KAAKqD,EAAIC,GAASqD,EAAI,CAACtD,EAAIC,OAC/B,CACL,IAAI8B,OAAI,EACJyB,OAAM,EACNC,OAAM,EACNC,OAAM,EACNC,OAAM,EAEV,GAAW,IAAP3B,EAAU,CACZ,GAAwD,QAAnDD,EAAI1S,KAAK8S,aAAa5F,EAAIC,EAAIwD,EAAIC,EAAI+B,EAAIE,IAAe,SAC9D,IAAI0B,EAAK7B,EAEL8B,GAAM,OAAeD,EAAI,GAE7BJ,EAAMK,EAAI,GACVJ,EAAMI,EAAI,GACVH,EAAMG,EAAI,GACVF,EAAME,EAAI,OACL,CACL,GAAwD,QAAnD9B,EAAI1S,KAAK8S,aAAanC,EAAIC,EAAI1D,EAAIC,EAAI0F,EAAIF,IAAe,SAC9D,IAAI8B,EAAM/B,EAENgC,GAAM,OAAeD,EAAK,GAE9BJ,EAAMK,EAAI,GACVJ,EAAMI,EAAI,GACVP,EAAMO,EAAI,GACVN,EAAMM,EAAI,GACVd,EAAKM,EAAIA,EAAKlU,KAAK2U,UAAUR,EAAKC,GAC9BR,GAAMM,GAAIlU,KAAK4U,MAAM9Q,EAAG8P,EAAIM,EAAID,EAAGA,EAAEvP,QACrCuP,EAAGA,EAAE3G,KAAK6G,EAAKC,GAAUH,EAAI,CAACE,EAAKC,GAGzCR,EAAKM,EAAIA,EAAKlU,KAAK2U,UAAUN,EAAKC,GAC9BV,GAAMM,GAAIlU,KAAK4U,MAAM9Q,EAAG8P,EAAIM,EAAID,EAAGA,EAAEvP,QACrCuP,EAAGA,EAAE3G,KAAK+G,EAAKC,GAAUL,EAAI,CAACI,EAAKC,GAI3C,GAAIL,EACFL,EAAKM,EAAIA,EAAKlU,KAAK2U,UAAUV,EAAE,GAAIA,EAAE,IACjCL,GAAMM,GAAIlU,KAAK4U,MAAM9Q,EAAG8P,EAAIM,EAAID,EAAGA,EAAEvP,aACpC,GAAI1E,KAAK6U,SAAS/Q,GAAI9D,KAAK0P,KAAO1P,KAAK4P,MAAQ,GAAI5P,KAAK2P,KAAO3P,KAAK6P,MAAQ,GACjF,MAAO,CAAC7P,KAAK4P,KAAM5P,KAAK2P,KAAM3P,KAAK4P,KAAM5P,KAAK6P,KAAM7P,KAAK0P,KAAM1P,KAAK6P,KAAM7P,KAAK0P,KAAM1P,KAAK2P,MAG5F,OAAOsE,IAER,CACD5U,IAAK,eACLG,MAAO,SAAsB0N,EAAIC,EAAIwD,EAAIC,EAAI+B,EAAIE,GAC/C,OAAa,CACX,GAAW,IAAPF,GAAmB,IAAPE,EAAU,MAAO,CAAC3F,EAAIC,EAAIwD,EAAIC,GAC9C,GAAI+B,EAAKE,EAAI,OAAO,KACpB,IAAIxM,OAAI,EACJC,OAAI,EACJzD,EAAI8P,GAAME,EACN,EAAJhQ,GAAOwD,EAAI6G,GAAMyD,EAAKzD,IAAOlN,KAAK6P,KAAO1C,IAAOyD,EAAKzD,GAAK7G,EAAItG,KAAK6P,MAAkB,EAAJhN,GAAOwD,EAAI6G,GAAMyD,EAAKzD,IAAOlN,KAAK2P,KAAOxC,IAAOyD,EAAKzD,GAAK7G,EAAItG,KAAK2P,MAAkB,EAAJ9M,GAAOyD,EAAI6G,GAAMyD,EAAKzD,IAAOnN,KAAK4P,KAAO1C,IAAOyD,EAAKzD,GAAK7G,EAAIrG,KAAK4P,OAAUtJ,EAAI6G,GAAMyD,EAAKzD,IAAOnN,KAAK0P,KAAOxC,IAAOyD,EAAKzD,GAAK7G,EAAIrG,KAAK0P,MAC3SiD,GAAIzF,EAAK7G,EAAG8G,EAAK7G,EAAGqM,EAAK3S,KAAK4S,YAAY1F,EAAIC,KAASwD,EAAKtK,EAAGuK,EAAKtK,EAAGuM,EAAK7S,KAAK4S,YAAYjC,EAAIC,OAGxG,CACDvR,IAAK,gBACLG,MAAO,SAAuBsE,EAAG2H,EAAQqJ,EAAKC,EAAKC,EAAKC,GACtD,IACI7K,EADA6J,EAAInG,MAAMU,KAAK/C,GAKnB,IAHIrB,EAAIpK,KAAK2R,SAASsC,EAAE,GAAIA,EAAE,GAAIa,EAAKC,KAAMd,EAAEiB,QAAQ9K,EAAE,GAAIA,EAAE,KAC3DA,EAAIpK,KAAK2R,SAASsC,EAAEA,EAAEvP,OAAS,GAAIuP,EAAEA,EAAEvP,OAAS,GAAIsQ,EAAKC,KAAMhB,EAAE3G,KAAKlD,EAAE,GAAIA,EAAE,IAE9E6J,EAAIjU,KAAKgU,YAAYlQ,EAAGmQ,GAC1B,IAAK,IAAyBtB,EAArB/K,EAAI,EAAGvG,EAAI4S,EAAEvP,OAAYmO,EAAK7S,KAAK2U,UAAUV,EAAE5S,EAAI,GAAI4S,EAAE5S,EAAI,IAAKuG,EAAIvG,EAAGuG,GAAK,EACrF+K,EAAKE,EAAIA,EAAK7S,KAAK2U,UAAUV,EAAErM,GAAIqM,EAAErM,EAAI,IACrC+K,GAAME,IAAIjL,EAAI5H,KAAK4U,MAAM9Q,EAAG6O,EAAIE,EAAIoB,EAAGrM,GAAIvG,EAAI4S,EAAEvP,aAE9C1E,KAAK6U,SAAS/Q,GAAI9D,KAAK0P,KAAO1P,KAAK4P,MAAQ,GAAI5P,KAAK2P,KAAO3P,KAAK6P,MAAQ,KACjFoE,EAAI,CAACjU,KAAK0P,KAAM1P,KAAK2P,KAAM3P,KAAK4P,KAAM5P,KAAK2P,KAAM3P,KAAK4P,KAAM5P,KAAK6P,KAAM7P,KAAK0P,KAAM1P,KAAK6P,OAGzF,OAAOoE,IAER,CACD5U,IAAK,QACLG,MAAO,SAAesE,EAAG8P,EAAIM,EAAID,EAAGrM,GAClC,KAAOgM,IAAOM,GAAI,CAChB,IAAI7N,OAAI,EACJC,OAAI,EAER,OAAQsN,GACN,KAAK,EACHA,EAAK,EACL,SAGF,KAAK,EACHA,EAAK,EAAGvN,EAAIrG,KAAK4P,KAAMtJ,EAAItG,KAAK2P,KAChC,MAGF,KAAK,EACHiE,EAAK,EACL,SAGF,KAAK,EACHA,EAAK,GAAIvN,EAAIrG,KAAK4P,KAAMtJ,EAAItG,KAAK6P,KACjC,MAGF,KAAK,GACH+D,EAAK,EACL,SAGF,KAAK,EACHA,EAAK,EAAGvN,EAAIrG,KAAK0P,KAAMpJ,EAAItG,KAAK6P,KAChC,MAGF,KAAK,EACH+D,EAAK,EACL,SAGF,KAAK,EACHA,EAAK,EAAGvN,EAAIrG,KAAK0P,KAAMpJ,EAAItG,KAAK2P,KAO/BsE,EAAErM,KAAOvB,GAAK4N,EAAErM,EAAI,KAAOtB,IAAMtG,KAAK6U,SAAS/Q,EAAGuC,EAAGC,KACxD2N,EAAEkB,OAAOvN,EAAG,EAAGvB,EAAGC,GAAIsB,GAAK,GAI/B,GAAIqM,EAAEvP,OAAS,EACb,IAAK,IAAI+C,EAAM,EAAGA,EAAMwM,EAAEvP,OAAQ+C,GAAO,EAAG,CAC1C,IAAItE,GAAMsE,EAAM,GAAKwM,EAAEvP,OACnB8E,GAAK/B,EAAM,GAAKwM,EAAEvP,QAElBuP,EAAExM,KAASwM,EAAE9Q,IAAO8Q,EAAE9Q,KAAQ8Q,EAAEzK,IAAMyK,EAAExM,EAAM,KAAOwM,EAAE9Q,EAAK,IAAM8Q,EAAE9Q,EAAK,KAAO8Q,EAAEzK,EAAI,MAAIyK,EAAEkB,OAAOhS,EAAI,GAAIsE,GAAO,GAI1H,OAAOG,IAER,CACDvI,IAAK,WACLG,MAAO,SAAkB0N,EAAIC,EAAIiI,EAAIC,GACnC,IACIxS,EACAwD,EACAC,EAHAwD,EAAI7D,IAKR,GAAIoP,EAAK,EAAG,CAEV,GAAIlI,GAAMnN,KAAK2P,KAAM,OAAO,MACvB9M,GAAK7C,KAAK2P,KAAOxC,GAAMkI,GAAMvL,IAAGxD,EAAItG,KAAK2P,KAAMtJ,EAAI6G,GAAMpD,EAAIjH,GAAKuS,QAClE,GAAIC,EAAK,EAAG,CAEjB,GAAIlI,GAAMnN,KAAK6P,KAAM,OAAO,MACvBhN,GAAK7C,KAAK6P,KAAO1C,GAAMkI,GAAMvL,IAAGxD,EAAItG,KAAK6P,KAAMxJ,EAAI6G,GAAMpD,EAAIjH,GAAKuS,GAGzE,GAAIA,EAAK,EAAG,CAEV,GAAIlI,GAAMlN,KAAK4P,KAAM,OAAO,MACvB/M,GAAK7C,KAAK4P,KAAO1C,GAAMkI,GAAMtL,IAAGzD,EAAIrG,KAAK4P,KAAMtJ,EAAI6G,GAAMrD,EAAIjH,GAAKwS,QAClE,GAAID,EAAK,EAAG,CAEjB,GAAIlI,GAAMlN,KAAK0P,KAAM,OAAO,MACvB7M,GAAK7C,KAAK0P,KAAOxC,GAAMkI,GAAMtL,IAAGzD,EAAIrG,KAAK0P,KAAMpJ,EAAI6G,GAAMrD,EAAIjH,GAAKwS,GAGzE,MAAO,CAAChP,EAAGC,KAEZ,CACDjH,IAAK,YACLG,MAAO,SAAmB6G,EAAGC,GAC3B,OAAQD,IAAMrG,KAAK0P,KAAO,EAAIrJ,IAAMrG,KAAK4P,KAAO,EAAI,IAAMtJ,IAAMtG,KAAK2P,KAAO,EAAIrJ,IAAMtG,KAAK6P,KAAO,EAAI,KAEvG,CACDxQ,IAAK,cACLG,MAAO,SAAqB6G,EAAGC,GAC7B,OAAQD,EAAIrG,KAAK0P,KAAO,EAAIrJ,EAAIrG,KAAK4P,KAAO,EAAI,IAAMtJ,EAAItG,KAAK2P,KAAO,EAAIrJ,EAAItG,KAAK6P,KAAO,EAAI,OAI3FP,EAjlBkB,GCXvBgG,EAAuB,SAAyBC,GAEpD,SAAS,EAA2B9H,EAAGC,GAAkB,IAAIC,EAAuB,oBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAAe,IAAKE,EAAI,CAAE,GAAIG,MAAMC,QAAQN,KAAOE,EAE9K,SAAqCF,EAAGO,GAAU,IAAKP,EAAG,OAAQ,GAAiB,iBAANA,EAAgB,OAAO,EAAkBA,EAAGO,GAAS,IAAI3M,EAAI6M,OAAOC,UAAUC,SAASC,KAAKZ,GAAGF,MAAM,GAAI,GAAc,WAANlM,GAAkBoM,EAAEa,cAAajN,EAAIoM,EAAEa,YAAYC,MAAM,GAAU,QAANlN,GAAqB,QAANA,EAAa,OAAOyM,MAAMU,KAAKf,GAAI,GAAU,cAANpM,GAAqB,2CAA2CoN,KAAKpN,GAAI,OAAO,EAAkBoM,EAAGO,GAFnO,CAA4BP,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAE/I,OAAqB,CAAMiJ,IAAIF,EAAIE,GAAI,IAAI7J,EAAI,EAAO6K,EAAI,aAAiB,MAAO,CAAEC,EAAGD,EAAGtN,EAAG,WAAe,OAAIyC,GAAK2J,EAAE/I,OAAe,CAAEhF,MAAM,GAAe,CAAEA,MAAM,EAAOF,MAAOiO,EAAE3J,OAAWvD,EAAG,SAAW2O,GAAO,MAAMA,GAAQzO,EAAGkO,GAAO,MAAM,IAAIE,UAAU,yIAA4I,IAA6CzO,EAAzC0O,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEH,EAAG,WAAejB,EAAKA,EAAGU,KAAKZ,IAAOpM,EAAG,WAAe,IAAI2N,EAAOrB,EAAGsB,OAAsC,OAA9BH,EAAmBE,EAAKtP,KAAasP,GAASzO,EAAG,SAAWiV,GAAOzG,GAAS,EAAM3O,EAAMoV,GAAQ/U,EAAG,WAAe,IAAWqO,GAAiC,MAAbnB,EAAGwB,QAAgBxB,EAAGwB,SAAY,QAAU,GAAIJ,EAAQ,MAAM3O,KAI39B,SAAS,EAAkBqM,EAAK2C,IAAkB,MAAPA,GAAeA,EAAM3C,EAAI/H,UAAQ0K,EAAM3C,EAAI/H,QAAQ,IAAK,IAAIZ,EAAI,EAAGuL,EAAO,IAAIvB,MAAMsB,GAAMtL,EAAIsL,EAAKtL,IAAOuL,EAAKvL,GAAK2I,EAAI3I,GAAM,OAAOuL,EAQhL,IAAIoG,EAAM,EAAIlT,KAAKmT,GACfrR,EAAM9B,KAAK8B,IAEf,SAASsR,EAAOvL,GACd,OAAOA,EAAE,GAGX,SAASwL,EAAOxL,GACd,OAAOA,EAAE,GAmBX,SAASyL,EAAOxP,EAAGC,EAAGe,GACpB,MAAO,CAAChB,EAAI9D,KAAKuT,IAAIzP,EAAIC,GAAKe,EAAGf,EAAI/D,KAAKwT,IAAI1P,EAAIC,GAAKe,GAGzD,IAAI2O,EAAwB,WAC1B,SAASA,EAASvK,IAChB,OAAgBzL,KAAMgW,GAEtBhW,KAAKiW,YAAc,IAAIzR,EAAWiH,GAClCzL,KAAKgR,QAAU,IAAIhM,WAAWyG,EAAO/G,OAAS,GAC9C1E,KAAKkW,WAAa,IAAIlR,WAAWyG,EAAO/G,OAAS,GACjD1E,KAAKyL,OAASzL,KAAKiW,YAAYxR,OAE/BzE,KAAKgQ,QAwWP,OArWA,OAAagG,EAAU,CAAC,CACtB3W,IAAK,SACLG,MAAO,WAKL,OAJAQ,KAAKiW,YAAYtQ,SAEjB3F,KAAKgQ,QAEEhQ,OAER,CACDX,IAAK,QACLG,MAAO,WACL,IAAImH,EAAI3G,KAAKiW,YACTxK,EAASzL,KAAKyL,OAElB,GAAI9E,EAAEgB,MAAQhB,EAAEgB,KAAKjD,OAAS,GA9CpC,SAAmBiC,GAIjB,IAHA,IAAIsB,EAAYtB,EAAEsB,UACdxD,EAASkC,EAAElC,OAENX,EAAI,EAAGA,EAAImE,EAAUvD,OAAQZ,GAAK,EAAG,CAC5C,IAAIuG,EAAI,EAAIpC,EAAUnE,GAClB+G,EAAI,EAAI5C,EAAUnE,EAAI,GACtBjB,EAAI,EAAIoF,EAAUnE,EAAI,GAE1B,IADaW,EAAO5B,GAAK4B,EAAO4F,KAAO5F,EAAOoG,EAAI,GAAKpG,EAAO4F,EAAI,KAAO5F,EAAOoG,GAAKpG,EAAO4F,KAAO5F,EAAO5B,EAAI,GAAK4B,EAAO4F,EAAI,IAClH,MAAO,OAAO,EAG5B,OAAO,EAkCgC8L,CAAUxP,GAAI,CAC/C3G,KAAKmW,UAAYnR,WAAWwJ,KAAK,CAC/B9J,OAAQ+G,EAAO/G,OAAS,IACvB,SAAUsI,EAAGlJ,GACd,OAAOA,KACNsS,MAAK,SAAUtS,EAAG8D,GACnB,OAAO6D,EAAO,EAAI3H,GAAK2H,EAAO,EAAI7D,IAAM6D,EAAO,EAAI3H,EAAI,GAAK2H,EAAO,EAAI7D,EAAI,MAQ7E,IALA,IAAIrH,EAAIP,KAAKmW,UAAU,GACnB1V,EAAIT,KAAKmW,UAAUnW,KAAKmW,UAAUzR,OAAS,GAC3C2R,EAAS,CAAC5K,EAAO,EAAIlL,GAAIkL,EAAO,EAAIlL,EAAI,GAAIkL,EAAO,EAAIhL,GAAIgL,EAAO,EAAIhL,EAAI,IAC1E4G,EAAI,KAAO9E,KAAK+T,MAAMD,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,IAE3DvS,EAAI,EAAGzC,EAAIoK,EAAO/G,OAAS,EAAGZ,EAAIzC,IAAKyC,EAAG,CACjD,IAAIsG,EAAIyL,EAAOpK,EAAO,EAAI3H,GAAI2H,EAAO,EAAI3H,EAAI,GAAIuD,GACjDoE,EAAO,EAAI3H,GAAKsG,EAAE,GAClBqB,EAAO,EAAI3H,EAAI,GAAKsG,EAAE,GAGxBpK,KAAKiW,YAAc,IAAIzR,EAAWiH,eAE3BzL,KAAKmW,UAad,IAVA,IAAIjO,EAAYlI,KAAKkI,UAAYlI,KAAKiW,YAAY/N,UAC9CP,EAAO3H,KAAK2H,KAAO3H,KAAKiW,YAAYtO,KACpCM,EAAYjI,KAAKiI,UAAYjI,KAAKiW,YAAYhO,UAC9C+I,EAAUhR,KAAKgR,QAAQxL,MAAM,GAE7B+Q,EAAYvW,KAAKkW,WAAW1Q,MAAM,GAK7B0E,EAAK,EAAGF,EAAK9B,EAAUxD,OAAQwF,EAAKF,IAAME,EAAI,CACrD,IAAIsM,EAAKvO,EAAUiC,EAAK,GAAM,EAAIA,EAAK,EAAIA,EAAK,IACzB,IAAnBhC,EAAUgC,KAA+B,IAAjB8G,EAAQwF,KAAYxF,EAAQwF,GAAMtM,GAGhE,IAAK,IAAIhH,EAAK,EAAGuT,EAAM9O,EAAKjD,OAAQxB,EAAKuT,IAAOvT,EAC9CqT,EAAU5O,EAAKzE,IAAOA,EAIpByE,EAAKjD,QAAU,GAAKiD,EAAKjD,OAAS,IACpC1E,KAAKiI,UAAY,IAAIjD,WAAW,GAAGQ,MAAM,GACzCxF,KAAKkI,UAAY,IAAIlD,WAAW,GAAGQ,MAAM,GACzCxF,KAAKiI,UAAU,GAAKN,EAAK,GACzBqJ,EAAQrJ,EAAK,IAAM,EAEC,IAAhBA,EAAKjD,SACPsM,EAAQrJ,EAAK,IAAM,EACnB3H,KAAKiI,UAAU,GAAKN,EAAK,GACzB3H,KAAKiI,UAAU,GAAKN,EAAK,OAI9B,CACDtI,IAAK,UACLG,MAAO,SAAiB6W,GACtB,OAAO,IAAI/G,EAAQtP,KAAMqW,KAE1B,CACDhX,IAAK,YACLG,MAAoB,UAAyB,SAASwT,EAAUlP,GAC9D,IAAIkN,EAASrJ,EAAMuO,EAAYhO,EAAWD,EAAWkO,EAAWO,EAAG9C,EAAIrT,EAAG0K,EAAIb,EAE9E,OAAO,UAAyB,SAAoB+H,GAClD,OACE,OAAQA,EAASC,KAAOD,EAASlD,MAC/B,KAAK,EAGH,GAFA+B,EAAUhR,KAAKgR,QAASrJ,EAAO3H,KAAK2H,KAAMuO,EAAalW,KAAKkW,WAAYhO,EAAYlI,KAAKkI,UAAWD,EAAYjI,KAAKiI,YAAWkO,EAAYnW,KAAKmW,WAEjI,CACdhE,EAASlD,KAAO,GAChB,MAKF,MAFAyH,EAAIP,EAAUQ,QAAQ7S,IAEZ,GAAI,CACZqO,EAASlD,KAAO,EAChB,MAIF,OADAkD,EAASlD,KAAO,EACTkH,EAAUO,EAAI,GAEvB,KAAK,EACH,KAAMA,EAAIP,EAAUzR,OAAS,GAAI,CAC/ByN,EAASlD,KAAO,EAChB,MAIF,OADAkD,EAASlD,KAAO,EACTkH,EAAUO,EAAI,GAEvB,KAAK,EACH,OAAOvE,EAASsB,OAAO,UAEzB,KAAK,GAGH,IAAc,KAFdG,EAAK5C,EAAQlN,IAEK,CAChBqO,EAASlD,KAAO,GAChB,MAGF,OAAOkD,EAASsB,OAAO,UAEzB,KAAK,GAEHlT,EAAIqT,EAAI3I,GAAM,EAEhB,KAAK,GAEH,OADAkH,EAASlD,KAAO,GACThE,EAAKhD,EAAU1H,GAExB,KAAK,GAGH,GAAM0H,EAFN1H,EAAIA,EAAI,GAAM,EAAIA,EAAI,EAAIA,EAAI,KAEPuD,EAAI,CACzBqO,EAASlD,KAAO,GAChB,MAGF,OAAOkD,EAASsB,OAAO,UAEzB,KAAK,GAIH,IAAa,KAFblT,EAAI2H,EAAU3H,IAEG,CACf4R,EAASlD,KAAO,GAChB,MAKF,IAFA7E,EAAIzC,GAAMuO,EAAWpS,GAAK,GAAK6D,EAAKjD,WAExBuG,EAAK,CACfkH,EAASlD,KAAO,GAChB,MAIF,OADAkD,EAASlD,KAAO,GACT7E,EAET,KAAK,GACH,OAAO+H,EAASsB,OAAO,UAEzB,KAAK,GACH,GAAIlT,IAAMqT,EAAI,CACZzB,EAASlD,KAAO,GAChB,MAGJ,KAAK,GACL,IAAK,MACH,OAAOkD,EAASI,UAGrBS,EAAWhT,UAEf,CACDX,IAAK,OACLG,MAAO,SAAc6G,EAAGC,GACtB,IAAIxC,EAAI5D,UAAUwE,OAAS,QAAsBrE,IAAjBH,UAAU,GAAmBA,UAAU,GAAK,EAC5E,IAAKmG,GAAKA,IAASA,IAAOC,GAAKA,IAASA,EAAI,OAAQ,EAIpD,IAHA,IACIzD,EADA0D,EAAKzC,GAGDjB,EAAI7C,KAAK+S,MAAMjP,EAAGuC,EAAGC,KAAO,GAAKzD,IAAMiB,GAAKjB,IAAM0D,GACxDzC,EAAIjB,EAGN,OAAOA,IAER,CACDxD,IAAK,QACLG,MAAO,SAAesE,EAAGuC,EAAGC,GAC1B,IAAI0K,EAAUhR,KAAKgR,QACfrJ,EAAO3H,KAAK2H,KACZuO,EAAalW,KAAKkW,WAClBhO,EAAYlI,KAAKkI,UACjBD,EAAYjI,KAAKiI,UACjBwD,EAASzL,KAAKyL,OAClB,IAAoB,IAAhBuF,EAAQlN,KAAc2H,EAAO/G,OAAQ,OAAQZ,EAAI,IAAM2H,EAAO/G,QAAU,GAC5E,IAAI7B,EAAIiB,EACJ8S,EAAKvS,EAAIgC,EAAIoF,EAAW,EAAJ3H,GAAQ,GAAKO,EAAIiC,EAAImF,EAAW,EAAJ3H,EAAQ,GAAI,GAC5D8P,EAAK5C,EAAQlN,GACbvD,EAAIqT,EAER,EAAG,CACD,IAAI9J,EAAI7B,EAAU1H,GACdsW,EAAKxS,EAAIgC,EAAIoF,EAAW,EAAJ3B,GAAQ,GAAKzF,EAAIiC,EAAImF,EAAW,EAAJ3B,EAAQ,GAAI,GAGhE,GAFI+M,EAAKD,IAAIA,EAAKC,EAAIhU,EAAIiH,GAEtB7B,EADJ1H,EAAIA,EAAI,GAAM,EAAIA,EAAI,EAAIA,EAAI,KACTuD,EAAG,MAIxB,IAAW,KAFXvD,EAAI2H,EAAU3H,IAEA,CAGZ,IAFAA,EAAIoH,GAAMuO,EAAWpS,GAAK,GAAK6D,EAAKjD,WAE1BoF,GACJzF,EAAIgC,EAAIoF,EAAW,EAAJlL,GAAQ,GAAK8D,EAAIiC,EAAImF,EAAW,EAAJlL,EAAQ,GAAI,GAAKqW,EAAI,OAAOrW,EAG7E,aAEKA,IAAMqT,GAEf,OAAO/Q,IAER,CACDxD,IAAK,SACLG,MAAO,SAAgBqR,GAMrB,IALA,IAAIC,EAAoB,MAAXD,EAAkBA,EAAU,IAAIlE,OAAStM,EAClDoL,EAASzL,KAAKyL,OACdvD,EAAYlI,KAAKkI,UACjBD,EAAYjI,KAAKiI,UAEZnE,EAAI,EAAGzC,EAAI6G,EAAUxD,OAAQZ,EAAIzC,IAAKyC,EAAG,CAChD,IAAI8D,EAAIM,EAAUpE,GAClB,KAAI8D,EAAI9D,GAAR,CACA,IAAImN,EAAoB,EAAfhJ,EAAUnE,GACfoN,EAAoB,EAAfjJ,EAAUL,GACnBiJ,EAAQiB,OAAOrG,EAAOwF,GAAKxF,EAAOwF,EAAK,IACvCJ,EAAQkB,OAAOtG,EAAOyF,GAAKzF,EAAOyF,EAAK,KAIzC,OADAlR,KAAK8W,WAAWjG,GACTC,GAAUA,EAAOtR,UAEzB,CACDH,IAAK,eACLG,MAAO,SAAsBqR,EAASxJ,QAC1BhH,IAANgH,GAAqBwJ,GAAqC,mBAAnBA,EAAQiB,SAAwBzK,EAAIwJ,EAASA,EAAU,MAClGxJ,EAAShH,MAALgH,EAAiB,GAAKA,EAI1B,IAHA,IAAIyJ,EAAoB,MAAXD,EAAkBA,EAAU,IAAIlE,OAAStM,EAClDoL,EAASzL,KAAKyL,OAET3H,EAAI,EAAGzC,EAAIoK,EAAO/G,OAAQZ,EAAIzC,EAAGyC,GAAK,EAAG,CAChD,IAAIuC,EAAIoF,EAAO3H,GACXwC,EAAImF,EAAO3H,EAAI,GACnB+M,EAAQiB,OAAOzL,EAAIgB,EAAGf,GACtBuK,EAAQkG,IAAI1Q,EAAGC,EAAGe,EAAG,EAAGoO,GAG1B,OAAO3E,GAAUA,EAAOtR,UAEzB,CACDH,IAAK,aACLG,MAAO,SAAoBqR,GACzB,IAAIC,EAAoB,MAAXD,EAAkBA,EAAU,IAAIlE,OAAStM,EAClDsH,EAAO3H,KAAK2H,KACZ8D,EAASzL,KAAKyL,OACd/K,EAAc,EAAViH,EAAK,GACTtG,EAAIsG,EAAKjD,OACbmM,EAAQiB,OAAOrG,EAAO/K,GAAI+K,EAAO/K,EAAI,IAErC,IAAK,IAAIoD,EAAI,EAAGA,EAAIzC,IAAKyC,EAAG,CAC1B,IAAIkT,EAAK,EAAIrP,EAAK7D,GAElB+M,EAAQkB,OAAOtG,EAAOuL,GAAKvL,EAAOuL,EAAK,IAIzC,OADAnG,EAAQmB,YACDlB,GAAUA,EAAOtR,UAEzB,CACDH,IAAK,cACLG,MAAO,WACL,IAAIgT,EAAU,IAAInF,EAElB,OADArN,KAAK8W,WAAWtE,GACTA,EAAQhT,UAEhB,CACDH,IAAK,iBACLG,MAAO,SAAwBsE,EAAG+M,GAChC,IAAIC,EAAoB,MAAXD,EAAkBA,EAAU,IAAIlE,OAAStM,EAClDoL,EAASzL,KAAKyL,OACdxD,EAAYjI,KAAKiI,UACjBzE,EAAyB,EAApByE,EAAUnE,GAAK,GACpBP,EAAwB,EAAnB0E,EAAUnE,EAAI,GACnBqM,EAAwB,EAAnBlI,EAAUnE,EAAI,GAKvB,OAJA+M,EAAQiB,OAAOrG,EAAOjI,GAAKiI,EAAOjI,EAAK,IACvCqN,EAAQkB,OAAOtG,EAAOlI,GAAKkI,EAAOlI,EAAK,IACvCsN,EAAQkB,OAAOtG,EAAO0E,GAAK1E,EAAO0E,EAAK,IACvCU,EAAQmB,YACDlB,GAAUA,EAAOtR,UAEzB,CACDH,IAAK,mBACLG,MAAoB,UAAyB,SAASyX,IACpD,IAAIhP,EAAWnE,EAAGzC,EAClB,OAAO,UAAyB,SAA2BmS,GACzD,OACE,OAAQA,EAAUpB,KAAOoB,EAAUvE,MACjC,KAAK,EACHhH,EAAYjI,KAAKiI,UACjBnE,EAAI,EAAGzC,EAAI4G,EAAUvD,OAAS,EAEhC,KAAK,EACH,KAAMZ,EAAIzC,GAAI,CACZmS,EAAUvE,KAAO,EACjB,MAIF,OADAuE,EAAUvE,KAAO,EACVjP,KAAKkX,gBAAgBpT,GAE9B,KAAK,IACDA,EACF0P,EAAUvE,KAAO,EACjB,MAEF,KAAK,EACL,IAAK,MACH,OAAOuE,EAAUjB,UAGtB0E,EAAkBjX,UAEtB,CACDX,IAAK,kBACLG,MAAO,SAAyBsE,GAC9B,IAAI0O,EAAU,IAAInF,EAElB,OADArN,KAAKmX,eAAerT,EAAG0O,GAChBA,EAAQhT,WAEf,CAAC,CACHH,IAAK,OACLG,MAAO,SAAciM,GACnB,IAAIjB,EAAKtK,UAAUwE,OAAS,QAAsBrE,IAAjBH,UAAU,GAAmBA,UAAU,GAAKyV,EACzElL,EAAKvK,UAAUwE,OAAS,QAAsBrE,IAAjBH,UAAU,GAAmBA,UAAU,GAAK0V,EACzEwB,EAAOlX,UAAUwE,OAAS,EAAIxE,UAAU,QAAKG,EACjD,OAAO,IAAI2V,EAAS,WAAYvK,EAAS4L,EAAU5L,EAAQjB,EAAIC,EAAI2M,GAAQ9V,aAAakN,KAAK+G,EAAa9J,EAAQjB,EAAIC,EAAI2M,SAIvHpB,EAjXmB,GAsX5B,SAASqB,EAAU5L,EAAQjB,EAAIC,EAAI2M,GAIjC,IAHA,IAAI/V,EAAIoK,EAAO/G,OACX4S,EAAQ,IAAIhW,aAAiB,EAAJD,GAEpByC,EAAI,EAAGA,EAAIzC,IAAKyC,EAAG,CAC1B,IAAIsG,EAAIqB,EAAO3H,GACfwT,EAAU,EAAJxT,GAAS0G,EAAG6D,KAAK+I,EAAMhN,EAAGtG,EAAG2H,GACnC6L,EAAU,EAAJxT,EAAQ,GAAK2G,EAAG4D,KAAK+I,EAAMhN,EAAGtG,EAAG2H,GAGzC,OAAO6L,EAGT,SAAS/B,EAAa9J,EAAQjB,EAAIC,EAAI2M,GACpC,IAAItT,EAAGoP,EAAWqE,EAAQnN,EAE1B,OAAO,UAAyB,SAAuBoN,GACrD,OACE,OAAQA,EAAUpF,KAAOoF,EAAUvI,MACjC,KAAK,EACHnL,EAAI,EACJoP,EAAY,EAA2BzH,GACvC+L,EAAUpF,KAAO,EAEjBc,EAAUtE,IAEZ,KAAK,EACH,IAAK2I,EAASrE,EAAU7R,KAAK3B,KAAM,CACjC8X,EAAUvI,KAAO,GACjB,MAKF,OAFA7E,EAAImN,EAAO/X,MACXgY,EAAUvI,KAAO,EACVzE,EAAG6D,KAAK+I,EAAMhN,EAAGtG,EAAG2H,GAE7B,KAAK,EAEH,OADA+L,EAAUvI,KAAO,GACVxE,EAAG4D,KAAK+I,EAAMhN,EAAGtG,EAAG2H,GAE7B,KAAK,KACD3H,EAEJ,KAAK,GACH0T,EAAUvI,KAAO,EACjB,MAEF,KAAK,GACHuI,EAAUvI,KAAO,GACjB,MAEF,KAAK,GACHuI,EAAUpF,KAAO,GACjBoF,EAAUhU,GAAKgU,EAAiB,MAAE,GAElCtE,EAAU3S,EAAEiX,EAAUhU,IAExB,KAAK,GAKH,OAJAgU,EAAUpF,KAAO,GAEjBc,EAAUzS,IAEH+W,EAAU9D,OAAO,IAE1B,KAAK,GACL,IAAK,MACH,OAAO8D,EAAUjF,UAGtB+C,EAAS,KAAM,CAAC,CAAC,EAAG,GAAI,GAAI,MCrdjC,IAGMmC,EACQ,SAACC,GAAD,MACV,SAASA,EAAMC,KAAf,cAAsCD,EAAME,QAA5C,KAFEH,EAGG,uDAGHI,EACI,GADJA,EAEE,GAFFA,EAGG,GAHHA,EAIC,GAGDC,EAAS,IAAMD,EAAaA,EAW5BE,GAA2B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClCC,EACHC,SAASC,eAAeH,GAA0BI,wBAChDH,MACHL,EACAA,EAEIS,GAAMC,QAAO,IAAIN,GACpBO,OAAO,OACPC,KAAK,SAAUX,EAASD,EAAaA,GACrCY,KAAK,QAASP,EAAQL,EAAcA,GACpCW,OAAO,KACPC,KAAK,YALI,aAKsBZ,EALtB,IAKqCA,EALrC,KAMTY,KAAK,QAAS,cAEjBH,EACGE,OAAO,QACPC,KAAK,QAAS,eACdA,KAAK,cAAe,UACpBA,KAAK,YAJR,aAIkCC,OAAOR,EAAQ,GAJjD,YAKGS,KAAKlB,GACLmB,MAAM,cAAe,QAExBC,GAAmB,SAAUP,EAAK,EAAG,IAErC,IAAMQ,GAAOjU,SAAImT,GAAM,SAACN,GAAD,OAAWA,EAAMC,QAClCoB,GAAOC,SAAIhB,GAAM,SAACN,GAAD,OAAWA,EAAMC,QAElCsB,GAAOpU,SAAImT,GAAM,SAACN,GAAD,OAAWA,EAAME,QAAU,OAC5CsB,GAAOF,SAAIhB,GAAM,SAACN,GAAD,OAAWA,EAAME,QAAU,OAE5CuB,GAASC,WAAcC,OAAO,CAACN,EAAMD,IAAOQ,MAAM,CAAC,EAAGpB,IACtDqB,GAASH,WACZC,OAAO,CAACJ,EAAO,IAAMC,EAAO,MAC5BI,MAAM,CAAC,EAAGxB,IAEP0B,GAAQC,SAAWN,GACtBO,YAAWC,SAAO,QAClBC,SA/CgB,IAgDbC,GAAQC,SAASP,GACpBG,YAAWC,SAAO,QAClBC,SAlDgB,IAoDnBtB,EACGE,OAAO,KACPC,KAAK,QAAS,UACdA,KAAK,YAHR,eAGoCC,OAAOZ,GAH3C,KAIGzJ,KAAKmL,GACLO,UAAU,QACVtB,KAAK,KAAM,UAEdH,EACGE,OAAO,KACPC,KAAK,QAAS,UACdpK,KAAKwL,GACLE,UAAU,QACVtB,KAAK,KAAM,UAEd,IAAMuB,GAAOC,WACV5T,GAAE,SAACqR,GAAD,OAAkByB,EAAOzB,EAAMC,SACjCxK,GAAG2K,GACHlH,IAAG,SAAC8G,GAAD,OAAkB6B,EAAO7B,EAAME,QAAU,QAEzCsC,GAAOC,WACV9T,GAAE,SAACM,GAAD,OAAOwS,EAAOxS,EAAEgR,SAClBrR,GAAE,SAACK,GAAD,OAAO4S,EAAO5S,EAAEiR,QAAU,QAE/BU,EACGE,OAAO,QACP4B,MAAMpC,GACNS,KAAK,QAAS,QACdA,KAAK,IAAKyB,GACVzB,KAAK,YAAa,cAErBH,EACGE,OAAO,YACPC,KAAK,KAAM,QACXD,OAAO,QACPC,KAAK,SAAUX,GACfW,KAAK,QAASP,GAEjBI,EACGE,OAAO,QACP4B,MAAMpC,GACNS,KAAK,QAAS,QACdA,KAAK,IAAKuB,GACVvB,KAAK,YAAa,cAErB,IAAM4B,EAAUrE,EAASxH,KACvBwJ,GACA,SAACN,GAAD,OAAWyB,EAAOzB,EAAMC,SACxB,SAACD,GAAD,OAAW6B,EAAO7B,EAAME,QAAU,QAClCyC,QAAQ,EACPxC,GACAA,EACDK,EAAQL,EACRC,EAASD,IAWXS,EACGyB,UAAU,UACV/B,KAAKA,GACLsC,QACA9B,OAAO,UACPC,KACC,aACA,SAACf,GAAD,mBACeyB,EAAOzB,EAAMC,MAD5B,IACqC4B,EAAO7B,EAAME,QAAU,KAD5D,OAGDa,KAAK,IAAK,OACVA,KACC,SACA,SAAC8B,EAAeC,GAAhB,qBAAsDA,KAEvD5B,MAAM,SAAU,4BAEnB,IAAM6B,EAAenC,EAAIE,OAAO,KAAKC,KAAK,QAAS,WAiBnD,OAfAgC,EACGV,UAAU,QACV/B,KAAKA,GACLsC,QACA9B,OAAO,QACPC,KAAK,KAAK,SAACf,EAAc8C,GAGxB,OAFA9C,EAAMpF,MAAQkI,EAEPH,EAAQ5H,WAAW+H,MAE3BE,GAAG,aArCY,SAACxQ,EAAavD,IAC9B4R,QAAO,UAAU5R,EAAE2L,OAASsG,MAAM,UAAW,YAqC5C8B,GAAG,cAlCa,SAACC,EAAsBjD,IACxCa,QAAO,UAAUb,EAAMpF,OAASsG,MAAM,UAAW,WAkChDJ,OAAO,SACPG,KAAKlB,GAED,CACLmD,cAAe,WACb,IAAMC,EAAeJ,EAAahC,KAAK,SAEjCqC,EAAWD,EAAaE,SAAS,gBACnCF,EAAaG,QAAQ,eAAgB,IAAIC,OACtCJ,EAFU,gBAIjBJ,EAAahC,KAAK,QAASqC,MAK3BjC,GAAqB,SACzB9Q,EACAuQ,EACA4C,EACAC,GAEA,IACMC,EADO9C,EAAIE,OAAO,QAErBA,OAAO,UACPC,KAAK,SAAU,QACfA,KAAK,KAHO,eAGc1Q,GAC1B0Q,KAAK,QAAS,QACdA,KAAK,IAAK,SACVA,KAAK,IAAK,SAEb2C,EACG5C,OAAO,kBACPC,KAAK,KAAM,eACXA,KAAK,eAAgByC,GAExBE,EAAO5C,OAAO,YAAYC,KAAK,KAAM,GAAGA,KAAK,KAAM,GACnD2C,EACG5C,OAAO,uBACPA,OAAO,WACPC,KAAK,QAAS0C,GACd1C,KAAK,OAAQ,UAEhB,IAAM4C,EAAUD,EAAO5C,OAAO,WAE9B6C,EAAQ7C,OAAO,eAEf6C,EAAQ7C,OAAO,eAAeC,KAAK,KAAM,kBAsB3C,GAnBU,mCAAG,yGAtNV6C,SAAOC,kCAsNG,OACLvD,EADK,OAEM,QAFN,EAIeD,GAAY,CACpCC,OACAC,SAJe,UAET2C,EAJG,EAIHA,cAKNzC,SAASC,eAAe,kBAAkCoD,iBAC1D,SACA,SAACjb,GACCA,EAAEkb,iBAEFb,OAdO,2CAAH,qDC1NV,GAXa,SAAC,GAAD,IAAkBc,EAAlB,EAAGC,YAAeD,SAAlB,OACX,gBAAC,IAAD,CAAMA,SAAUA,EAAUE,KAAMA,IAC9B,4BACE,0BAAQC,UAAU,eAAe9T,GAAG,iBAAiB+T,KAAK,UAA1D,mBAIF,uBAAK/T,GAAG","file":"component---src-pages-d-3-js-area-tsx-f89a22e73a49b5b3a4b4.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export var epsilon = 1.1102230246251565e-16;\nexport var splitter = 134217729;\nexport var resulterrbound = (3 + 8 * epsilon) * epsilon; // fast_expansion_sum_zeroelim routine from oritinal code\n\nexport function sum(elen, e, flen, f, h) {\n  var Q, Qnew, hh, bvirt;\n  var enow = e[0];\n  var fnow = f[0];\n  var eindex = 0;\n  var findex = 0;\n\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n\n  var hindex = 0;\n\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n\n      Q = Qnew;\n\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n\n  return hindex;\n}\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n} // scale_expansion_zeroelim routine from oritinal code\n\nexport function scale(elen, e, b, h) {\n  var Q, sum, hh, product1, product0;\n  var bvirt, c, ahi, alo, bhi, blo;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  var enow = e[0];\n  Q = enow * b;\n  c = splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  var hindex = 0;\n\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n\n  for (var i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n\n  return hindex;\n}\nexport function negate(elen, e) {\n  for (var i = 0; i < elen; i++) {\n    e[i] = -e[i];\n  }\n\n  return elen;\n}\nexport function estimate(elen, e) {\n  var Q = e[0];\n\n  for (var i = 1; i < elen; i++) {\n    Q += e[i];\n  }\n\n  return Q;\n}\nexport function vec(n) {\n  return new Float64Array(n);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum } from './util.js';\nvar ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nvar ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nvar ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\nvar B = vec(4);\nvar C1 = vec(8);\nvar C2 = vec(12);\nvar D = vec(16);\nvar u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n  var acxtail, acytail, bcxtail, bcytail;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  var acx = ax - cx;\n  var bcx = bx - cx;\n  var acy = ay - cy;\n  var bcy = by - cy;\n  s1 = acx * bcy;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcx;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  B[3] = u3;\n  var det = estimate(4, B);\n  var errbound = ccwerrboundB * detsum;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - acx;\n  acxtail = ax - (acx + bvirt) + (bvirt - cx);\n  bvirt = bx - bcx;\n  bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n  bvirt = ay - acy;\n  acytail = ay - (acy + bvirt) + (bvirt - cy);\n  bvirt = by - bcy;\n  bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n  if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n    return det;\n  }\n\n  errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n  det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n  if (det >= errbound || -det >= errbound) return det;\n  s1 = acxtail * bcy;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcx;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var C1len = sum(4, B, 4, u, C1);\n  s1 = acx * bcytail;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcxtail;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var C2len = sum(C1len, C1, 4, u, C2);\n  s1 = acxtail * bcytail;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcxtail;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var Dlen = sum(C2len, C2, 4, u, D);\n  return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n  var detleft = (ay - cy) * (bx - cx);\n  var detright = (ax - cx) * (by - cy);\n  var det = detleft - detright;\n  if (detleft === 0 || detright === 0 || detleft > 0 !== detright > 0) return det;\n  var detsum = Math.abs(detleft + detright);\n  if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n  return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n  return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, scale } from './util.js';\nvar o3derrboundA = (7 + 56 * epsilon) * epsilon;\nvar o3derrboundB = (3 + 28 * epsilon) * epsilon;\nvar o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\nvar bc = vec(4);\nvar ca = vec(4);\nvar ab = vec(4);\nvar at_b = vec(4);\nvar at_c = vec(4);\nvar bt_c = vec(4);\nvar bt_a = vec(4);\nvar ct_a = vec(4);\nvar ct_b = vec(4);\nvar bct = vec(8);\nvar cat = vec(8);\nvar abt = vec(8);\nvar u = vec(4);\n\nvar _8 = vec(8);\n\nvar _8b = vec(8);\n\nvar _16 = vec(8);\n\nvar _12 = vec(12);\n\nvar fin = vec(192);\nvar fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n  finlen = sum(finlen, fin, alen, a, fin2);\n  var tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n\n  s1 = a * b;\n  c = splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  u[2] = _k - (u3 - _j);\n  u[3] = u3;\n  finlen = finadd(finlen, 4, u);\n\n  if (z !== 0) {\n    c = splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n  }\n\n  return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  var finlen;\n  var adxtail, bdxtail, cdxtail;\n  var adytail, bdytail, cdytail;\n  var adztail, bdztail, cdztail;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var adz = az - dz;\n  var bdz = bz - dz;\n  var cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(scale(4, bc, adz, _8), _8, scale(4, ca, bdz, _8b), _8b, _16), _16, scale(4, ab, cdz, _8), _8, fin);\n  var det = estimate(finlen, fin);\n  var errbound = o3derrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n\n  errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  var at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  var bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  var ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  var bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n  var catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n  var abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n  if (adztail !== 0) {\n    finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n  }\n\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n  }\n\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n  }\n\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n\n  return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var adz = az - dz;\n  var bdz = bz - dz;\n  var cdz = cz - dz;\n  var bdxcdy = bdx * cdy;\n  var cdxbdy = cdx * bdy;\n  var cdxady = cdx * ady;\n  var adxcdy = adx * cdy;\n  var adxbdy = adx * bdy;\n  var bdxady = bdx * ady;\n  var det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  var errbound = o3derrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var adz = az - dz;\n  var bdz = bz - dz;\n  var cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale } from './util.js';\nvar iccerrboundA = (10 + 96 * epsilon) * epsilon;\nvar iccerrboundB = (4 + 48 * epsilon) * epsilon;\nvar iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\nvar bc = vec(4);\nvar ca = vec(4);\nvar ab = vec(4);\nvar aa = vec(4);\nvar bb = vec(4);\nvar cc = vec(4);\nvar u = vec(4);\nvar v = vec(4);\nvar axtbc = vec(8);\nvar aytbc = vec(8);\nvar bxtca = vec(8);\nvar bytca = vec(8);\nvar cxtab = vec(8);\nvar cytab = vec(8);\nvar abt = vec(8);\nvar bct = vec(8);\nvar cat = vec(8);\nvar abtt = vec(4);\nvar bctt = vec(4);\nvar catt = vec(4);\n\nvar _8 = vec(8);\n\nvar _16 = vec(16);\n\nvar _16b = vec(16);\n\nvar _16c = vec(16);\n\nvar _32 = vec(32);\n\nvar _32b = vec(32);\n\nvar _48 = vec(48);\n\nvar _64 = vec(64);\n\nvar fin = vec(1152);\nvar fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n  finlen = sum(finlen, fin, a, alen, fin2);\n  var tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  var finlen;\n  var adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  var axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  var abtlen, bctlen, catlen;\n  var abttlen, bcttlen, cattlen;\n  var n1, n0;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(sum(scale(scale(4, bc, adx, _8), _8, adx, _16), _16, scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, sum(scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16, scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, sum(scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16, scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n  var det = estimate(finlen, fin);\n  var errbound = iccerrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n\n  errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n\n  if (adxtail !== 0) {\n    axtbclen = scale(4, bc, adxtail, axtbc);\n    finlen = finadd(finlen, sum_three(scale(axtbclen, axtbc, 2 * adx, _16), _16, scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b, scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n\n  if (adytail !== 0) {\n    aytbclen = scale(4, bc, adytail, aytbc);\n    finlen = finadd(finlen, sum_three(scale(aytbclen, aytbc, 2 * ady, _16), _16, scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b, scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (bdxtail !== 0) {\n    bxtcalen = scale(4, ca, bdxtail, bxtca);\n    finlen = finadd(finlen, sum_three(scale(bxtcalen, bxtca, 2 * bdx, _16), _16, scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n  }\n\n  if (bdytail !== 0) {\n    bytcalen = scale(4, ca, bdytail, bytca);\n    finlen = finadd(finlen, sum_three(scale(bytcalen, bytca, 2 * bdy, _16), _16, scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b, scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (cdxtail !== 0) {\n    cxtablen = scale(4, ab, cdxtail, cxtab);\n    finlen = finadd(finlen, sum_three(scale(cxtablen, cxtab, 2 * cdx, _16), _16, scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b, scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n\n  if (cdytail !== 0) {\n    cytablen = scale(4, ab, cdytail, cytab);\n    finlen = finadd(finlen, sum_three(scale(cytablen, cytab, 2 * cdy, _16), _16, scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b, scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = sum(4, u, 4, v, bct);\n      s1 = bdxtail * cdytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n\n    if (adxtail !== 0) {\n      var len = scale(bctlen, bct, adxtail, _16c);\n      finlen = finadd(finlen, sum(scale(axtbclen, axtbc, adxtail, _16), _16, scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n      var len2 = scale(bcttlen, bctt, adxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * adx, _16), _16, scale(len2, _8, adxtail, _16b), _16b, scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n      }\n\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n      }\n    }\n\n    if (adytail !== 0) {\n      var _len = scale(bctlen, bct, adytail, _16c);\n\n      finlen = finadd(finlen, sum(scale(aytbclen, aytbc, adytail, _16), _16, scale(_len, _16c, 2 * ady, _32), _32, _48), _48);\n\n      var _len2 = scale(bcttlen, bctt, adytail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len2, _8, 2 * ady, _16), _16, scale(_len2, _8, adytail, _16b), _16b, scale(_len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = sum(4, u, 4, v, cat);\n      s1 = cdxtail * adytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n\n    if (bdxtail !== 0) {\n      var _len3 = scale(catlen, cat, bdxtail, _16c);\n\n      finlen = finadd(finlen, sum(scale(bxtcalen, bxtca, bdxtail, _16), _16, scale(_len3, _16c, 2 * bdx, _32), _32, _48), _48);\n\n      var _len4 = scale(cattlen, catt, bdxtail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len4, _8, 2 * bdx, _16), _16, scale(_len4, _8, bdxtail, _16b), _16b, scale(_len3, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n      }\n\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n      }\n    }\n\n    if (bdytail !== 0) {\n      var _len5 = scale(catlen, cat, bdytail, _16c);\n\n      finlen = finadd(finlen, sum(scale(bytcalen, bytca, bdytail, _16), _16, scale(_len5, _16c, 2 * bdy, _32), _32, _48), _48);\n\n      var _len6 = scale(cattlen, catt, bdytail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len6, _8, 2 * bdy, _16), _16, scale(_len6, _8, bdytail, _16b), _16b, scale(_len5, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = sum(4, u, 4, v, abt);\n      s1 = adxtail * bdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n\n    if (cdxtail !== 0) {\n      var _len7 = scale(abtlen, abt, cdxtail, _16c);\n\n      finlen = finadd(finlen, sum(scale(cxtablen, cxtab, cdxtail, _16), _16, scale(_len7, _16c, 2 * cdx, _32), _32, _48), _48);\n\n      var _len8 = scale(abttlen, abtt, cdxtail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len8, _8, 2 * cdx, _16), _16, scale(_len8, _8, cdxtail, _16b), _16b, scale(_len7, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n      }\n\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n      }\n    }\n\n    if (cdytail !== 0) {\n      var _len9 = scale(abtlen, abt, cdytail, _16c);\n\n      finlen = finadd(finlen, sum(scale(cytablen, cytab, cdytail, _16), _16, scale(_len9, _16c, 2 * cdy, _32), _32, _48), _48);\n\n      var _len10 = scale(abttlen, abtt, cdytail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len10, _8, 2 * cdy, _16), _16, scale(_len10, _8, cdytail, _16b), _16b, scale(_len9, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var bdxcdy = bdx * cdy;\n  var cdxbdy = cdx * bdy;\n  var alift = adx * adx + ady * ady;\n  var cdxady = cdx * ady;\n  var adxcdy = adx * cdy;\n  var blift = bdx * bdx + bdy * bdy;\n  var adxbdy = adx * bdy;\n  var bdxady = bdx * ady;\n  var clift = cdx * cdx + cdy * cdy;\n  var det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  var errbound = iccerrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  var adx = ax - dx;\n  var ady = ay - dy;\n  var bdx = bx - dx;\n  var bdy = by - dy;\n  var cdx = cx - dx;\n  var cdy = cy - dy;\n  var abdet = adx * bdy - bdx * ady;\n  var bcdet = bdx * cdy - cdx * bdy;\n  var cadet = cdx * ady - adx * cdy;\n  var alift = adx * adx + ady * ady;\n  var blift = bdx * bdx + bdy * bdy;\n  var clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate } from './util.js';\nvar isperrboundA = (16 + 224 * epsilon) * epsilon;\nvar isperrboundB = (5 + 72 * epsilon) * epsilon;\nvar isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\nvar ab = vec(4);\nvar bc = vec(4);\nvar cd = vec(4);\nvar de = vec(4);\nvar ea = vec(4);\nvar ac = vec(4);\nvar bd = vec(4);\nvar ce = vec(4);\nvar da = vec(4);\nvar eb = vec(4);\nvar abc = vec(24);\nvar bcd = vec(24);\nvar cde = vec(24);\nvar dea = vec(24);\nvar eab = vec(24);\nvar abd = vec(24);\nvar bce = vec(24);\nvar cda = vec(24);\nvar deb = vec(24);\nvar eac = vec(24);\nvar adet = vec(1152);\nvar bdet = vec(1152);\nvar cdet = vec(1152);\nvar ddet = vec(1152);\nvar edet = vec(1152);\nvar abdet = vec(2304);\nvar cddet = vec(2304);\nvar cdedet = vec(3456);\nvar deter = vec(5760);\n\nvar _8 = vec(8);\n\nvar _8b = vec(8);\n\nvar _8c = vec(8);\n\nvar _16 = vec(16);\n\nvar _24 = vec(24);\n\nvar _48 = vec(48);\n\nvar _48b = vec(48);\n\nvar _96 = vec(96);\n\nvar _192 = vec(192);\n\nvar _384x = vec(384);\n\nvar _384y = vec(384);\n\nvar _384z = vec(384);\n\nvar _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n  return sum_three(scale(4, a, az, _8), _8, scale(4, b, bz, _8b), _8b, scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n  var len = sum(sum(alen, a, blen, b, _48), _48, negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n  return sum_three(scale(scale(len, _96, x, _192), _192, x, _384x), _384x, scale(scale(len, _96, y, _192), _192, y, _384y), _384y, scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  s1 = ax * by;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ay;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  s1 = bx * cy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * by;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cx * dy;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * cy;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  cd[3] = u3;\n  s1 = dx * ey;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * dy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  de[3] = u3;\n  s1 = ex * ay;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * ey;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ea[3] = u3;\n  s1 = ax * cy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * ay;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ac[3] = u3;\n  s1 = bx * dy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * by;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bd[3] = u3;\n  s1 = cx * ey;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * cy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ce[3] = u3;\n  s1 = dx * ay;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * dy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  da[3] = u3;\n  s1 = ex * by;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ey;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  eb[3] = u3;\n  var abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n  var bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n  var cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n  var dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n  var eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n  var abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n  var bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n  var cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n  var deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n  var eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n  var deterlen = sum_three(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, sum_three(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n  return deter[deterlen - 1];\n}\n\nvar xdet = vec(96);\nvar ydet = vec(96);\nvar zdet = vec(96);\nvar fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n  var len = sum_three_scale(a, b, c, az, bz, cz, _24);\n  return sum_three(scale(scale(len, _24, x, _48), _48, x, xdet), xdet, scale(scale(len, _24, y, _48), _48, y, ydet), ydet, scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n  var ab3, bc3, cd3, da3, ac3, bd3;\n  var aextail, bextail, cextail, dextail;\n  var aeytail, beytail, ceytail, deytail;\n  var aeztail, beztail, ceztail, deztail;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n  var aex = ax - ex;\n  var bex = bx - ex;\n  var cex = cx - ex;\n  var dex = dx - ex;\n  var aey = ay - ey;\n  var bey = by - ey;\n  var cey = cy - ey;\n  var dey = dy - ey;\n  var aez = az - ez;\n  var bez = bz - ez;\n  var cez = cz - ez;\n  var dez = dz - ez;\n  s1 = aex * bey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bex * aey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ab3 = _j + _i;\n  bvirt = ab3 - _j;\n  ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n  ab[3] = ab3;\n  s1 = bex * cey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * bey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bc3 = _j + _i;\n  bvirt = bc3 - _j;\n  bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n  bc[3] = bc3;\n  s1 = cex * dey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * cey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  cd3 = _j + _i;\n  bvirt = cd3 - _j;\n  cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n  cd[3] = cd3;\n  s1 = dex * aey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = aex * dey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  da3 = _j + _i;\n  bvirt = da3 - _j;\n  da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n  da[3] = da3;\n  s1 = aex * cey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * aey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ac3 = _j + _i;\n  bvirt = ac3 - _j;\n  ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n  ac[3] = ac3;\n  s1 = bex * dey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * bey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bd3 = _j + _i;\n  bvirt = bd3 - _j;\n  bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n  bd[3] = bd3;\n  var finlen = sum(sum(negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, sum(negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n  var det = estimate(finlen, fin);\n  var errbound = isperrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - aex;\n  aextail = ax - (aex + bvirt) + (bvirt - ex);\n  bvirt = ay - aey;\n  aeytail = ay - (aey + bvirt) + (bvirt - ey);\n  bvirt = az - aez;\n  aeztail = az - (aez + bvirt) + (bvirt - ez);\n  bvirt = bx - bex;\n  bextail = bx - (bex + bvirt) + (bvirt - ex);\n  bvirt = by - bey;\n  beytail = by - (bey + bvirt) + (bvirt - ey);\n  bvirt = bz - bez;\n  beztail = bz - (bez + bvirt) + (bvirt - ez);\n  bvirt = cx - cex;\n  cextail = cx - (cex + bvirt) + (bvirt - ex);\n  bvirt = cy - cey;\n  ceytail = cy - (cey + bvirt) + (bvirt - ey);\n  bvirt = cz - cez;\n  ceztail = cz - (cez + bvirt) + (bvirt - ez);\n  bvirt = dx - dex;\n  dextail = dx - (dex + bvirt) + (bvirt - ex);\n  bvirt = dy - dey;\n  deytail = dy - (dey + bvirt) + (bvirt - ey);\n  bvirt = dz - dez;\n  deztail = dz - (dez + bvirt) + (bvirt - ez);\n\n  if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) {\n    return det;\n  }\n\n  errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n  var abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);\n  var bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);\n  var cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);\n  var daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);\n  var aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);\n  var bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);\n  det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  var aex = ax - ex;\n  var bex = bx - ex;\n  var cex = cx - ex;\n  var dex = dx - ex;\n  var aey = ay - ey;\n  var bey = by - ey;\n  var cey = cy - ey;\n  var dey = dy - ey;\n  var aez = az - ez;\n  var bez = bz - ez;\n  var cez = cz - ez;\n  var dez = dz - ez;\n  var aexbey = aex * bey;\n  var bexaey = bex * aey;\n  var ab = aexbey - bexaey;\n  var bexcey = bex * cey;\n  var cexbey = cex * bey;\n  var bc = bexcey - cexbey;\n  var cexdey = cex * dey;\n  var dexcey = dex * cey;\n  var cd = cexdey - dexcey;\n  var dexaey = dex * aey;\n  var aexdey = aex * dey;\n  var da = dexaey - aexdey;\n  var aexcey = aex * cey;\n  var cexaey = cex * aey;\n  var ac = aexcey - cexaey;\n  var bexdey = bex * dey;\n  var dexbey = dex * bey;\n  var bd = bexdey - dexbey;\n  var abc = aez * bc - bez * ac + cez * ab;\n  var bcd = bez * cd - cez * bd + dez * bc;\n  var cda = cez * da + dez * ac + aez * cd;\n  var dab = dez * ab + aez * bd + bez * da;\n  var alift = aex * aex + aey * aey + aez * aez;\n  var blift = bex * bex + bey * bey + bez * bez;\n  var clift = cex * cex + cey * cey + cez * cez;\n  var dlift = dex * dex + dey * dey + dez * dez;\n  var det = clift * dab - dlift * abc + (alift * bcd - blift * cda);\n  var aezplus = Math.abs(aez);\n  var bezplus = Math.abs(bez);\n  var cezplus = Math.abs(cez);\n  var dezplus = Math.abs(dez);\n  var aexbeyplus = Math.abs(aexbey);\n  var bexaeyplus = Math.abs(bexaey);\n  var bexceyplus = Math.abs(bexcey);\n  var cexbeyplus = Math.abs(cexbey);\n  var cexdeyplus = Math.abs(cexdey);\n  var dexceyplus = Math.abs(dexcey);\n  var dexaeyplus = Math.abs(dexaey);\n  var aexdeyplus = Math.abs(aexdey);\n  var aexceyplus = Math.abs(aexcey);\n  var cexaeyplus = Math.abs(cexaey);\n  var bexdeyplus = Math.abs(bexdey);\n  var dexbeyplus = Math.abs(dexbey);\n  var permanent = ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift + ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift + ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift + ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n  var errbound = isperrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n  var aex = pax - pex;\n  var bex = pbx - pex;\n  var cex = pcx - pex;\n  var dex = pdx - pex;\n  var aey = pay - pey;\n  var bey = pby - pey;\n  var cey = pcy - pey;\n  var dey = pdy - pey;\n  var aez = paz - pez;\n  var bez = pbz - pez;\n  var cez = pcz - pez;\n  var dez = pdz - pez;\n  var ab = aex * bey - bex * aey;\n  var bc = bex * cey - cex * bey;\n  var cd = cex * dey - dex * cey;\n  var da = dex * aey - aex * dey;\n  var ac = aex * cey - cex * aey;\n  var bd = bex * dey - dex * bey;\n  var abc = aez * bc - bez * ac + cez * ab;\n  var bcd = bez * cd - cez * bd + dez * bc;\n  var cda = cez * da + dez * ac + aez * cd;\n  var dab = dez * ab + aez * bd + bez * da;\n  var alift = aex * aex + aey * aey + aez * aez;\n  var blift = bex * bex + bey * bey + bez * bez;\n  var clift = cex * cex + cey * cey + cez * cez;\n  var dlift = dex * dex + dey * dey + dez * dez;\n  return clift * dab - dlift * abc + (alift * bcd - blift * cda);\n}","import _classCallCheck from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar EPSILON = Math.pow(2, -52);\nvar EDGE_STACK = new Uint32Array(512);\nimport { orient2d } from 'robust-predicates';\n\nvar Delaunator = /*#__PURE__*/function () {\n  function Delaunator(coords) {\n    _classCallCheck(this, Delaunator);\n\n    var n = coords.length >> 1;\n    if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n    this.coords = coords; // arrays that will store the triangulation graph\n\n    var maxTriangles = Math.max(2 * n - 5, 0);\n    this._triangles = new Uint32Array(maxTriangles * 3);\n    this._halfedges = new Int32Array(maxTriangles * 3); // temporary arrays for tracking the edges of the advancing convex hull\n\n    this._hashSize = Math.ceil(Math.sqrt(n));\n    this._hullPrev = new Uint32Array(n); // edge to prev edge\n\n    this._hullNext = new Uint32Array(n); // edge to next edge\n\n    this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n\n    this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n    // temporary arrays for sorting points\n\n    this._ids = new Uint32Array(n);\n    this._dists = new Float64Array(n);\n    this.update();\n  }\n\n  _createClass(Delaunator, [{\n    key: \"update\",\n    value: function update() {\n      var coords = this.coords,\n          hullPrev = this._hullPrev,\n          hullNext = this._hullNext,\n          hullTri = this._hullTri,\n          hullHash = this._hullHash;\n      var n = coords.length >> 1; // populate an array of point indices; calculate input data bbox\n\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < n; i++) {\n        var x = coords[2 * i];\n        var y = coords[2 * i + 1];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        this._ids[i] = i;\n      }\n\n      var cx = (minX + maxX) / 2;\n      var cy = (minY + maxY) / 2;\n      var minDist = Infinity;\n      var i0, i1, i2; // pick a seed point close to the center\n\n      for (var _i = 0; _i < n; _i++) {\n        var d = dist(cx, cy, coords[2 * _i], coords[2 * _i + 1]);\n\n        if (d < minDist) {\n          i0 = _i;\n          minDist = d;\n        }\n      }\n\n      var i0x = coords[2 * i0];\n      var i0y = coords[2 * i0 + 1];\n      minDist = Infinity; // find the point closest to the seed\n\n      for (var _i2 = 0; _i2 < n; _i2++) {\n        if (_i2 === i0) continue;\n\n        var _d = dist(i0x, i0y, coords[2 * _i2], coords[2 * _i2 + 1]);\n\n        if (_d < minDist && _d > 0) {\n          i1 = _i2;\n          minDist = _d;\n        }\n      }\n\n      var i1x = coords[2 * i1];\n      var i1y = coords[2 * i1 + 1];\n      var minRadius = Infinity; // find the third point which forms the smallest circumcircle with the first two\n\n      for (var _i3 = 0; _i3 < n; _i3++) {\n        if (_i3 === i0 || _i3 === i1) continue;\n        var r = circumradius(i0x, i0y, i1x, i1y, coords[2 * _i3], coords[2 * _i3 + 1]);\n\n        if (r < minRadius) {\n          i2 = _i3;\n          minRadius = r;\n        }\n      }\n\n      var i2x = coords[2 * i2];\n      var i2y = coords[2 * i2 + 1];\n\n      if (minRadius === Infinity) {\n        // order collinear points by dx (or dy if all x are identical)\n        // and return the list as a hull\n        for (var _i4 = 0; _i4 < n; _i4++) {\n          this._dists[_i4] = coords[2 * _i4] - coords[0] || coords[2 * _i4 + 1] - coords[1];\n        }\n\n        quicksort(this._ids, this._dists, 0, n - 1);\n        var hull = new Uint32Array(n);\n        var j = 0;\n\n        for (var _i5 = 0, d0 = -Infinity; _i5 < n; _i5++) {\n          var id = this._ids[_i5];\n\n          if (this._dists[id] > d0) {\n            hull[j++] = id;\n            d0 = this._dists[id];\n          }\n        }\n\n        this.hull = hull.subarray(0, j);\n        this.triangles = new Uint32Array(0);\n        this.halfedges = new Uint32Array(0);\n        return;\n      } // swap the order of the seed points for counter-clockwise orientation\n\n\n      if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n        var _i6 = i1;\n        var _x = i1x;\n        var _y = i1y;\n        i1 = i2;\n        i1x = i2x;\n        i1y = i2y;\n        i2 = _i6;\n        i2x = _x;\n        i2y = _y;\n      }\n\n      var center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n      this._cx = center.x;\n      this._cy = center.y;\n\n      for (var _i7 = 0; _i7 < n; _i7++) {\n        this._dists[_i7] = dist(coords[2 * _i7], coords[2 * _i7 + 1], center.x, center.y);\n      } // sort the points by distance from the seed triangle circumcenter\n\n\n      quicksort(this._ids, this._dists, 0, n - 1); // set up the seed triangle as the starting hull\n\n      this._hullStart = i0;\n      var hullSize = 3;\n      hullNext[i0] = hullPrev[i2] = i1;\n      hullNext[i1] = hullPrev[i0] = i2;\n      hullNext[i2] = hullPrev[i1] = i0;\n      hullTri[i0] = 0;\n      hullTri[i1] = 1;\n      hullTri[i2] = 2;\n      hullHash.fill(-1);\n      hullHash[this._hashKey(i0x, i0y)] = i0;\n      hullHash[this._hashKey(i1x, i1y)] = i1;\n      hullHash[this._hashKey(i2x, i2y)] = i2;\n      this.trianglesLen = 0;\n\n      this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n      for (var k = 0, xp, yp; k < this._ids.length; k++) {\n        var _i8 = this._ids[k];\n        var _x2 = coords[2 * _i8];\n        var _y2 = coords[2 * _i8 + 1]; // skip near-duplicate points\n\n        if (k > 0 && Math.abs(_x2 - xp) <= EPSILON && Math.abs(_y2 - yp) <= EPSILON) continue;\n        xp = _x2;\n        yp = _y2; // skip seed triangle points\n\n        if (_i8 === i0 || _i8 === i1 || _i8 === i2) continue; // find a visible edge on the convex hull using edge hash\n\n        var start = 0;\n\n        for (var _j = 0, key = this._hashKey(_x2, _y2); _j < this._hashSize; _j++) {\n          start = hullHash[(key + _j) % this._hashSize];\n          if (start !== -1 && start !== hullNext[start]) break;\n        }\n\n        start = hullPrev[start];\n        var e = start,\n            q = void 0;\n\n        while (q = hullNext[e], orient2d(_x2, _y2, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n          e = q;\n\n          if (e === start) {\n            e = -1;\n            break;\n          }\n        }\n\n        if (e === -1) continue; // likely a near-duplicate point; skip it\n        // add the first triangle from the point\n\n        var t = this._addTriangle(e, _i8, hullNext[e], -1, -1, hullTri[e]); // recursively flip triangles from the point until they satisfy the Delaunay condition\n\n\n        hullTri[_i8] = this._legalize(t + 2);\n        hullTri[e] = t; // keep track of boundary triangles on the hull\n\n        hullSize++; // walk forward through the hull, adding more triangles and flipping recursively\n\n        var _n = hullNext[e];\n\n        while (q = hullNext[_n], orient2d(_x2, _y2, coords[2 * _n], coords[2 * _n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n          t = this._addTriangle(_n, _i8, q, hullTri[_i8], -1, hullTri[_n]);\n          hullTri[_i8] = this._legalize(t + 2);\n          hullNext[_n] = _n; // mark as removed\n\n          hullSize--;\n          _n = q;\n        } // walk backward from the other side, adding more triangles and flipping\n\n\n        if (e === start) {\n          while (q = hullPrev[e], orient2d(_x2, _y2, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n            t = this._addTriangle(q, _i8, e, -1, hullTri[e], hullTri[q]);\n\n            this._legalize(t + 2);\n\n            hullTri[q] = t;\n            hullNext[e] = e; // mark as removed\n\n            hullSize--;\n            e = q;\n          }\n        } // update the hull indices\n\n\n        this._hullStart = hullPrev[_i8] = e;\n        hullNext[e] = hullPrev[_n] = _i8;\n        hullNext[_i8] = _n; // save the two new edges in the hash table\n\n        hullHash[this._hashKey(_x2, _y2)] = _i8;\n        hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n      }\n\n      this.hull = new Uint32Array(hullSize);\n\n      for (var _i9 = 0, _e = this._hullStart; _i9 < hullSize; _i9++) {\n        this.hull[_i9] = _e;\n        _e = hullNext[_e];\n      } // trim typed triangle mesh arrays\n\n\n      this.triangles = this._triangles.subarray(0, this.trianglesLen);\n      this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n  }, {\n    key: \"_hashKey\",\n    value: function _hashKey(x, y) {\n      return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n  }, {\n    key: \"_legalize\",\n    value: function _legalize(a) {\n      var triangles = this._triangles,\n          halfedges = this._halfedges,\n          coords = this.coords;\n      var i = 0;\n      var ar = 0; // recursion eliminated with a fixed-size stack\n\n      while (true) {\n        var b = halfedges[a];\n        /* if the pair of triangles doesn't satisfy the Delaunay condition\n         * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n         * then do the same check/flip recursively for the new pair of triangles\n         *\n         *           pl                    pl\n         *          /||\\                  /  \\\n         *       al/ || \\bl            al/    \\a\n         *        /  ||  \\              /      \\\n         *       /  a||b  \\    flip    /___ar___\\\n         *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n         *        \\  ||  /              \\      /\n         *       ar\\ || /br             b\\    /br\n         *          \\||/                  \\  /\n         *           pr                    pr\n         */\n\n        var a0 = a - a % 3;\n        ar = a0 + (a + 2) % 3;\n\n        if (b === -1) {\n          // convex hull edge\n          if (i === 0) break;\n          a = EDGE_STACK[--i];\n          continue;\n        }\n\n        var b0 = b - b % 3;\n        var al = a0 + (a + 1) % 3;\n        var bl = b0 + (b + 2) % 3;\n        var p0 = triangles[ar];\n        var pr = triangles[a];\n        var pl = triangles[al];\n        var p1 = triangles[bl];\n        var illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);\n\n        if (illegal) {\n          triangles[a] = p1;\n          triangles[b] = p0;\n          var hbl = halfedges[bl]; // edge swapped on the other side of the hull (rare); fix the halfedge reference\n\n          if (hbl === -1) {\n            var e = this._hullStart;\n\n            do {\n              if (this._hullTri[e] === bl) {\n                this._hullTri[e] = a;\n                break;\n              }\n\n              e = this._hullPrev[e];\n            } while (e !== this._hullStart);\n          }\n\n          this._link(a, hbl);\n\n          this._link(b, halfedges[ar]);\n\n          this._link(ar, bl);\n\n          var br = b0 + (b + 1) % 3; // don't worry about hitting the cap: it can only happen on extremely degenerate input\n\n          if (i < EDGE_STACK.length) {\n            EDGE_STACK[i++] = br;\n          }\n        } else {\n          if (i === 0) break;\n          a = EDGE_STACK[--i];\n        }\n      }\n\n      return ar;\n    }\n  }, {\n    key: \"_link\",\n    value: function _link(a, b) {\n      this._halfedges[a] = b;\n      if (b !== -1) this._halfedges[b] = a;\n    } // add a new triangle given vertex indices and adjacent half-edge ids\n\n  }, {\n    key: \"_addTriangle\",\n    value: function _addTriangle(i0, i1, i2, a, b, c) {\n      var t = this.trianglesLen;\n      this._triangles[t] = i0;\n      this._triangles[t + 1] = i1;\n      this._triangles[t + 2] = i2;\n\n      this._link(t, a);\n\n      this._link(t + 1, b);\n\n      this._link(t + 2, c);\n\n      this.trianglesLen += 3;\n      return t;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(points) {\n      var getX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetX;\n      var getY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetY;\n      var n = points.length;\n      var coords = new Float64Array(n * 2);\n\n      for (var i = 0; i < n; i++) {\n        var p = points[i];\n        coords[2 * i] = getX(p);\n        coords[2 * i + 1] = getY(p);\n      }\n\n      return new Delaunator(coords);\n    }\n  }]);\n\n  return Delaunator;\n}(); // monotonically increases with real angle, but doesn't need expensive trigonometry\n\n\nexport { Delaunator as default };\n\nfunction pseudoAngle(dx, dy) {\n  var p = dx / (Math.abs(dx) + Math.abs(dy));\n  return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n  var dx = ax - bx;\n  var dy = ay - by;\n  return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  var dx = ax - px;\n  var dy = ay - py;\n  var ex = bx - px;\n  var ey = by - py;\n  var fx = cx - px;\n  var fy = cy - py;\n  var ap = dx * dx + dy * dy;\n  var bp = ex * ex + ey * ey;\n  var cp = fx * fx + fy * fy;\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n  var dx = bx - ax;\n  var dy = by - ay;\n  var ex = cx - ax;\n  var ey = cy - ay;\n  var bl = dx * dx + dy * dy;\n  var cl = ex * ex + ey * ey;\n  var d = 0.5 / (dx * ey - dy * ex);\n  var x = (ey * bl - dy * cl) * d;\n  var y = (dx * cl - ex * bl) * d;\n  return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n  var dx = bx - ax;\n  var dy = by - ay;\n  var ex = cx - ax;\n  var ey = cy - ay;\n  var bl = dx * dx + dy * dy;\n  var cl = ex * ex + ey * ey;\n  var d = 0.5 / (dx * ey - dy * ex);\n  var x = ax + (ey * bl - dy * cl) * d;\n  var y = ay + (dx * cl - ex * bl) * d;\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction quicksort(ids, dists, left, right) {\n  if (right - left <= 20) {\n    for (var i = left + 1; i <= right; i++) {\n      var temp = ids[i];\n      var tempDist = dists[temp];\n      var j = i - 1;\n\n      while (j >= left && dists[ids[j]] > tempDist) {\n        ids[j + 1] = ids[j--];\n      }\n\n      ids[j + 1] = temp;\n    }\n  } else {\n    var median = left + right >> 1;\n\n    var _i10 = left + 1;\n\n    var _j2 = right;\n    swap(ids, median, _i10);\n    if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n    if (dists[ids[_i10]] > dists[ids[right]]) swap(ids, _i10, right);\n    if (dists[ids[left]] > dists[ids[_i10]]) swap(ids, left, _i10);\n    var _temp = ids[_i10];\n    var _tempDist = dists[_temp];\n\n    while (true) {\n      do {\n        _i10++;\n      } while (dists[ids[_i10]] < _tempDist);\n\n      do {\n        _j2--;\n      } while (dists[ids[_j2]] > _tempDist);\n\n      if (_j2 < _i10) break;\n      swap(ids, _i10, _j2);\n    }\n\n    ids[left + 1] = ids[_j2];\n    ids[_j2] = _temp;\n\n    if (right - _i10 + 1 >= _j2 - left) {\n      quicksort(ids, dists, _i10, right);\n      quicksort(ids, dists, left, _j2 - 1);\n    } else {\n      quicksort(ids, dists, left, _j2 - 1);\n      quicksort(ids, dists, _i10, right);\n    }\n  }\n}\n\nfunction swap(arr, i, j) {\n  var tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n  return p[0];\n}\n\nfunction defaultGetY(p) {\n  return p[1];\n}","import _classCallCheck from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar epsilon = 1e-6;\n\nvar Path = /*#__PURE__*/function () {\n  function Path() {\n    _classCallCheck(this, Path);\n\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n\n    this._ = \"\";\n  }\n\n  _createClass(Path, [{\n    key: \"moveTo\",\n    value: function moveTo(x, y) {\n      this._ += \"M\".concat(this._x0 = this._x1 = +x, \",\").concat(this._y0 = this._y1 = +y);\n    }\n  }, {\n    key: \"closePath\",\n    value: function closePath() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._ += \"Z\";\n      }\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(x, y) {\n      this._ += \"L\".concat(this._x1 = +x, \",\").concat(this._y1 = +y);\n    }\n  }, {\n    key: \"arc\",\n    value: function arc(x, y, r) {\n      x = +x, y = +y, r = +r;\n      var x0 = x + r;\n      var y0 = y;\n      if (r < 0) throw new Error(\"negative radius\");\n      if (this._x1 === null) this._ += \"M\".concat(x0, \",\").concat(y0);else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n      if (!r) return;\n      this._ += \"A\".concat(r, \",\").concat(r, \",0,1,1,\").concat(x - r, \",\").concat(y, \"A\").concat(r, \",\").concat(r, \",0,1,1,\").concat(this._x1 = x0, \",\").concat(this._y1 = y0);\n    }\n  }, {\n    key: \"rect\",\n    value: function rect(x, y, w, h) {\n      this._ += \"M\".concat(this._x0 = this._x1 = +x, \",\").concat(this._y0 = this._y1 = +y, \"h\").concat(+w, \"v\").concat(+h, \"h\").concat(-w, \"Z\");\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      return this._ || null;\n    }\n  }]);\n\n  return Path;\n}();\n\nexport { Path as default };","import _classCallCheck from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Polygon = /*#__PURE__*/function () {\n  function Polygon() {\n    _classCallCheck(this, Polygon);\n\n    this._ = [];\n  }\n\n  _createClass(Polygon, [{\n    key: \"moveTo\",\n    value: function moveTo(x, y) {\n      this._.push([x, y]);\n    }\n  }, {\n    key: \"closePath\",\n    value: function closePath() {\n      this._.push(this._[0].slice());\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(x, y) {\n      this._.push([x, y]);\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      return this._.length ? this._ : null;\n    }\n  }]);\n\n  return Polygon;\n}();\n\nexport { Polygon as default };","import _slicedToArray from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/regenerator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nvar Voronoi = /*#__PURE__*/function () {\n  function Voronoi(delaunay) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 960, 500],\n        _ref2 = _slicedToArray(_ref, 4),\n        xmin = _ref2[0],\n        ymin = _ref2[1],\n        xmax = _ref2[2],\n        ymax = _ref2[3];\n\n    _classCallCheck(this, Voronoi);\n\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n\n    this._init();\n  }\n\n  _createClass(Voronoi, [{\n    key: \"update\",\n    value: function update() {\n      this.delaunay.update();\n\n      this._init();\n\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this$delaunay = this.delaunay,\n          points = _this$delaunay.points,\n          hull = _this$delaunay.hull,\n          triangles = _this$delaunay.triangles,\n          vectors = this.vectors; // Compute circumcenters.\n\n      var circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n\n      for (var i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n        var t1 = triangles[i] * 2;\n        var t2 = triangles[i + 1] * 2;\n        var t3 = triangles[i + 2] * 2;\n        var _x = points[t1];\n        var _y = points[t1 + 1];\n        var x2 = points[t2];\n        var y2 = points[t2 + 1];\n        var x3 = points[t3];\n        var y3 = points[t3 + 1];\n        var dx = x2 - _x;\n        var dy = y2 - _y;\n        var ex = x3 - _x;\n        var ey = y3 - _y;\n        var ab = (dx * ey - dy * ex) * 2;\n\n        if (Math.abs(ab) < 1e-9) {\n          // degenerate case (collinear diagram)\n          // almost equal points (degenerate triangle)\n          // the circumcenter is at the infinity, in a\n          // direction that is:\n          // 1. orthogonal to the halfedge.\n          var a = 1e9; // 2. points away from the center; since the list of triangles starts\n          // in the center, the first point of the first triangle\n          // will be our reference\n\n          var r = triangles[0] * 2;\n          a *= Math.sign((points[r] - _x) * ey - (points[r + 1] - _y) * ex);\n          x = (_x + x3) / 2 - a * ey;\n          y = (_y + y3) / 2 + a * ex;\n        } else {\n          var d = 1 / ab;\n          var bl = dx * dx + dy * dy;\n          var cl = ex * ex + ey * ey;\n          x = _x + (ey * bl - dy * cl) * d;\n          y = _y + (dx * cl - ex * bl) * d;\n        }\n\n        circumcenters[j] = x;\n        circumcenters[j + 1] = y;\n      } // Compute exterior cell rays.\n\n\n      var h = hull[hull.length - 1];\n      var p0,\n          p1 = h * 4;\n      var x0,\n          x1 = points[2 * h];\n      var y0,\n          y1 = points[2 * h + 1];\n      vectors.fill(0);\n\n      for (var _i = 0; _i < hull.length; ++_i) {\n        h = hull[_i];\n        p0 = p1, x0 = x1, y0 = y1;\n        p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n        vectors[p0 + 2] = vectors[p1] = y0 - y1;\n        vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var _this$delaunay2 = this.delaunay,\n          halfedges = _this$delaunay2.halfedges,\n          inedges = _this$delaunay2.inedges,\n          hull = _this$delaunay2.hull,\n          circumcenters = this.circumcenters,\n          vectors = this.vectors;\n      if (hull.length <= 1) return null;\n\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = Math.floor(i / 3) * 2;\n        var tj = Math.floor(j / 3) * 2;\n        var xi = circumcenters[ti];\n        var yi = circumcenters[ti + 1];\n        var xj = circumcenters[tj];\n        var yj = circumcenters[tj + 1];\n\n        this._renderSegment(xi, yi, xj, yj, context);\n      }\n\n      var h0,\n          h1 = hull[hull.length - 1];\n\n      for (var _i2 = 0; _i2 < hull.length; ++_i2) {\n        h0 = h1, h1 = hull[_i2];\n        var t = Math.floor(inedges[h1] / 3) * 2;\n        var x = circumcenters[t];\n        var y = circumcenters[t + 1];\n        var v = h0 * 4;\n\n        var p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n\n        if (p) this._renderSegment(x, y, p[0], p[1], context);\n      }\n\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderBounds\",\n    value: function renderBounds(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n\n      var points = this._clip(i);\n\n      if (points === null || !points.length) return;\n      context.moveTo(points[0], points[1]);\n      var n = points.length;\n\n      while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) {\n        n -= 2;\n      }\n\n      for (var _i3 = 2; _i3 < n; _i3 += 2) {\n        if (points[_i3] !== points[_i3 - 2] || points[_i3 + 1] !== points[_i3 - 1]) context.lineTo(points[_i3], points[_i3 + 1]);\n      }\n\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"cellPolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function cellPolygons() {\n      var points, i, n, cell;\n      return _regeneratorRuntime.wrap(function cellPolygons$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              points = this.delaunay.points;\n              i = 0, n = points.length / 2;\n\n            case 2:\n              if (!(i < n)) {\n                _context.next = 11;\n                break;\n              }\n\n              cell = this.cellPolygon(i);\n\n              if (!cell) {\n                _context.next = 8;\n                break;\n              }\n\n              cell.index = i;\n              _context.next = 8;\n              return cell;\n\n            case 8:\n              ++i;\n              _context.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, cellPolygons, this);\n    })\n  }, {\n    key: \"cellPolygon\",\n    value: function cellPolygon(i) {\n      var polygon = new Polygon();\n      this.renderCell(i, polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"_renderSegment\",\n    value: function _renderSegment(x0, y0, x1, y1, context) {\n      var S;\n\n      var c0 = this._regioncode(x0, y0);\n\n      var c1 = this._regioncode(x1, y1);\n\n      if (c0 === 0 && c1 === 0) {\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n      } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n        context.moveTo(S[0], S[1]);\n        context.lineTo(S[2], S[3]);\n      }\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(i, x, y) {\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n      return this.delaunay._step(i, x, y) === i;\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function neighbors(i) {\n      var ci, _iterator, _step, j, cj, ai, li, aj, lj;\n\n      return _regeneratorRuntime.wrap(function neighbors$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ci = this._clip(i);\n\n              if (!ci) {\n                _context2.next = 33;\n                break;\n              }\n\n              _iterator = _createForOfIteratorHelper(this.delaunay.neighbors(i));\n              _context2.prev = 3;\n\n              _iterator.s();\n\n            case 5:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              j = _step.value;\n              cj = this._clip(j); // find the common edge\n\n              if (!cj) {\n                _context2.next = 23;\n                break;\n              }\n\n              ai = 0, li = ci.length;\n\n            case 10:\n              if (!(ai < li)) {\n                _context2.next = 23;\n                break;\n              }\n\n              aj = 0, lj = cj.length;\n\n            case 12:\n              if (!(aj < lj)) {\n                _context2.next = 20;\n                break;\n              }\n\n              if (!(ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj])) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.next = 16;\n              return j;\n\n            case 16:\n              return _context2.abrupt(\"break\", 23);\n\n            case 17:\n              aj += 2;\n              _context2.next = 12;\n              break;\n\n            case 20:\n              ai += 2;\n              _context2.next = 10;\n              break;\n\n            case 23:\n              _context2.next = 5;\n              break;\n\n            case 25:\n              _context2.next = 30;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              _iterator.e(_context2.t0);\n\n            case 30:\n              _context2.prev = 30;\n\n              _iterator.f();\n\n              return _context2.finish(30);\n\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, neighbors, this, [[3, 27, 30, 33]]);\n    })\n  }, {\n    key: \"_cell\",\n    value: function _cell(i) {\n      var circumcenters = this.circumcenters,\n          _this$delaunay3 = this.delaunay,\n          inedges = _this$delaunay3.inedges,\n          halfedges = _this$delaunay3.halfedges,\n          triangles = _this$delaunay3.triangles;\n      var e0 = inedges[i];\n      if (e0 === -1) return null; // coincident point\n\n      var points = [];\n      var e = e0;\n\n      do {\n        var t = Math.floor(e / 3);\n        points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n\n        e = halfedges[e];\n      } while (e !== e0 && e !== -1);\n\n      return points;\n    }\n  }, {\n    key: \"_clip\",\n    value: function _clip(i) {\n      // degenerate case (1 valid point: return the box)\n      if (i === 0 && this.delaunay.hull.length === 1) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n\n      var points = this._cell(i);\n\n      if (points === null) return null;\n      var V = this.vectors;\n      var v = i * 4;\n      return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);\n    }\n  }, {\n    key: \"_clipFinite\",\n    value: function _clipFinite(i, points) {\n      var n = points.length;\n      var P = null;\n      var x0,\n          y0,\n          x1 = points[n - 2],\n          y1 = points[n - 1];\n\n      var c0,\n          c1 = this._regioncode(x1, y1);\n\n      var e0,\n          e1 = 0;\n\n      for (var j = 0; j < n; j += 2) {\n        x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n        c0 = c1, c1 = this._regioncode(x1, y1);\n\n        if (c0 === 0 && c1 === 0) {\n          e0 = e1, e1 = 0;\n          if (P) P.push(x1, y1);else P = [x1, y1];\n        } else {\n          var S = void 0,\n              sx0 = void 0,\n              sy0 = void 0,\n              sx1 = void 0,\n              sy1 = void 0;\n\n          if (c0 === 0) {\n            if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n            var _S = S;\n\n            var _S2 = _slicedToArray(_S, 4);\n\n            sx0 = _S2[0];\n            sy0 = _S2[1];\n            sx1 = _S2[2];\n            sy1 = _S2[3];\n          } else {\n            if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n            var _S3 = S;\n\n            var _S4 = _slicedToArray(_S3, 4);\n\n            sx1 = _S4[0];\n            sy1 = _S4[1];\n            sx0 = _S4[2];\n            sy0 = _S4[3];\n            e0 = e1, e1 = this._edgecode(sx0, sy0);\n            if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n            if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n          }\n\n          e0 = e1, e1 = this._edgecode(sx1, sy1);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n        }\n      }\n\n      if (P) {\n        e0 = e1, e1 = this._edgecode(P[0], P[1]);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n\n      return P;\n    }\n  }, {\n    key: \"_clipSegment\",\n    value: function _clipSegment(x0, y0, x1, y1, c0, c1) {\n      while (true) {\n        if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n        if (c0 & c1) return null;\n        var x = void 0,\n            y = void 0,\n            c = c0 || c1;\n        if (c & 8) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 4) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 2) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n        if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n      }\n    }\n  }, {\n    key: \"_clipInfinite\",\n    value: function _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n      var P = Array.from(points),\n          p;\n      if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n      if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n\n      if (P = this._clipFinite(i, P)) {\n        for (var j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n          c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n          if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n        }\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n      }\n\n      return P;\n    }\n  }, {\n    key: \"_edge\",\n    value: function _edge(i, e0, e1, P, j) {\n      while (e0 !== e1) {\n        var x = void 0,\n            y = void 0;\n\n        switch (e0) {\n          case 5:\n            e0 = 4;\n            continue;\n          // top-left\n\n          case 4:\n            e0 = 6, x = this.xmax, y = this.ymin;\n            break;\n          // top\n\n          case 6:\n            e0 = 2;\n            continue;\n          // top-right\n\n          case 2:\n            e0 = 10, x = this.xmax, y = this.ymax;\n            break;\n          // right\n\n          case 10:\n            e0 = 8;\n            continue;\n          // bottom-right\n\n          case 8:\n            e0 = 9, x = this.xmin, y = this.ymax;\n            break;\n          // bottom\n\n          case 9:\n            e0 = 1;\n            continue;\n          // bottom-left\n\n          case 1:\n            e0 = 5, x = this.xmin, y = this.ymin;\n            break;\n          // left\n        } // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n        // undefined, the conditional statement will be executed.\n\n\n        if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n          P.splice(j, 0, x, y), j += 2;\n        }\n      }\n\n      if (P.length > 4) {\n        for (var _i4 = 0; _i4 < P.length; _i4 += 2) {\n          var _j = (_i4 + 2) % P.length,\n              k = (_i4 + 4) % P.length;\n\n          if (P[_i4] === P[_j] && P[_j] === P[k] || P[_i4 + 1] === P[_j + 1] && P[_j + 1] === P[k + 1]) P.splice(_j, 2), _i4 -= 2;\n        }\n      }\n\n      return j;\n    }\n  }, {\n    key: \"_project\",\n    value: function _project(x0, y0, vx, vy) {\n      var t = Infinity,\n          c,\n          x,\n          y;\n\n      if (vy < 0) {\n        // top\n        if (y0 <= this.ymin) return null;\n        if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n      } else if (vy > 0) {\n        // bottom\n        if (y0 >= this.ymax) return null;\n        if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n      }\n\n      if (vx > 0) {\n        // right\n        if (x0 >= this.xmax) return null;\n        if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n      } else if (vx < 0) {\n        // left\n        if (x0 <= this.xmin) return null;\n        if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n      }\n\n      return [x, y];\n    }\n  }, {\n    key: \"_edgecode\",\n    value: function _edgecode(x, y) {\n      return (x === this.xmin ? 1 : x === this.xmax ? 2 : 0) | (y === this.ymin ? 4 : y === this.ymax ? 8 : 0);\n    }\n  }, {\n    key: \"_regioncode\",\n    value: function _regioncode(x, y) {\n      return (x < this.xmin ? 1 : x > this.xmax ? 2 : 0) | (y < this.ymin ? 4 : y > this.ymax ? 8 : 0);\n    }\n  }]);\n\n  return Voronoi;\n}();\n\nexport { Voronoi as default };","import _classCallCheck from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(flatIterable);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"/home/runner/work/demos/demos/node_modules/@babel/runtime/regenerator\";\nimport \"core-js/modules/es.math.hypot.js\";\nimport Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\nvar tau = 2 * Math.PI,\n    pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n} // A triangulation is collinear if all its triangles have a non-null area\n\n\nfunction collinear(d) {\n  var triangles = d.triangles,\n      coords = d.coords;\n\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i],\n        b = 2 * triangles[i + 1],\n        c = 2 * triangles[i + 2],\n        cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nvar Delaunay = /*#__PURE__*/function () {\n  function Delaunay(points) {\n    _classCallCheck(this, Delaunay);\n\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n\n    this._init();\n  }\n\n  _createClass(Delaunay, [{\n    key: \"update\",\n    value: function update() {\n      this._delaunator.update();\n\n      this._init();\n\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var d = this._delaunator,\n          points = this.points; // check for collinear\n\n      if (d.hull && d.hull.length > 2 && collinear(d)) {\n        this.collinear = Int32Array.from({\n          length: points.length / 2\n        }, function (_, i) {\n          return i;\n        }).sort(function (i, j) {\n          return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n        }); // for exact neighbors\n\n        var e = this.collinear[0],\n            f = this.collinear[this.collinear.length - 1],\n            bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n            r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n\n        for (var i = 0, n = points.length / 2; i < n; ++i) {\n          var p = jitter(points[2 * i], points[2 * i + 1], r);\n          points[2 * i] = p[0];\n          points[2 * i + 1] = p[1];\n        }\n\n        this._delaunator = new Delaunator(points);\n      } else {\n        delete this.collinear;\n      }\n\n      var halfedges = this.halfedges = this._delaunator.halfedges;\n      var hull = this.hull = this._delaunator.hull;\n      var triangles = this.triangles = this._delaunator.triangles;\n      var inedges = this.inedges.fill(-1);\n\n      var hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n      // Used to give the first neighbor of each point; for this reason,\n      // on the hull we give priority to exterior halfedges\n\n\n      for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n        var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n        if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n      }\n\n      for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n        hullIndex[hull[_i]] = _i;\n      } // degenerate case: 1 or 2 (distinct) points\n\n\n      if (hull.length <= 2 && hull.length > 0) {\n        this.triangles = new Int32Array(3).fill(-1);\n        this.halfedges = new Int32Array(3).fill(-1);\n        this.triangles[0] = hull[0];\n        inedges[hull[0]] = 1;\n\n        if (hull.length === 2) {\n          inedges[hull[1]] = 0;\n          this.triangles[1] = hull[1];\n          this.triangles[2] = hull[1];\n        }\n      }\n    }\n  }, {\n    key: \"voronoi\",\n    value: function voronoi(bounds) {\n      return new Voronoi(this, bounds);\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function neighbors(i) {\n      var inedges, hull, _hullIndex, halfedges, triangles, collinear, l, e0, e, p0, p;\n\n      return _regeneratorRuntime.wrap(function neighbors$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              inedges = this.inedges, hull = this.hull, _hullIndex = this._hullIndex, halfedges = this.halfedges, triangles = this.triangles, collinear = this.collinear; // degenerate case with several collinear points\n\n              if (!collinear) {\n                _context.next = 10;\n                break;\n              }\n\n              l = collinear.indexOf(i);\n\n              if (!(l > 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return collinear[l - 1];\n\n            case 6:\n              if (!(l < collinear.length - 1)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 9;\n              return collinear[l + 1];\n\n            case 9:\n              return _context.abrupt(\"return\");\n\n            case 10:\n              e0 = inedges[i];\n\n              if (!(e0 === -1)) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              // coincident point\n              e = e0, p0 = -1;\n\n            case 14:\n              _context.next = 16;\n              return p0 = triangles[e];\n\n            case 16:\n              e = e % 3 === 2 ? e - 2 : e + 1;\n\n              if (!(triangles[e] !== i)) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 19:\n              // bad triangulation\n              e = halfedges[e];\n\n              if (!(e === -1)) {\n                _context.next = 26;\n                break;\n              }\n\n              p = hull[(_hullIndex[i] + 1) % hull.length];\n\n              if (!(p !== p0)) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 25;\n              return p;\n\n            case 25:\n              return _context.abrupt(\"return\");\n\n            case 26:\n              if (e !== e0) {\n                _context.next = 14;\n                break;\n              }\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, neighbors, this);\n    })\n  }, {\n    key: \"find\",\n    value: function find(x, y) {\n      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n      var i0 = i;\n      var c;\n\n      while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) {\n        i = c;\n      }\n\n      return c;\n    }\n  }, {\n    key: \"_step\",\n    value: function _step(i, x, y) {\n      var inedges = this.inedges,\n          hull = this.hull,\n          _hullIndex = this._hullIndex,\n          halfedges = this.halfedges,\n          triangles = this.triangles,\n          points = this.points;\n      if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n      var c = i;\n      var dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n      var e0 = inedges[i];\n      var e = e0;\n\n      do {\n        var t = triangles[e];\n        var dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n        if (dt < dc) dc = dt, c = t;\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n\n        e = halfedges[e];\n\n        if (e === -1) {\n          e = hull[(_hullIndex[i] + 1) % hull.length];\n\n          if (e !== t) {\n            if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n          }\n\n          break;\n        }\n      } while (e !== e0);\n\n      return c;\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n          halfedges = this.halfedges,\n          triangles = this.triangles;\n\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = triangles[i] * 2;\n        var tj = triangles[j] * 2;\n        context.moveTo(points[ti], points[ti + 1]);\n        context.lineTo(points[tj], points[tj + 1]);\n      }\n\n      this.renderHull(context);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderPoints\",\n    value: function renderPoints(context, r) {\n      if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n      r = r == undefined ? 2 : +r;\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points;\n\n      for (var i = 0, n = points.length; i < n; i += 2) {\n        var x = points[i],\n            y = points[i + 1];\n        context.moveTo(x + r, y);\n        context.arc(x, y, r, 0, tau);\n      }\n\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderHull\",\n    value: function renderHull(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var hull = this.hull,\n          points = this.points;\n      var h = hull[0] * 2,\n          n = hull.length;\n      context.moveTo(points[h], points[h + 1]);\n\n      for (var i = 1; i < n; ++i) {\n        var _h = 2 * hull[i];\n\n        context.lineTo(points[_h], points[_h + 1]);\n      }\n\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"hullPolygon\",\n    value: function hullPolygon() {\n      var polygon = new Polygon();\n      this.renderHull(polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"renderTriangle\",\n    value: function renderTriangle(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n          triangles = this.triangles;\n      var t0 = triangles[i *= 3] * 2;\n      var t1 = triangles[i + 1] * 2;\n      var t2 = triangles[i + 2] * 2;\n      context.moveTo(points[t0], points[t0 + 1]);\n      context.lineTo(points[t1], points[t1 + 1]);\n      context.lineTo(points[t2], points[t2 + 1]);\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"trianglePolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function trianglePolygons() {\n      var triangles, i, n;\n      return _regeneratorRuntime.wrap(function trianglePolygons$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              triangles = this.triangles;\n              i = 0, n = triangles.length / 3;\n\n            case 2:\n              if (!(i < n)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 5;\n              return this.trianglePolygon(i);\n\n            case 5:\n              ++i;\n              _context2.next = 2;\n              break;\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, trianglePolygons, this);\n    })\n  }, {\n    key: \"trianglePolygon\",\n    value: function trianglePolygon(i) {\n      var polygon = new Polygon();\n      this.renderTriangle(i, polygon);\n      return polygon.value();\n    }\n  }], [{\n    key: \"from\",\n    value: function from(points) {\n      var fx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pointX;\n      var fy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : pointY;\n      var that = arguments.length > 3 ? arguments[3] : undefined;\n      return new Delaunay(\"length\" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n    }\n  }]);\n\n  return Delaunay;\n}();\n\nexport { Delaunay as default };\n\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n\n  return array;\n}\n\nfunction flatIterable(points, fx, fy, that) {\n  var i, _iterator, _step2, p;\n\n  return _regeneratorRuntime.wrap(function flatIterable$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          i = 0;\n          _iterator = _createForOfIteratorHelper(points);\n          _context3.prev = 2;\n\n          _iterator.s();\n\n        case 4:\n          if ((_step2 = _iterator.n()).done) {\n            _context3.next = 13;\n            break;\n          }\n\n          p = _step2.value;\n          _context3.next = 8;\n          return fx.call(that, p, i, points);\n\n        case 8:\n          _context3.next = 10;\n          return fy.call(that, p, i, points);\n\n        case 10:\n          ++i;\n\n        case 11:\n          _context3.next = 4;\n          break;\n\n        case 13:\n          _context3.next = 18;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](2);\n\n          _iterator.e(_context3.t0);\n\n        case 18:\n          _context3.prev = 18;\n\n          _iterator.f();\n\n          return _context3.finish(18);\n\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked, null, [[2, 15, 18, 21]]);\n}","import {\n  area as areaD3,\n  axisBottom,\n  axisLeft,\n  csv,\n  format,\n  line as lineD3,\n  max,\n  min,\n  scaleLinear,\n  select,\n} from \"d3\"\nimport { Delaunay } from \"d3-delaunay\"\n\nimport \"./area.styl\"\n\ntype Point = {\n  index?: number\n  percent: number\n  year: number\n}\n\nconst fetchData = (): Promise<Point[]> =>\n  (csv(`${ROOT_PATH}data/d3js/area/data.csv`) as unknown) as Promise<Point[]>\n\nconst texts = {\n  pointTitle: (point: Point) =>\n    `Year: ${point.year}, ` + `Percent: ${point.percent}%`,\n  title: \"Share of top decile [aka top 10%] in national income\",\n}\n\nconst margin = {\n  bottom: 50,\n  left: 70,\n  right: 50,\n  top: 50,\n}\n\nconst height = 400 - margin.top - margin.bottom\nconst titleYOffset = -15\nconst axisTickSize = 10\n\ntype RenderChart = (o: {\n  data: Point[]\n  rootElId: string\n}) => {\n  toggleVoronoi(): void\n}\n\nconst renderChart: RenderChart = ({ data, rootElId }) => {\n  const width =\n    (document.getElementById(rootElId) as HTMLElement).getBoundingClientRect()\n      .width -\n    margin.left -\n    margin.right\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n    .attr(\"class\", \"area-chart\")\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", \"chart-title\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", `translate(${String(width / 2)},${titleYOffset})`)\n    .text(texts.title)\n    .style(\"font-weight\", \"bold\")\n\n  filterBlackOpacity(\"points\", svg, 2, 0.5)\n\n  const xMax = max(data, (point) => point.year) as number\n  const xMin = min(data, (point) => point.year) as number\n\n  const yMax = max(data, (point) => point.percent / 100) as number\n  const yMin = min(data, (point) => point.percent / 100) as number\n\n  const xScale = scaleLinear().domain([xMin, xMax]).range([0, width])\n  const yScale = scaleLinear()\n    .domain([yMax + 0.05, yMin - 0.05])\n    .range([0, height])\n\n  const xAxis = axisBottom(xScale)\n    .tickFormat(format(\".0f\"))\n    .tickSize(axisTickSize)\n  const yAxis = axisLeft(yScale)\n    .tickFormat(format(\".0%\"))\n    .tickSize(axisTickSize)\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", `translate(0,${String(height)})`)\n    .call(xAxis)\n    .selectAll(\"text\")\n    .attr(\"dy\", \"1.25em\")\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n    .selectAll(\"text\")\n    .attr(\"dx\", \"-.25em\")\n\n  const area = areaD3<Point>()\n    .x((point: Point) => xScale(point.year))\n    .y0(height)\n    .y1((point: Point) => yScale(point.percent / 100))\n\n  const line = lineD3<Point>()\n    .x((d) => xScale(d.year))\n    .y((d) => yScale(d.percent / 100))\n\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"line\")\n    .attr(\"d\", line)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  svg\n    .append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"area\")\n    .attr(\"d\", area)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  const voronoi = Delaunay.from(\n    data,\n    (point) => xScale(point.year),\n    (point) => yScale(point.percent / 100)\n  ).voronoi([\n    -margin.left,\n    -margin.top,\n    width + margin.right,\n    height + margin.bottom,\n  ])\n\n  const mouseover = (_e: unknown, d: Point) => {\n    select(`.point-${d.index}`).style(\"display\", \"block\")\n  }\n\n  const mouseleave = (_mouseEvent: unknown, point: Point) => {\n    select(`.point-${point.index}`).style(\"display\", \"none\")\n  }\n\n  svg\n    .selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\n      \"transform\",\n      (point: Point) =>\n        `translate(${xScale(point.year)},${yScale(point.percent / 100)})`\n    )\n    .attr(\"r\", \"5px\")\n    .attr(\n      \"class\",\n      (_point: Point, pointIndex: number) => `point point-${pointIndex}`\n    )\n    .style(\"filter\", \"url(#drop-shadow-points)\")\n\n  const voronoiGroup = svg.append(\"g\").attr(\"class\", \"voronoi\")\n\n  voronoiGroup\n    .selectAll(\"path\")\n    .data(data)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", (point: Point, pointIndex: number) => {\n      point.index = pointIndex\n\n      return voronoi.renderCell(pointIndex)\n    })\n    .on(\"mouseover\", mouseover)\n    .on(\"mouseleave\", mouseleave)\n    .append(\"title\")\n    .text(texts.pointTitle)\n\n  return {\n    toggleVoronoi: () => {\n      const currentClass = voronoiGroup.attr(\"class\")\n\n      const newClass = currentClass.includes(\"show-voronoi\")\n        ? currentClass.replace(\"show-voronoi\", \"\").trim()\n        : `${currentClass} show-voronoi`\n\n      voronoiGroup.attr(\"class\", newClass)\n    },\n  }\n}\n\nconst filterBlackOpacity = (\n  id: string,\n  svg: d3.Selection<SVGGElement, unknown, HTMLElement, unknown>,\n  deviation: number,\n  slope: number\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nconst main = async () => {\n  const data = await fetchData()\n  const rootElId = \"chart\"\n\n  const { toggleVoronoi } = renderChart({\n    data,\n    rootElId,\n  })\n\n  ;(document.getElementById(\"toggle-voronoi\") as HTMLElement).addEventListener(\n    \"click\",\n    (e) => {\n      e.preventDefault()\n\n      toggleVoronoi()\n    }\n  )\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/area/area\"\n\nconst Area = ({ pageContext: { demoInfo } }: DemoPageProps) => (\n  <Demo demoInfo={demoInfo} main={main}>\n    <form>\n      <button className=\"btn btn-info\" id=\"toggle-voronoi\" type=\"button\">\n        Toggle Voronoi\n      </button>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Area\n"],"sourceRoot":""}