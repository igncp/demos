{"version":3,"sources":["webpack://demos/./src/demos/vectors/vectors.js","webpack://demos/./src/pages/d3js/vectors.tsx"],"names":["rootElId","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","svg","d3","select","append","attr","nodes","id","reflexive","lastNodeId","charCodeAt","links","left","right","source","target","dragLine","path","selectAll","circle","force","layout","size","linkDistance","charge","on","d","deltaX","x","deltaY","y","dist","Math","sqrt","normX","normY","sourcePadding","targetPadding","selectedNode","selectedLink","mousedownLink","mousedownNode","mouseupNode","resetMouseVars","restart","data","classed","style","enter","event","ctrlKey","exit","remove","rgb","darker","toString","g","brighter","this","direction","link","filter","l","push","text","start","lastKeyDown","point","mouse","node","String","fromCharCode","window","preventDefault","keyCode","call","drag","splice","indexOf","map","demoInfo","pageContext","main","scripts"],"mappings":"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","file":"component---src-pages-d-3-js-vectors-tsx-5fa4330cb995de512ae3.js","sourcesContent":["const main = () => {\n  const rootElId = \"chart\"\n  const rootEl = document.getElementById(rootElId)\n\n  rootEl.classList.add(\"vectors-chart\")\n\n  const { width } = rootEl.getBoundingClientRect()\n  const height = 500\n\n  const colors = () => \"#FFF\"\n\n  const svg = d3\n    .select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n  const nodes = [\n    {\n      id: \"A\",\n      reflexive: false,\n    },\n    {\n      id: \"B\",\n      reflexive: false,\n    },\n    {\n      id: \"C\",\n      reflexive: false,\n    },\n  ]\n\n  let lastNodeId = \"C\".charCodeAt(0)\n\n  const links = [\n    {\n      left: false,\n      right: true,\n      source: nodes[0],\n      target: nodes[1],\n    },\n    {\n      left: false,\n      right: true,\n      source: nodes[1],\n      target: nodes[2],\n    },\n  ]\n\n  const tick = () => {\n    path.attr(\"d\", (d) => {\n      const deltaX = d.target.x - d.source.x\n      const deltaY = d.target.y - d.source.y\n      const dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n      const normX = deltaX / dist\n      const normY = deltaY / dist\n      const sourcePadding = d.left ? 17 : 12\n      const targetPadding = d.right ? 17 : 12\n      const sourceX = d.source.x + sourcePadding * normX\n      const sourceY = d.source.y + sourcePadding * normY\n      const targetX = d.target.x - targetPadding * normX\n      const targetY = d.target.y - targetPadding * normY\n\n      return `M${sourceX},${sourceY}L${targetX},${targetY}`\n    })\n\n    return circle.attr(\"transform\", (d) => `translate(${d.x},${d.y})`)\n  }\n\n  svg\n    .append(\"svg:defs\")\n    .append(\"svg:marker\")\n    .attr(\"id\", \"end-arrow\")\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 6)\n    .attr(\"markerWidth\", 3)\n    .attr(\"markerHeight\", 3)\n    .attr(\"orient\", \"auto\")\n    .append(\"svg:path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\")\n    .attr(\"fill\", \"#000\")\n\n  svg\n    .append(\"svg:defs\")\n    .append(\"svg:marker\")\n    .attr(\"id\", \"start-arrow\")\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refX\", 4)\n    .attr(\"markerWidth\", 3)\n    .attr(\"markerHeight\", 3)\n    .attr(\"orient\", \"auto\")\n    .append(\"svg:path\")\n    .attr(\"d\", \"M10,-5L0,0L10,5\")\n    .attr(\"fill\", \"#000\")\n\n  const dragLine = svg\n    .append(\"svg:path\")\n    .attr(\"class\", \"link dragline hidden\")\n    .attr(\"d\", \"M0,0L0,0\")\n\n  let path = svg.append(\"svg:g\").selectAll(\"path\")\n\n  let circle = svg.append(\"svg:g\").selectAll(\"g\")\n\n  const force = d3.layout\n    .force()\n    .nodes(nodes)\n    .links(links)\n    .size([width, height])\n    .linkDistance(150)\n    .charge(-500)\n    .on(\"tick\", tick)\n\n  let selectedNode = null\n  let selectedLink = null\n  let mousedownLink = null\n  let mousedownNode = null\n\n  let mouseupNode = null\n\n  const resetMouseVars = () => {\n    mousedownNode = null\n    mouseupNode = null\n    mousedownLink = null\n  }\n\n  const restart = function () {\n    path = path.data(links)\n    path\n      .classed(\"selected\", (d) => d === selectedLink)\n      .style(\"marker-start\", (d) => {\n        if (d.left) {\n          return \"url(#start-arrow)\"\n        }\n\n        return \"\"\n      })\n      .style(\"marker-end\", (d) => {\n        if (d.right) {\n          return \"url(#end-arrow)\"\n        }\n\n        return \"\"\n      })\n    path\n      .enter()\n      .append(\"svg:path\")\n      .attr(\"class\", \"link\")\n      .classed(\"selected\", (d) => d === selectedLink)\n      .style(\"marker-start\", (d) => {\n        if (d.left) {\n          return \"url(#start-arrow)\"\n        }\n\n        return \"\"\n      })\n      .style(\"marker-end\", (d) => {\n        if (d.right) {\n          return \"url(#end-arrow)\"\n        }\n\n        return \"\"\n      })\n      .on(\"mousedown\", (d) => {\n        if (d3.event.ctrlKey) {\n          return\n        }\n\n        mousedownLink = d\n\n        if (mousedownLink === selectedLink) {\n          selectedLink = null\n        } else {\n          selectedLink = mousedownLink\n        }\n\n        selectedNode = null\n\n        restart()\n      })\n    path.exit().remove()\n    circle = circle.data(nodes, (d) => d.id)\n    circle\n      .selectAll(\"circle\")\n      .style(\"fill\", (d) => {\n        if (d === selectedNode) {\n          return d3.rgb(colors(d.id)).darker().toString()\n        }\n\n        return colors(d.id)\n      })\n      .classed(\"reflexive\", (d) => d.reflexive)\n\n    const g = circle.enter().append(\"svg:g\")\n\n    g.append(\"svg:circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 12)\n      .style(\"fill\", (d) => {\n        if (d === selectedNode) {\n          return d3.rgb(colors(d.id)).brighter().toString()\n        }\n\n        return colors(d.id)\n      })\n      .style(\"stroke\", (d) => d3.rgb(colors(d.id)).darker().toString())\n      .classed(\"reflexive\", (d) => d.reflexive)\n      .on(\"mouseover\", function (d) {\n        if (!mousedownNode || d === mousedownNode) {\n          return\n        }\n\n        d3.select(this).attr(\"transform\", \"scale(1.1)\")\n      })\n      .on(\"mouseout\", function (d) {\n        if (!mousedownNode || d === mousedownNode) {\n          return\n        }\n\n        d3.select(this).attr(\"transform\", \"\")\n      })\n      .on(\"mousedown\", (d) => {\n        if (d3.event.ctrlKey) {\n          return\n        }\n\n        mousedownNode = d\n\n        if (mousedownNode === selectedNode) {\n          selectedNode = null\n        } else {\n          selectedNode = mousedownNode\n        }\n\n        selectedLink = null\n        dragLine\n          .style(\"marker-end\", \"url(#end-arrow)\")\n          .classed(\"hidden\", false)\n          .attr(\n            \"d\",\n            `M${mousedownNode.x},${mousedownNode.y}L${mousedownNode.x},${mousedownNode.y}`\n          )\n\n        restart()\n      })\n      .on(\"mouseup\", function (d) {\n        let direction = null\n        let source = null\n        let target = null\n\n        if (!mousedownNode) {\n          return\n        }\n\n        dragLine.classed(\"hidden\", true).style(\"marker-end\", \"\")\n        mouseupNode = d\n\n        if (mouseupNode === mousedownNode) {\n          resetMouseVars()\n\n          return\n        }\n\n        d3.select(this).attr(\"transform\", \"\")\n\n        if (mousedownNode.id < mouseupNode.id) {\n          source = mousedownNode\n          target = mouseupNode\n          direction = \"right\"\n        } else {\n          source = mouseupNode\n          target = mousedownNode\n          direction = \"left\"\n        }\n\n        let link = links.filter(\n          (l) => l.source === source && l.target === target\n        )[0]\n\n        if (link) {\n          link[direction] = true\n        } else {\n          link = {\n            left: false,\n            right: false,\n            source,\n            target,\n          }\n          link[direction] = true\n          links.push(link)\n        }\n\n        selectedLink = link\n        selectedNode = null\n\n        restart()\n      })\n    g.append(\"svg:text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 4)\n      .attr(\"class\", \"id\")\n      .text((d) => d.id)\n    circle.exit().remove()\n\n    return force.start()\n  }\n\n  const mousedown = function () {\n    svg.classed(\"active\", true)\n\n    if (d3.event.ctrlKey || mousedownNode || mousedownLink) {\n      return\n    }\n\n    const point = d3.mouse(this)\n    const node = {\n      id: String.fromCharCode(++lastNodeId),\n      reflexive: false,\n    }\n\n    node.x = point[0]\n    node.y = point[1]\n    nodes.push(node)\n\n    restart()\n  }\n\n  const mousemove = function () {\n    if (!mousedownNode) {\n      return\n    }\n\n    dragLine.attr(\n      \"d\",\n      `M${mousedownNode.x},${mousedownNode.y}L${d3.mouse(this)[0]},${\n        d3.mouse(this)[1]\n      }`\n    )\n\n    restart()\n  }\n\n  const mouseup = function () {\n    if (mousedownNode) {\n      dragLine.classed(\"hidden\", true).style(\"marker-end\", \"\")\n    }\n\n    svg.classed(\"active\", false)\n\n    return resetMouseVars()\n  }\n\n  const spliceLinksForNode = (node) => {\n    const toSplice = links.filter((l) => l.source === node || l.target === node)\n\n    return toSplice.map((l) => links.splice(links.indexOf(l), 1))\n  }\n\n  let lastKeyDown = -1\n\n  const keydown = function () {\n    d3.event.preventDefault()\n\n    if (lastKeyDown !== -1) {\n      return\n    }\n\n    lastKeyDown = d3.event.keyCode\n\n    if (d3.event.keyCode === 17) {\n      circle.call(force.drag)\n      svg.classed(\"ctrl\", true)\n    }\n\n    if (!selectedNode && !selectedLink) {\n      return\n    }\n\n    switch (d3.event.keyCode) {\n      case 46:\n        if (selectedNode) {\n          nodes.splice(nodes.indexOf(selectedNode), 1)\n          spliceLinksForNode(selectedNode)\n        } else if (selectedLink) {\n          links.splice(links.indexOf(selectedLink), 1)\n        }\n\n        selectedLink = null\n        selectedNode = null\n\n        restart()\n\n        return\n      case 66:\n        if (selectedLink) {\n          selectedLink.left = true\n          selectedLink.right = true\n        }\n\n        restart()\n\n        return\n      case 76:\n        if (selectedLink) {\n          selectedLink.left = true\n          selectedLink.right = false\n        }\n\n        restart()\n\n        return\n      case 82:\n        if (selectedNode) {\n          selectedNode.reflexive = !selectedNode.reflexive\n        } else if (selectedLink) {\n          selectedLink.left = false\n          selectedLink.right = true\n        }\n\n        restart()\n\n        return\n    }\n  }\n\n  const keyup = function () {\n    lastKeyDown = -1\n\n    if (d3.event.keyCode === 17) {\n      circle.on(\"mousedown.drag\", null).on(\"touchstart.drag\", null)\n\n      svg.classed(\"ctrl\", false)\n    }\n  }\n\n  svg\n    .on(\"mousedown\", mousedown)\n    .on(\"mousemove\", mousemove)\n    .on(\"mouseup\", mouseup)\n\n  d3.select(window).on(\"keydown\", keydown).on(\"keyup\", keyup)\n\n  restart()\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\n// @ts-ignore\nimport main from \"@/demos/vectors/vectors\"\n\nimport \"@/demos/vectors/vectors.styl\"\n\nconst Vectors = ({ pageContext: { demoInfo } }: DemoPageProps) => (\n  <Demo demoInfo={demoInfo} main={main} scripts={[\"/vendors/d3/d3.min.js\"]}>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Vectors\n"],"sourceRoot":""}