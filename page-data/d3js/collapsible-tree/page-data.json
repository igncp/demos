{
    "componentChunkName": "component---src-pages-d-3-js-collapsible-tree-tsx",
    "path": "/d3js/collapsible-tree/",
    "result": {"pageContext":{"demoInfo":{"dataFiles":["data.json"],"docs":[],"isCompleted":true,"name":"Collapsible Tree","notes":["Added the option to create and remove nodes dynamically on click"],"sources":["http://bl.ocks.org/mbostock/4339083","https://observablehq.com/@d3/collapsible-tree"],"summary":["In this case there are many files to improve the separation of concerns, minimize dependencies of each module and the data exposes.","There are several important entities in this type of chart: `hierarchy` (which produces `HierarchyNode`), `tree` (which produces `HierarchyPointNode`)."],"category":"d3js","files":{"demoCSS":[{"content":"<span class=\"token selector\">.collapsibleTreeChart </span><span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.node </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n\n    <span class=\"token selector\">circle </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> steelblue<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 1.5px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token selector\">text </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 10px sans-serif<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.link </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> #ccc<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 1.5px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","filePath":"src/demos/collapsible-tree/collapsible-tree.module.css"}],"demoTS":[{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> renderChart <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span>\n  createChartConfig<span class=\"token punctuation\">,</span>\n  fetchData<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart-config\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">main</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> rootData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> chartConfig <span class=\"token operator\">=</span> <span class=\"token function\">createChartConfig</span><span class=\"token punctuation\">(</span>rootData<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">renderChart</span><span class=\"token punctuation\">(</span>chartConfig<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CONTAINER_ID</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> main\n","filePath":"src/demos/collapsible-tree/collapsible-tree.ts"},{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> json <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  ChartConfig<span class=\"token punctuation\">,</span>\n  NodeShape<span class=\"token punctuation\">,</span>\n  findNode<span class=\"token punctuation\">,</span>\n  findParentNode<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CONTAINER_ID</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"chart\"</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">RawData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">BaseData</span> <span class=\"token operator\">=</span> RawData <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">RawNode</span> <span class=\"token operator\">=</span> NodeShape<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">BaseNode</span> <span class=\"token operator\">=</span> NodeShape<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> getBaseNode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  context<span class=\"token punctuation\">,</span>\n  rawNode<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  context<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n  rawNode<span class=\"token operator\">:</span> RawNode\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> BaseNode <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> nodeId <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context\n\n  context<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>rawNode<span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>rawNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>rawNodeChildren<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      <span class=\"token function\">getBaseNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> context<span class=\"token punctuation\">,</span> rawNode<span class=\"token operator\">:</span> rawNodeChildren <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token operator\">:</span> nodeId<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> findMaxId <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> BaseNode<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> BaseNode<span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span>\n  <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>acc<span class=\"token punctuation\">,</span> childrenNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">findMaxId</span><span class=\"token punctuation\">(</span>childrenNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> acc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    node<span class=\"token punctuation\">.</span>id\n  <span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> fetchData <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>BaseNode<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> rawNode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">json</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">ROOT_PATH</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">data/d3js/collapsible-tree/data.json</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> RawNode\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">getBaseNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> context<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> rawNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Config</span> <span class=\"token operator\">=</span> ChartConfig<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> getNodeLabel<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"getNodeLabel\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>name\n<span class=\"token keyword\">const</span> getNodeId<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"getNodeId\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>id\n<span class=\"token keyword\">const</span> canBeRemoved<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"canBeRemoved\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">const</span> createChartConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rootData<span class=\"token operator\">:</span> BaseNode<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Config <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onNodeAdd<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"onNodeAdd\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>clickedNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> maxId <span class=\"token operator\">=</span> <span class=\"token function\">findMaxId</span><span class=\"token punctuation\">(</span>rootData<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> baseNode <span class=\"token operator\">=</span> <span class=\"token function\">findNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">getId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      node<span class=\"token operator\">:</span> rootData<span class=\"token punctuation\">,</span>\n      nodeId<span class=\"token operator\">:</span> clickedNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>baseNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Node not found\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> newId <span class=\"token operator\">=</span> maxId <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n    baseNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> baseNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">const</span> newNode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token operator\">:</span> newId<span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">New Node id: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    baseNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> newNode\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> onNodeRemove<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"onNodeRemove\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>clickedNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> parentNode <span class=\"token operator\">=</span> <span class=\"token function\">findParentNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">getId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      node<span class=\"token operator\">:</span> rootData<span class=\"token punctuation\">,</span>\n      nodeId<span class=\"token operator\">:</span> clickedNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>parentNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No parent node\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> nodeIndex <span class=\"token operator\">=</span> parentNode<span class=\"token punctuation\">.</span>children<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> clickedNode<span class=\"token punctuation\">.</span>id\n    <span class=\"token punctuation\">)</span>\n\n    parentNode<span class=\"token punctuation\">.</span>children<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>nodeIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> parentNode\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    canBeRemoved<span class=\"token punctuation\">,</span>\n    getNodeId<span class=\"token punctuation\">,</span>\n    getNodeLabel<span class=\"token punctuation\">,</span>\n    onNodeAdd<span class=\"token punctuation\">,</span>\n    onNodeRemove<span class=\"token punctuation\">,</span>\n    rootData<span class=\"token punctuation\">,</span>\n    rootElId<span class=\"token operator\">:</span> <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span> fetchData<span class=\"token punctuation\">,</span> createChartConfig <span class=\"token punctuation\">}</span>\n","filePath":"src/demos/collapsible-tree/collapsible-tree-chart-config.ts"},{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseType<span class=\"token punctuation\">,</span> Selection <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Point</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n  y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">CommonUIProps<span class=\"token operator\">&lt;</span>Container <span class=\"token keyword\">extends</span> BaseType<span class=\"token punctuation\">,</span> NodeDatum<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>Container<span class=\"token punctuation\">,</span> NodeDatum<span class=\"token punctuation\">,</span> Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n  <span class=\"token function-variable function\">getInitialPosition</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> NodeDatum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Point\n  <span class=\"token function-variable function\">getPosition</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> NodeDatum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Point\n  linkDefaultColor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  openCloseAnimationDuration<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> CommonUIProps<span class=\"token punctuation\">,</span> Point <span class=\"token punctuation\">}</span>\n","filePath":"src/demos/collapsible-tree/collapsible-tree-chart-ui-common.ts"},{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseType<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> Selection<span class=\"token punctuation\">,</span> linkHorizontal <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CommonUIProps<span class=\"token punctuation\">,</span> Point <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart-ui-common\"</span>\n\n<span class=\"token keyword\">const</span> treeLinkPathClass <span class=\"token operator\">=</span> <span class=\"token string\">\"tree-link\"</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">DiagonalLink</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> source<span class=\"token operator\">:</span> Point<span class=\"token punctuation\">;</span> target<span class=\"token operator\">:</span> Point <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">UILinkOpts<span class=\"token operator\">&lt;</span>Container <span class=\"token keyword\">extends</span> BaseType<span class=\"token punctuation\">,</span> NodeDatum<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> CommonUIProps<span class=\"token operator\">&lt;</span>\n  Container<span class=\"token punctuation\">,</span>\n  NodeDatum\n<span class=\"token operator\">></span>\n\n<span class=\"token comment\">/**\n * Responsible for handle the UI of the link, without any knowledge of the node\n * tree structure, with a constraint on the link data.\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UILink<span class=\"token operator\">&lt;</span>\n  Container <span class=\"token keyword\">extends</span> BaseType<span class=\"token punctuation\">,</span>\n  LinkDatum <span class=\"token keyword\">extends</span> DiagonalLink<span class=\"token punctuation\">,</span>\n  NodeDatum\n<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> initialOpts<span class=\"token operator\">:</span> UILinkOpts<span class=\"token operator\">&lt;</span>Container<span class=\"token punctuation\">,</span> NodeDatum<span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> linkG<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> NodeDatum<span class=\"token punctuation\">,</span> Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> linkPath<span class=\"token operator\">:</span> Link<span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> DiagonalLink<span class=\"token punctuation\">,</span> Point<span class=\"token operator\">></span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>opts<span class=\"token operator\">:</span> UILinkOpts<span class=\"token operator\">&lt;</span>Container<span class=\"token punctuation\">,</span> NodeDatum<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialOpts <span class=\"token operator\">=</span> opts\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>linkPath <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">linkHorizontal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>DiagonalLink<span class=\"token punctuation\">,</span> Point<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>diagonalNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> diagonalNode<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>diagonalNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> diagonalNode<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>linkG <span class=\"token operator\">=</span> opts<span class=\"token punctuation\">.</span>container\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">.</span>linkDefaultColor<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-width\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>opts<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">getData</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>LinkDatum<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>linkData<span class=\"token operator\">:</span> LinkDatum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span>\n    source<span class=\"token operator\">:</span> NodeDatum\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      initialOpts<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        getInitialPosition<span class=\"token punctuation\">,</span>\n        getPosition<span class=\"token punctuation\">,</span>\n        openCloseAnimationDuration<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      linkG<span class=\"token punctuation\">,</span>\n      linkPath<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getData<span class=\"token punctuation\">,</span> source <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> opts\n\n    <span class=\"token keyword\">const</span> linkSelection <span class=\"token operator\">=</span> linkG\n      <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGPathElement<span class=\"token punctuation\">,</span> LinkDatum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> linkEnter <span class=\"token operator\">=</span> linkSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">,</span> treeLinkPathClass<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> diagonalNode <span class=\"token operator\">=</span> <span class=\"token function\">getInitialPosition</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> diagonalLink <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> source<span class=\"token operator\">:</span> diagonalNode<span class=\"token punctuation\">,</span> target<span class=\"token operator\">:</span> diagonalNode <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">linkPath</span><span class=\"token punctuation\">(</span>diagonalLink<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    linkSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>linkEnter<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span>openCloseAnimationDuration<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">linkPath</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    linkSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span>openCloseAnimationDuration<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> diagonalNode <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> diagonalLink <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> source<span class=\"token operator\">:</span> diagonalNode<span class=\"token punctuation\">,</span> target<span class=\"token operator\">:</span> diagonalNode <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">linkPath</span><span class=\"token punctuation\">(</span>diagonalLink<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>linkG<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGPathElement<span class=\"token punctuation\">,</span> LinkDatum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>treeLinkPathClass<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","filePath":"src/demos/collapsible-tree/collapsible-tree-chart-ui-link.ts"},{"content":"<span class=\"token keyword\">import</span> anime <span class=\"token keyword\">from</span> <span class=\"token string\">\"animejs\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseType<span class=\"token punctuation\">,</span> Selection<span class=\"token punctuation\">,</span> select <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CommonUIProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart-ui-common\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UISmallButton <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart-ui-small-button\"</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">UINodeOpts<span class=\"token operator\">&lt;</span>Container <span class=\"token keyword\">extends</span> BaseType<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> CommonUIProps<span class=\"token operator\">&lt;</span>\n  Container<span class=\"token punctuation\">,</span>\n  Datum\n<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>\n  Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">displayRemoveButton</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nodeData<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>\n    <span class=\"token function-variable function\">getNodeId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nodeData<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>\n    <span class=\"token function-variable function\">getPointingLinkForNode</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n      nodeData<span class=\"token operator\">:</span> Datum\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Selection<span class=\"token operator\">&lt;</span>SVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> SVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n    <span class=\"token function-variable function\">getText</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nodeData<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>\n    <span class=\"token function-variable function\">hasDescendants</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>\n  <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> nodeCircleClass <span class=\"token operator\">=</span> <span class=\"token string\">\"node-circle\"</span>\n<span class=\"token keyword\">const</span> nodeLabelClass <span class=\"token operator\">=</span> <span class=\"token string\">\"node-label\"</span>\n\n<span class=\"token comment\">/**\n * Responsible for handle the UI of the node, without any knowledge of the node\n * tree structure (it doesn't know how the children nodes are referenced)\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UINode<span class=\"token operator\">&lt;</span>Container <span class=\"token keyword\">extends</span> BaseType<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> initialOpts<span class=\"token operator\">:</span> UINodeOpts<span class=\"token operator\">&lt;</span>Container<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> nodeG<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> Datum<span class=\"token punctuation\">,</span> Element<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> hoveredItems <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> plusButton<span class=\"token operator\">:</span> UISmallButton<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> Datum<span class=\"token punctuation\">,</span> SVGGElement<span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> minusButton<span class=\"token operator\">:</span> UISmallButton<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> Datum<span class=\"token punctuation\">,</span> SVGGElement<span class=\"token operator\">></span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> circleLinkForEffect<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>\n    SVGCircleElement<span class=\"token punctuation\">,</span>\n    Datum<span class=\"token punctuation\">,</span>\n    Element<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">unknown</span>\n  <span class=\"token operator\">></span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>opts<span class=\"token operator\">:</span> UINodeOpts<span class=\"token operator\">&lt;</span>Container<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialOpts <span class=\"token operator\">=</span> opts\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nodeG <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialOpts<span class=\"token punctuation\">.</span>container\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointer-events\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>circleLinkForEffect <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialOpts<span class=\"token punctuation\">.</span>container\n      <span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"circle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\":first-child\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>plusButton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UISmallButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      dx<span class=\"token operator\">:</span> <span class=\"token string\">\"0px\"</span><span class=\"token punctuation\">,</span>\n      fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"20px\"</span><span class=\"token punctuation\">,</span>\n      text<span class=\"token operator\">:</span> <span class=\"token string\">\"+\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>minusButton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UISmallButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      dx<span class=\"token operator\">:</span> <span class=\"token string\">\"-15px\"</span><span class=\"token punctuation\">,</span>\n      fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"25px\"</span><span class=\"token punctuation\">,</span>\n      text<span class=\"token operator\">:</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>opts<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">getData</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>Datum<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>nodeData<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span>\n    <span class=\"token function-variable function\">onNodeAdd</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n    <span class=\"token function-variable function\">onNodeClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n    <span class=\"token function-variable function\">onNodeRemove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n    source<span class=\"token operator\">:</span> Datum\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> source <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> opts\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      circleLinkForEffect<span class=\"token punctuation\">,</span>\n      hoveredItems<span class=\"token punctuation\">,</span>\n      initialOpts<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        displayRemoveButton<span class=\"token punctuation\">,</span>\n        getInitialPosition<span class=\"token punctuation\">,</span>\n        getNodeId<span class=\"token punctuation\">,</span>\n        getPointingLinkForNode<span class=\"token punctuation\">,</span>\n        getPosition<span class=\"token punctuation\">,</span>\n        getText<span class=\"token punctuation\">,</span>\n        hasDescendants<span class=\"token punctuation\">,</span>\n        linkDefaultColor<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\n    <span class=\"token keyword\">const</span> nodeSelection <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nodeG\n      <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>opts<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">circleDefaultFill</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hasDescendants</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> hoveredItems<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"blue\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"green\"</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"red\"</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> nodeEnter <span class=\"token operator\">=</span> nodeSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token function\">getInitialPosition</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>position<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>position<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill-opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> treeNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        opts<span class=\"token punctuation\">.</span><span class=\"token function\">onNodeClick</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    nodeEnter\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"circle\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">,</span> nodeCircleClass<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-width\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> textDX <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n    nodeEnter\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">,</span> nodeLabelClass<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dy\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"5px\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-size\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20px\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>getText<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">lower</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-linejoin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"round\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-width\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> minusButton<span class=\"token punctuation\">,</span> plusButton <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\n    <span class=\"token keyword\">const</span> buttons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>plusButton<span class=\"token punctuation\">,</span> minusButton<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showButtonsIfNecessary</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>container<span class=\"token operator\">:</span> SVGGElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      buttons<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        button<span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          container<span class=\"token punctuation\">,</span>\n          <span class=\"token function-variable function\">filterFn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            button <span class=\"token operator\">===</span> minusButton <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">displayRemoveButton</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    nodeEnter\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseenter\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onMouseEnter</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> focusedTreeNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        hoveredItems<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>focusedTreeNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token generic-function\"><span class=\"token function\">select</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">select</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGCircleElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"circle\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> circleDefaultFill<span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">showButtonsIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">const</span> pointingLink <span class=\"token operator\">=</span> <span class=\"token function\">getPointingLinkForNode</span><span class=\"token punctuation\">(</span>focusedTreeNode<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pointingLink<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">}</span>\n\n        pointingLink<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">)</span>\n        circleLinkForEffect<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">const</span> animePath <span class=\"token operator\">=</span> anime<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span>pointingLink<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> SVGElement<span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">anime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          duration<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n          easing<span class=\"token operator\">:</span> <span class=\"token string\">\"easeInOutSine\"</span><span class=\"token punctuation\">,</span>\n          endDelay<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n          loop<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          targets<span class=\"token operator\">:</span> circleLinkForEffect<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          translateX<span class=\"token operator\">:</span> <span class=\"token function\">animePath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          translateY<span class=\"token operator\">:</span> <span class=\"token function\">animePath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseleave\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onMouseLeave</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> focusedTreeNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        hoveredItems<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>focusedTreeNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token generic-function\"><span class=\"token function\">select</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">select</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGCircleElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"circle\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> circleDefaultFill<span class=\"token punctuation\">)</span>\n\n        buttons<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          button<span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            container<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">const</span> pointingLink <span class=\"token operator\">=</span> <span class=\"token function\">getPointingLinkForNode</span><span class=\"token punctuation\">(</span>focusedTreeNode<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pointingLink<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">}</span>\n\n        circleLinkForEffect<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n\n        pointingLink<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> linkDefaultColor<span class=\"token punctuation\">)</span>\n        anime<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>circleLinkForEffect<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    nodeSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>nodeEnter<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialOpts<span class=\"token punctuation\">.</span>openCloseAnimationDuration<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>position<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>position<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill-opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> groupsToUpdate <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>nodeSelection<span class=\"token punctuation\">,</span> nodeEnter<span class=\"token punctuation\">]</span>\n\n    groupsToUpdate<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nodeGroup<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      plusButton<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        container<span class=\"token operator\">:</span> nodeGroup<span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nodeDatum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          opts<span class=\"token punctuation\">.</span><span class=\"token function\">onNodeAdd</span><span class=\"token punctuation\">(</span>nodeDatum<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      minusButton<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        container<span class=\"token operator\">:</span> nodeGroup<span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>nodeDatum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          opts<span class=\"token punctuation\">.</span><span class=\"token function\">onNodeRemove</span><span class=\"token punctuation\">(</span>nodeDatum<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      nodeGroup<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">setupHover</span><span class=\"token punctuation\">(</span>nodeDatum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> isHovered <span class=\"token operator\">=</span> hoveredItems<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>nodeDatum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHovered<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">showButtonsIfNecessary</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      nodeGroup<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cursor\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token function\">hasDescendants</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"pointer\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span>\n      <span class=\"token punctuation\">)</span>\n\n      nodeGroup\n        <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGCircleElement<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodeCircleClass<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> circleDefaultFill<span class=\"token punctuation\">)</span>\n\n      nodeGroup\n        <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGCircleElement<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodeLabelClass<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dx\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n          <span class=\"token function\">hasDescendants</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>textDX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>textDX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token function\">hasDescendants</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">6</span> <span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text-anchor\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n          <span class=\"token function\">hasDescendants</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"end\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"start\"</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> sourcePosition <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n\n    nodeSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialOpts<span class=\"token punctuation\">.</span>openCloseAnimationDuration<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sourcePosition<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sourcePosition<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill-opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","filePath":"src/demos/collapsible-tree/collapsible-tree-chart-ui-node.ts"},{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BaseType<span class=\"token punctuation\">,</span> Selection<span class=\"token punctuation\">,</span> select <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">UISmallButtonOpts</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  dx<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  fontSize<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  text<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UISmallButton<span class=\"token operator\">&lt;</span>\n  Element <span class=\"token keyword\">extends</span> BaseType<span class=\"token punctuation\">,</span>\n  Datum<span class=\"token punctuation\">,</span>\n  ElementAbove <span class=\"token keyword\">extends</span> BaseType\n<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> className<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> initialOpts<span class=\"token operator\">:</span> UISmallButtonOpts\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>opts<span class=\"token operator\">:</span> UISmallButtonOpts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">small-button-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialOpts <span class=\"token operator\">=</span> opts\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    container<span class=\"token punctuation\">,</span>\n    onClick<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    container<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>Element<span class=\"token punctuation\">,</span> Datum<span class=\"token punctuation\">,</span> ElementAbove<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n    <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>datum<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      initialOpts<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> dx<span class=\"token punctuation\">,</span> fontSize<span class=\"token punctuation\">,</span> text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token keyword\">const</span> groupSelection <span class=\"token operator\">=</span> container\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,-10px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"display\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cursor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pointer\"</span><span class=\"token punctuation\">)</span>\n\n    groupSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"circle\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cy\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#ddd\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-size\"</span><span class=\"token punctuation\">,</span> fontSize<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> textSelection <span class=\"token operator\">=</span> groupSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-size\"</span><span class=\"token punctuation\">,</span> fontSize<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n\n    groupSelection\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseenter\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        textSelection<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseleave\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        textSelection<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>clickEvent<span class=\"token punctuation\">,</span> datum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        clickEvent<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>datum<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token generic-function\"><span class=\"token function\">hide</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ContainerElement <span class=\"token keyword\">extends</span> SVGElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    container<span class=\"token punctuation\">,</span>\n    filterFn<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    container<span class=\"token operator\">:</span> ContainerElement\n    filterFn<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>itemData<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token generic-function\"><span class=\"token function\">select</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ContainerElement<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGTextElement<span class=\"token punctuation\">,</span> Datum<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>className<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"display\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>itemData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token operator\">!</span>filterFn <span class=\"token operator\">||</span> <span class=\"token function\">filterFn</span><span class=\"token punctuation\">(</span>itemData<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"none\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"block\"</span>\n      <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","filePath":"src/demos/collapsible-tree/collapsible-tree-chart-ui-small-button.ts"},{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  D3DragEvent<span class=\"token punctuation\">,</span>\n  HierarchyPointLink<span class=\"token punctuation\">,</span>\n  HierarchyPointNode<span class=\"token punctuation\">,</span>\n  Selection<span class=\"token punctuation\">,</span>\n  drag<span class=\"token punctuation\">,</span>\n  hierarchy<span class=\"token punctuation\">,</span>\n  select<span class=\"token punctuation\">,</span>\n  tree <span class=\"token keyword\">as</span> treeD3<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UILink <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart-ui-link\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UINode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree-chart-ui-node\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">\"./collapsible-tree.module.css\"</span>\n\n<span class=\"token keyword\">const</span> inlineStyles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  linkDefaultColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#555\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">NodeShape<span class=\"token operator\">&lt;</span>Content<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Content <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>NodeShape<span class=\"token operator\">&lt;</span>Content<span class=\"token operator\">>></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> findNode <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  getId<span class=\"token punctuation\">,</span>\n  node<span class=\"token punctuation\">,</span>\n  nodeId<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>\n  node<span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span>\n  nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> nodeId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> node\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">reduce</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>acc<span class=\"token punctuation\">,</span> otherNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      acc <span class=\"token operator\">??</span> <span class=\"token function\">findNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> getId<span class=\"token punctuation\">,</span> node<span class=\"token operator\">:</span> otherNode<span class=\"token punctuation\">,</span> nodeId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> findParentNode <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  getId<span class=\"token punctuation\">,</span>\n  node<span class=\"token punctuation\">,</span>\n  nodeId<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>\n  node<span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span>\n  nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span>children<span class=\"token operator\">?.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> hasNode <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>otherNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span>otherNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> nodeId<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> node\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">reduce</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NodeShape<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>acc<span class=\"token punctuation\">,</span> otherNode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      acc <span class=\"token operator\">??</span> <span class=\"token function\">findParentNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> getId<span class=\"token punctuation\">,</span> node<span class=\"token operator\">:</span> otherNode<span class=\"token punctuation\">,</span> nodeId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> BaseData <span class=\"token operator\">&amp;</span>\n  NodeShape<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n    _children<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>HierarchyPointNode<span class=\"token operator\">&lt;</span>ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">>>></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>\n    x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n    x0<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n    y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n    y0<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n  <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> margin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  bottom<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  left<span class=\"token operator\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>\n  right<span class=\"token operator\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>\n  top<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> openCloseAnimationDuration <span class=\"token operator\">=</span> <span class=\"token number\">750</span>\n<span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">800</span> <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>bottom\n\n<span class=\"token keyword\">const</span> getChartNode <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  initialNode<span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>initialNode<span class=\"token punctuation\">,</span>\n  _children<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n  children<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>initialNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>subNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token function\">getChartNode</span><span class=\"token punctuation\">(</span>subNode<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  x0<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  y0<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> setupDrag <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>SelectionData<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  svgG<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> SelectionData<span class=\"token punctuation\">,</span> HTMLElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> translateOffset <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> margin<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span>\n\n  <span class=\"token keyword\">const</span> draggedState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> dragHandler <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">drag</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGSVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"drag\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>dragEvent<span class=\"token operator\">:</span> D3DragEvent<span class=\"token operator\">&lt;</span>SVGSVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      draggedState<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> dragEvent<span class=\"token punctuation\">.</span>dx\n      draggedState<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> dragEvent<span class=\"token punctuation\">.</span>dy\n\n      svgG<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>translateOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> draggedState<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n          translateOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> draggedState<span class=\"token punctuation\">.</span>y\n        <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n\n  svgG<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>translateOffset<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>translateOffset<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> svg <span class=\"token operator\">=</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span>svgG<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>parentNode <span class=\"token keyword\">as</span> SVGSVGElement<span class=\"token punctuation\">)</span>\n\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cursor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"move\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>dragHandler<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ChartConfig<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">canBeRemoved</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>\n  <span class=\"token function-variable function\">getNodeId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span>\n  <span class=\"token function-variable function\">getNodeLabel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>\n  <span class=\"token function-variable function\">onNodeAdd</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> NodeShape<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span>\n  <span class=\"token function-variable function\">onNodeRemove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> NodeShape<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span>\n  rootData<span class=\"token operator\">:</span> NodeShape<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span>\n  rootElId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> renderChart <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>chartConfig<span class=\"token operator\">:</span> ChartConfig<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> rootData<span class=\"token punctuation\">,</span> rootElId <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> chartConfig\n\n  <span class=\"token keyword\">const</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>rootElId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLElement\n\n  rootEl<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span>collapsibleTreeChart<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span>\n    rootEl<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>left\n\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token operator\">=</span> HierarchyPointNode<span class=\"token operator\">&lt;</span>ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">>></span>\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">TreeLink</span> <span class=\"token operator\">=</span> HierarchyPointLink<span class=\"token operator\">&lt;</span>ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">>></span>\n\n  <span class=\"token keyword\">const</span> dataNodeRoot <span class=\"token operator\">=</span> <span class=\"token function\">getChartNode</span><span class=\"token punctuation\">(</span>rootData<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> rootHierarchy <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">hierarchy</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span>dataNodeRoot<span class=\"token punctuation\">)</span>\n\n  rootHierarchy<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>x0 <span class=\"token operator\">=</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n  rootHierarchy<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>y0 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">const</span> buildTree <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">treeD3</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nodeSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> rootTree <span class=\"token operator\">=</span> <span class=\"token function\">buildTree</span><span class=\"token punctuation\">(</span>rootHierarchy<span class=\"token punctuation\">)</span>\n\n  rootTree<span class=\"token punctuation\">.</span><span class=\"token function\">descendants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>_children <span class=\"token operator\">=</span> treeNode<span class=\"token punctuation\">.</span>children\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">.</span>depth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      treeNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> svgG <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">select</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGElement<span class=\"token punctuation\">,</span> TreeNode<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rootElId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> margin<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">setupDrag</span><span class=\"token punctuation\">(</span>svgG<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> commonUIOpts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    container<span class=\"token operator\">:</span> svgG<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getInitialPosition</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>x0<span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>y0<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getPosition</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    linkDefaultColor<span class=\"token operator\">:</span> inlineStyles<span class=\"token punctuation\">.</span>linkDefaultColor<span class=\"token punctuation\">,</span>\n    openCloseAnimationDuration<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> uiLink <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UILink<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> TreeLink<span class=\"token punctuation\">,</span> TreeNode<span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span>commonUIOpts<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> uiNode <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UINode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>commonUIOpts<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">displayRemoveButton</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">canBeRemoved</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getNodeId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getPointingLinkForNode</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      uiLink\n        <span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span>\n            chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">unknown</span> <span class=\"token keyword\">as</span> Selection<span class=\"token operator\">&lt;</span>SVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> SVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getText</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeLabel</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">hasDescendants</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>children<span class=\"token operator\">?.</span>length<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">update</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>source<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> nodes <span class=\"token operator\">=</span> rootTree<span class=\"token punctuation\">.</span><span class=\"token function\">descendants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> links <span class=\"token operator\">=</span> rootTree<span class=\"token punctuation\">.</span><span class=\"token function\">links</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">buildTree</span><span class=\"token punctuation\">(</span>rootHierarchy<span class=\"token punctuation\">)</span>\n\n    uiNode<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">getData</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        nodes<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">onNodeAdd</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>clickedTreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> newNodeData <span class=\"token operator\">=</span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">onNodeAdd</span><span class=\"token punctuation\">(</span>clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> newDataNode <span class=\"token operator\">=</span> <span class=\"token function\">getChartNode</span><span class=\"token punctuation\">(</span>newNodeData<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> newNodeHirarchy <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">hierarchy</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span>\n          newDataNode\n        <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> TreeNode\n\n        <span class=\"token comment\">// @ts-expect-error</span>\n        newNodeHirarchy<span class=\"token punctuation\">.</span>depth <span class=\"token operator\">=</span> clickedTreeNode<span class=\"token punctuation\">.</span>depth <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        newNodeHirarchy<span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> clickedTreeNode\n\n        clickedTreeNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span>\n          clickedTreeNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">??</span> clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>_children <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>_children <span class=\"token operator\">=</span> clickedTreeNode<span class=\"token punctuation\">.</span>children\n        clickedTreeNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newNodeHirarchy<span class=\"token punctuation\">)</span>\n\n        clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>children <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newNodeHirarchy<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n        window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>clickedTreeNode<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">onNodeClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        treeNode<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> treeNode<span class=\"token punctuation\">.</span>children\n          <span class=\"token operator\">?</span> <span class=\"token keyword\">undefined</span>\n          <span class=\"token operator\">:</span> treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>_children\n\n        <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">onNodeRemove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>clickedTreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> parentNode <span class=\"token operator\">=</span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">onNodeRemove</span><span class=\"token punctuation\">(</span>clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">const</span> treeNode <span class=\"token operator\">=</span> <span class=\"token function\">findNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token function-variable function\">getId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          node<span class=\"token operator\">:</span> rootHierarchy<span class=\"token punctuation\">,</span>\n          nodeId<span class=\"token operator\">:</span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>parentNode <span class=\"token keyword\">as</span> ChartNode<span class=\"token operator\">&lt;</span>BaseData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> TreeNode\n\n        <span class=\"token keyword\">const</span> nodeIndex <span class=\"token operator\">=</span> treeNode<span class=\"token punctuation\">.</span>children<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span>\n            chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>clickedTreeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n\n        treeNode<span class=\"token punctuation\">.</span>children<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>nodeIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      source<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    uiLink<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">getData</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        links<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span>treeLink<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> chartConfig<span class=\"token punctuation\">.</span><span class=\"token function\">getNodeId</span><span class=\"token punctuation\">(</span>treeLink<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      source<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    rootTree<span class=\"token punctuation\">.</span><span class=\"token function\">eachBefore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>treeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>x0 <span class=\"token operator\">=</span> treeNode<span class=\"token punctuation\">.</span>x\n      treeNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>y0 <span class=\"token operator\">=</span> treeNode<span class=\"token punctuation\">.</span>y\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>rootTree<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> NodeShape<span class=\"token punctuation\">,</span> findNode<span class=\"token punctuation\">,</span> findParentNode<span class=\"token punctuation\">,</span> ChartConfig<span class=\"token punctuation\">,</span> renderChart <span class=\"token punctuation\">}</span>\n","filePath":"src/demos/collapsible-tree/collapsible-tree-chart.ts"}],"page":{"content":"<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DemoPageProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/common\"</span>\n\n<span class=\"token keyword\">import</span> Demo <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/components/demo\"</span>\n\n<span class=\"token keyword\">import</span> main<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CONTAINER_ID</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/demos/collapsible-tree/collapsible-tree\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">CollapsibleTree</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> pageContext <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> DemoPageProps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Demo</span></span> <span class=\"token attr-name\">main</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>main<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">pageContext</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageContext<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Demo</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> CollapsibleTree\n","type":"tsx"}},"key":"collapsible-tree"},"meta":{"description":"Collapsible Tree example using D3.js, with circular nodes and styled links. With transitions, it manages the text placing depending if the node is expanded."}}},
    "staticQueryHashes": []}