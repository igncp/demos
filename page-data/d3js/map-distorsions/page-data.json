{"componentChunkName":"component---src-pages-d-3-js-map-distorsions-js","path":"/d3js/map-distorsions/","result":{"pageContext":{"demoInfo":{"data":["data.tsv"],"name":"Map Distorsions","notes":["Dynamic (for performance) shadow","Custom color scale related to index","Tooltip and minor style changes"],"sources":["http://bl.ocks.org/mbostock/3709000"],"category":"d3js","files":{"js":"const main = () => {\n  const margin = {\n    bottom: 20,\n    left: 200,\n    right: 40,\n    top: 90,\n  }\n  const width = $(\"#chart\").innerWidth() - margin.left - margin.right\n  const height = 750 - margin.top - margin.bottom\n  const colors = [\"#7C7CC9\", \"#429742\", \"#63BD28\", \"#D14141\"]\n  const dimensions = [\n    {\n      name: \"name\",\n      scale: d3.scale.ordinal().rangePoints([0, height]),\n      type: String,\n    },\n    {\n      name: \"Acc. 40ยบ 150%\",\n      scale: d3.scale.linear().range([0, height]),\n      type: Number,\n    },\n    {\n      name: \"Scale\",\n      scale: d3.scale.linear().range([height, 0]),\n      type: Number,\n    },\n    {\n      name: \"Areal\",\n      scale: d3.scale.sqrt().range([height, 0]),\n      type: Number,\n    },\n    {\n      name: \"Angular\",\n      scale: d3.scale.linear().range([height, 0]),\n      type: Number,\n    },\n  ]\n  const svg = d3utils.svg(\"#chart\", width, height, margin)\n  const title =\n    \"Comparison of 41 map projections by four different types of distortion. Lower is better.\"\n\n  d3utils.middleTitle(svg, width, title, -60)\n\n  const x = d3.scale\n    .ordinal()\n    .domain(dimensions.map((d) => d.name))\n    .rangePoints([0, width])\n  const line = d3.svg.line().defined((d) => !isNaN(d[1]))\n  const yAxis = d3.svg.axis().orient(\"left\")\n  const dimension = svg\n    .selectAll(\".dimension\")\n    .data(dimensions)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", (d) => `translate(${x(d.name)})`)\n\n  d3.tsv(\"/data/d3js/map-distorsions/data.tsv\", (data) => {\n    d3utils.filterColor(\"lines\", svg, 2, 0.4)\n    data = _.sortBy(data, \"name\")\n\n    const colorFn = d3utils.colorsScale(colors, [0, data.length - 1])\n\n    dimensions.forEach((dimItem) =>\n      dimItem.scale.domain(\n        dimItem.type === Number\n          ? d3.extent(data, (d) => +d[dimItem.name])\n          : data.map((d) => d[dimItem.name]).sort()\n      )\n    )\n\n    const draw = function (d) {\n      return line(\n        dimensions.map((dimItem) => [\n          x(dimItem.name),\n          dimItem.scale(d[dimItem.name]),\n        ])\n      )\n    }\n\n    const tooltipText = function (d) {\n      const vals = _.map(\n        [\"Acc. 40ยบ 150%\", \"Scale\", \"Areal\", \"Angular\"],\n        (item) => String(Number(d[item]).toFixed(2))\n      )\n\n      return `${d.name}:  ${vals.join(\" - \")}`\n    }\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"background\")\n      .selectAll(\"path\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr({\n        d: draw,\n        \"data-title\": tooltipText,\n      })\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"foreground\")\n      .selectAll(\"path\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr({\n        d: draw,\n        \"data-title\": tooltipText,\n      })\n    dimension\n      .append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function (d) {\n        return d3.select(this).call(yAxis.scale(d.scale))\n      })\n      .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text((d) => d.name)\n    svg\n      .select(\".axis\")\n      .selectAll(\"text:not(.title)\")\n      .attr(\"class\", \"label\")\n      .data(data, (d) => d.name || d)\n      .style({\n        fill(_d, i) {\n          return colorFn(i)\n        },\n      })\n\n    const moveToFront = function () {\n      return this.parentNode.appendChild(this)\n    }\n\n    const mouseover = function (d) {\n      svg.selectAll(\".foreground path\").style({\n        filter: \"none\",\n      })\n      svg.classed(\"active\", true)\n      projection.classed(\"inactive\", (p) => p !== d)\n\n      return projection.filter((p) => p === d).each(moveToFront)\n    }\n\n    const mouseout = function () {\n      svg.selectAll(\".foreground path\").style({\n        filter: \"url(#drop-shadow-lines)\",\n      })\n      svg.classed(\"active\", false)\n      projection.classed(\"inactive\", false)\n    }\n\n    svg.selectAll(\".foreground path\").style({\n      filter: \"url(#drop-shadow-lines)\",\n      stroke(_d, i) {\n        return colorFn(i)\n      },\n    })\n\n    const projection = svg\n      .selectAll(\".axis text,.background path,.foreground path\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout)\n\n    d3utils.tooltip(\".background path, .foreground path\", {\n      followMouse: true,\n      leftOffst: 100,\n      topOffst: 50,\n    })\n  })\n}\n\nexport default main\n","page":"import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/map-distorsions/map-distorsions\"\n\nimport \"@/demos/map-distorsions/map-distorsions.styl\"\n\nconst MapDistorsions = ({ pageContext: { demoInfo } }) => (\n  <Demo\n    demoInfo={demoInfo}\n    main={main}\n    scripts={[\"/vendors/d3/d3.min.js\", \"/js/d3js-utils.js\"]}\n  >\n    <div className=\"map-distorsions-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default MapDistorsions\n","styl":".map-distorsions-chart\n  svg\n    font-family: sans-serif;\n    text-shadow 1px 1px 1px #ddd;\n\n  .background path {\n    fill: none;\n    stroke: none;\n    stroke-width: 20px;\n    pointer-events: stroke;\n  }\n\n  .foreground path {\n    fill: none;\n    stroke-width: 1.5px;\n  }\n\n  .axis\n    font-size 12px\n\n  .axis .title {\n    font-size: 11px;\n    font-family: Times New Roman;\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n\n  .axis line,\n  .axis path {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n\n  .label {\n    -webkit-transition: fill 125ms linear;\n\n    &.inactive {\n      fill: #ccc !important;\n    }\n  }\n\n  .active .label:not(.inactive) {\n    font-weight: bold;\n  }\n\n  .foreground path.inactive {\n    stroke: #ccc !important;\n    stroke-opacity: .5;\n    stroke-width: 1px;\n  }","ts":null},"key":"map-distorsions"}}},"staticQueryHashes":[]}