{"componentChunkName":"component---src-pages-d-3-js-partition-js","path":"/d3js/partition/","result":{"pageContext":{"demoInfo":{"data":["flare.json"],"name":"Partition","notes":["Added title attributes, labels and change colors with events"],"sources":["http://bl.ocks.org/mbostock/4063423"],"category":"d3js","files":{"js":"const main = () => {\n  const stash = function (d) {\n    d.x0 = d.x\n    d.dx0 = d.dx\n  }\n\n  const arcTween = function (a) {\n    const i = d3.interpolate(\n      {\n        dx: a.dx0,\n        x: a.x0,\n      },\n      a\n    )\n\n    return function (t) {\n      const b = i(t)\n\n      a.x0 = b.x\n      a.dx0 = b.dx\n\n      return arc(b)\n    }\n  }\n\n  const addTitles = (selectors) => {\n    selectors.forEach((selector) =>\n      selector.append(\"title\").text((d) => `${d.name}\\n${d.value}`)\n    )\n  }\n\n  const width = $(\"#chart\").innerWidth()\n  const height = 700\n  const radius = Math.min(width, height) / 2\n  const colorScale = d3.scale.category20c()\n\n  const color = function (d) {\n    if (d.children) {\n      return colorScale(d.name)\n    }\n\n    return colorScale(d.parent.name)\n  }\n\n  const svg = d3\n    .select(\"#chart\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${width / 2},${height * 0.52})`)\n\n  const partition = d3.layout\n    .partition()\n    .sort(null)\n    .size([2 * Math.PI, radius * radius])\n    .value(() => 1)\n\n  const arc = d3.svg\n    .arc()\n    .startAngle((d) => d.x)\n    .endAngle((d) => d.x + d.dx)\n    .innerRadius((d) => Math.sqrt(d.y))\n    .outerRadius((d) => Math.sqrt(d.y + d.dy))\n\n  d3.json(\"/data/d3js/partition/flare.json\", (_error, root) => {\n    const arcs = svg.datum(root).selectAll(\"path\").data(partition.nodes).enter()\n    const path = arcs\n      .append(\"path\")\n      .attr({\n        d: arc,\n        \"data-index\"(_d, i) {\n          return i\n        },\n        display(d) {\n          if (d.depth) {\n            return null\n          }\n\n          return \"none\"\n        },\n      })\n      .style({\n        fill(d) {\n          return color(d)\n        },\n        \"fill-rule\": \"evenodd\",\n        stroke: \"#fff\",\n      })\n      .each(stash)\n    const texts = arcs\n      .append(\"text\")\n      .text((d) => {\n        if (d.depth < 2 && d.dx > 0.1 && d.parent) {\n          return d.name\n        }\n\n        return \"\"\n      })\n      .attr({\n        \"data-index\"(_d, i) {\n          return i\n        },\n        x(d) {\n          return arc.centroid(d)[0] - 30\n        },\n        y(d) {\n          return arc.centroid(d)[1]\n        },\n      })\n      .style({\n        cursor: \"default\",\n      })\n\n    ;[path, texts].forEach((set) =>\n      set.on(\"mouseover\", function () {\n        const index = d3.select(this).attr(\"data-index\")\n\n        d3.select(`path[data-index=\"${index}\"]`).style(\"fill\", \"#CCC\")\n\n        return d3.select(`text[data-index=\"${index}\"]`).style(\"fill\", \"#fff\")\n      })\n    )\n    ;[path, texts].forEach((set) =>\n      set.on(\"mouseout\", function () {\n        const index = d3.select(this).attr(\"data-index\")\n\n        d3.select(`path[data-index=\"${index}\"]`).style(\"fill\", color)\n\n        return d3.select(`text[data-index=\"${index}\"]`).style(\"fill\", \"#000\")\n      })\n    )\n    addTitles([path, texts])\n\n    d3.selectAll(\"input\").on(\"change\", function () {\n      const value =\n        this.value === \"count\"\n          ? function () {\n              return 1\n            }\n          : function (d) {\n              return d.size\n            }\n\n      path\n        .data(partition.value(value).nodes)\n        .transition()\n        .duration(1500)\n        .attrTween(\"d\", arcTween)\n      addTitles([path, texts])\n\n      return texts\n        .data(partition.value(value).nodes)\n        .transition()\n        .duration(1500)\n        .attr(\"x\", (d) => arc.centroid(d)[0] - 10)\n        .attr(\"y\", (d) => arc.centroid(d)[1])\n    })\n  })\n}\n\nexport default main\n","page":"import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/partition/partition\"\n\nconst Partition = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main} scripts={[\"/vendors/d3/d3.min.js\"]}>\n    <form>\n      <label>\n        <input name=\"mode\" type=\"radio\" value=\"size\" /> Size\n      </label>\n      <label>\n        <input defaultChecked name=\"mode\" type=\"radio\" value=\"count\" /> Count\n      </label>\n    </form>\n    <div className=\"partition-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default Partition\n","styl":null,"ts":null},"key":"partition"}}},"staticQueryHashes":[]}