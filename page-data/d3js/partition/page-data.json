{
    "componentChunkName": "component---src-pages-d-3-js-partition-tsx",
    "path": "/d3js/partition/",
    "result": {"pageContext":{"demoInfo":{"dataFiles":["flare.json"],"docs":[["d3-ease API reference","https://github.com/d3/d3-ease#api-reference"],["d3-ease Types","https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/d3-ease/index.d.ts"],["d3-ease functions examples","https://bl.ocks.org/d3noob/1ea51d03775b9650e8dfd03474e202fe"],["d3-fetch API reference","https://github.com/d3/d3-fetch#api-reference"],["d3-fetch Types","https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/d3-fetch/index.d.ts"],["d3-hierarchy API reference","https://github.com/d3/d3-hierarchy#api-reference"],["d3-hierarchy Types","https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/d3-hierarchy/index.d.ts"],["d3-interpolate API reference","https://github.com/d3/d3-interpolate#api-reference"],["d3-interpolate Types","https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/d3-interpolate/index.d.ts"],["d3-scale API reference","https://github.com/d3/d3-scale#api-reference"],["d3-scale Types","https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/d3-scale/index.d.ts"],["d3-selection API reference","https://github.com/d3/d3-selection#api-reference"],["d3-selection Types","https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/d3-selection/index.d.ts"],["d3-transition API reference","https://github.com/d3/d3-transition#api-reference"],["d3-transition Types","https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/d3-transition/index.d.ts"]],"isCompleted":true,"name":"Partition","notes":[],"sources":["http://bl.ocks.org/mbostock/4063423"],"summary":["This is a good example of how to uses hierarchies in combination with arc shapes. It includes a couple of ways of generating the hierarchy: via the size (value) of each leaf or via the count.","It is also illustrative about how to create custom tween functions for transitions. One possible improvement is the effect of the texts when flipping the direction during a transition due to being oriented vertical.","The chart displays the common flow for updating elements bound to data. Removing exited elements, adding new elements and applying the tween function to the selection."],"category":"d3js","files":{"demoCSS":[],"demoTS":[{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PartitionChart <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./partition-chart\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span>\n  PartitionType<span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">TYPE_FORM</span><span class=\"token punctuation\">,</span>\n  fetchData<span class=\"token punctuation\">,</span>\n  getChartConfig<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./partition-chart-config\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">main</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> rootData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> formEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TYPE_FORM</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLFormElement\n\n  <span class=\"token keyword\">const</span> getCurrentSelectedRadio <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> PartitionType <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> selectedRadio <span class=\"token operator\">=</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>\n      formEl<span class=\"token punctuation\">.</span>elements <span class=\"token keyword\">as</span> <span class=\"token builtin\">unknown</span> <span class=\"token keyword\">as</span> HTMLInputElement<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>formElement<span class=\"token operator\">:</span> HTMLInputElement<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> formElement<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> selectedRadio<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>value <span class=\"token keyword\">as</span> PartitionType\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> partitionType <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentSelectedRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> chartConfig <span class=\"token operator\">=</span> <span class=\"token function\">getChartConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    partitionType<span class=\"token punctuation\">,</span>\n    rootData<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> chart <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PartitionChart</span><span class=\"token punctuation\">(</span>chartConfig<span class=\"token punctuation\">)</span>\n\n  chart<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  formEl<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> newPartitionType <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentSelectedRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    chart<span class=\"token punctuation\">.</span><span class=\"token function\">updatePartition</span><span class=\"token punctuation\">(</span>newPartitionType<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">TYPE_FORM</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> main\n","filePath":"src/demos/partition/partition.ts"},{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> json <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChartConfig<span class=\"token punctuation\">,</span> Node<span class=\"token punctuation\">,</span> PartitionType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./partition-chart\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CONTAINER_ID</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"chart\"</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">TYPE_FORM</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"type-form\"</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">DataNode</span> <span class=\"token operator\">=</span> Node<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  size<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">json</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">ROOT_PATH</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">data/d3js/partition/flare.json</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">unknown</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>DataNode<span class=\"token operator\">></span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Config</span> <span class=\"token operator\">=</span> ChartConfig<span class=\"token operator\">&lt;</span>DataNode<span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> getNodeSize<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"getNodeSize\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>size\n<span class=\"token keyword\">const</span> getNodeLabel<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"getNodeLabel\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>name\n<span class=\"token keyword\">const</span> getNodeTitle<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">[</span><span class=\"token string\">\"getNodeTitle\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> nodeData<span class=\"token punctuation\">,</span> valueNum <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodeData<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>valueNum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getChartConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  partitionType<span class=\"token punctuation\">,</span>\n  rootData<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  partitionType<span class=\"token operator\">:</span> PartitionType\n  rootData<span class=\"token operator\">:</span> DataNode\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  getNodeLabel<span class=\"token punctuation\">,</span>\n  getNodeSize<span class=\"token punctuation\">,</span>\n  getNodeTitle<span class=\"token punctuation\">,</span>\n  partitionType<span class=\"token punctuation\">,</span>\n  rootData<span class=\"token punctuation\">,</span>\n  rootElId<span class=\"token operator\">:</span> <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">TYPE_FORM</span><span class=\"token punctuation\">,</span> fetchData<span class=\"token punctuation\">,</span> getChartConfig<span class=\"token punctuation\">,</span> PartitionType <span class=\"token punctuation\">}</span>\n","filePath":"src/demos/partition/partition-chart-config.ts"},{"content":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  D3DragEvent<span class=\"token punctuation\">,</span>\n  HierarchyRectangularNode<span class=\"token punctuation\">,</span>\n  Selection<span class=\"token punctuation\">,</span>\n  arc <span class=\"token keyword\">as</span> arcD3<span class=\"token punctuation\">,</span>\n  drag <span class=\"token keyword\">as</span> dragD3<span class=\"token punctuation\">,</span>\n  easeBounce<span class=\"token punctuation\">,</span>\n  easeLinear<span class=\"token punctuation\">,</span>\n  hierarchy<span class=\"token punctuation\">,</span>\n  interpolate<span class=\"token punctuation\">,</span>\n  partition <span class=\"token keyword\">as</span> partitionD3<span class=\"token punctuation\">,</span>\n  scaleOrdinal<span class=\"token punctuation\">,</span>\n  schemePastel2<span class=\"token punctuation\">,</span>\n  select<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"d3\"</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Node<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> NodeData <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span>\n  chidren<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">&lt;</span>NodeData<span class=\"token operator\">>></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> HierarchyRectangularNode<span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>></span>\n\n<span class=\"token keyword\">enum</span> PartitionType <span class=\"token punctuation\">{</span>\n  Count <span class=\"token operator\">=</span> <span class=\"token string\">\"count\"</span><span class=\"token punctuation\">,</span>\n  Size <span class=\"token operator\">=</span> <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">700</span>\n<span class=\"token keyword\">const</span> overColor <span class=\"token operator\">=</span> <span class=\"token string\">\"#de7c03\"</span>\n<span class=\"token keyword\">const</span> transitionDuration <span class=\"token operator\">=</span> <span class=\"token number\">2000</span>\n<span class=\"token keyword\">const</span> easeFn <span class=\"token operator\">=</span> easeBounce\n\n<span class=\"token keyword\">const</span> extractTweenObj <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  depth<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>depth<span class=\"token punctuation\">,</span>\n  x0<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>x0<span class=\"token punctuation\">,</span>\n  x1<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>x1<span class=\"token punctuation\">,</span>\n  y0<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>y0<span class=\"token punctuation\">,</span>\n  y1<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>y1<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> getInterpolatorFn <span class=\"token operator\">=</span>\n  <span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    fn<span class=\"token punctuation\">,</span>\n    initialData<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span>\n    initialData<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>finalNode<span class=\"token punctuation\">,</span> nodeIndex<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>nodeIndex<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> initialNode <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> initialData\n\n    <span class=\"token keyword\">const</span> interpolateFn <span class=\"token operator\">=</span> <span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">extractTweenObj</span><span class=\"token punctuation\">(</span>initialNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">extractTweenObj</span><span class=\"token punctuation\">(</span>finalNode<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> transitientState <span class=\"token operator\">=</span> <span class=\"token function\">interpolateFn</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>transitientState <span class=\"token keyword\">as</span> HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ChartConfig<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getNodeLabel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>\n  <span class=\"token function-variable function\">getNodeSize</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>\n  <span class=\"token function-variable function\">getNodeTitle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    nodeData<span class=\"token operator\">:</span> Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span>\n    valueNum<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span>\n  partitionType<span class=\"token operator\">:</span> PartitionType\n  rootData<span class=\"token operator\">:</span> Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span>\n  rootElId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ChartElements</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  svg<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>SVGSVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> HTMLElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n  svgDrag<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> HTMLElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n  svgG<span class=\"token operator\">:</span> Selection<span class=\"token operator\">&lt;</span>SVGGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> HTMLElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PartitionChart<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> config<span class=\"token operator\">:</span> ChartConfig<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> elements<span class=\"token operator\">:</span> ChartElements\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    descendants<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>HierarchyRectangularNode<span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>>></span>\n    drag<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> y<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n    partitionType<span class=\"token operator\">:</span> PartitionType\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">:</span> ChartConfig<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config <span class=\"token operator\">=</span> config\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> partitionType<span class=\"token punctuation\">,</span> rootElId <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> config\n\n    <span class=\"token keyword\">const</span> svg <span class=\"token operator\">=</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rootElId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> svgDrag <span class=\"token operator\">=</span> svg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> svgG <span class=\"token operator\">=</span> svgDrag<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      descendants<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      drag<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      partitionType<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>descendants <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDataHierarchy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      svg<span class=\"token punctuation\">,</span>\n      svgDrag<span class=\"token punctuation\">,</span>\n      svgG<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setupDrag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleResize<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">updatePartition</span><span class=\"token punctuation\">(</span>newPartitionType<span class=\"token operator\">:</span> PartitionType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>partitionType <span class=\"token operator\">=</span> newPartitionType\n\n    <span class=\"token keyword\">const</span> newDescendants <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDataHierarchy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>descendants <span class=\"token operator\">=</span> newDescendants\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderDescendants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDimensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      elements<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> svg<span class=\"token punctuation\">,</span> svgG <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\n    svg<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span>\n    svgG<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.52</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderDescendants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">getDimensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      config<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> rootElId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>rootElId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLElement\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> chartWidth <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> radius <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>chartWidth<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      chartWidth<span class=\"token punctuation\">,</span>\n      radius<span class=\"token punctuation\">,</span>\n      width<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">getDataHierarchy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      config<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> getNodeSize<span class=\"token punctuation\">,</span> rootData <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> partitionType <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> radius <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDimensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> dataHierarchySize <span class=\"token operator\">=</span> <span class=\"token function\">hierarchy</span><span class=\"token punctuation\">(</span>rootData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getNodeSize</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> dataHierarchyCount <span class=\"token operator\">=</span> <span class=\"token function\">hierarchy</span><span class=\"token punctuation\">(</span>rootData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> partition <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">partitionD3</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> hierarchyResult <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>\n      partitionType <span class=\"token operator\">===</span> <span class=\"token string\">\"size\"</span> <span class=\"token operator\">?</span> dataHierarchySize <span class=\"token operator\">:</span> dataHierarchyCount\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> hierarchyResult<span class=\"token punctuation\">.</span><span class=\"token function\">descendants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">setupDrag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      elements<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> svg<span class=\"token punctuation\">,</span> svgDrag <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n      dragEvent<span class=\"token operator\">:</span> D3DragEvent<span class=\"token operator\">&lt;</span>SVGSVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>drag<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> dragEvent<span class=\"token punctuation\">.</span>dx\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>drag<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> dragEvent<span class=\"token punctuation\">.</span>dy\n\n      svgDrag<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>drag<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>drag<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> dragBehavior <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">dragD3</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGSVGElement<span class=\"token punctuation\">,</span> <span class=\"token builtin\">unknown</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drag\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span>\n\n    svg\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cursor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"move\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>dragBehavior<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drag\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wheel\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">renderDescendants</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      config<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> getNodeLabel<span class=\"token punctuation\">,</span> getNodeTitle <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      elements<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> svgG <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> descendants<span class=\"token operator\">:</span> usedDescendants <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\n    <span class=\"token keyword\">const</span> colorScale <span class=\"token operator\">=</span> <span class=\"token function\">scaleOrdinal</span><span class=\"token punctuation\">(</span>schemePastel2<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">color</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      node<span class=\"token punctuation\">.</span>children\n        <span class=\"token operator\">?</span> <span class=\"token function\">colorScale</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeLabel</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token function\">colorScale</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeLabel</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>parent<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> arc <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">arcD3</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">startAngle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>x0<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">endAngle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>x1<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">innerRadius</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>y0<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">outerRadius</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>y1<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">padAngle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">textsTransform</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span>depth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">const</span> centroid <span class=\"token operator\">=</span> arc<span class=\"token punctuation\">.</span><span class=\"token function\">centroid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>node<span class=\"token punctuation\">,</span>\n        x0<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>x0 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>x0 <span class=\"token operator\">></span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> rotationDeg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> rotation <span class=\"token operator\">=</span>\n          <span class=\"token number\">90</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>x0 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>x1 <span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>x0<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span>\n\n        <span class=\"token keyword\">return</span> rotation <span class=\"token operator\">></span> <span class=\"token number\">90</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token generic-function\"><span class=\"token function\">rotation</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span> <span class=\"token number\">270</span> <span class=\"token operator\">?</span> rotation <span class=\"token operator\">-</span> <span class=\"token number\">180</span> <span class=\"token operator\">:</span> rotation\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rotate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rotationDeg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>centroid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>centroid<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>centroid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>centroid<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> pathSel <span class=\"token operator\">=</span> svgG<span class=\"token punctuation\">.</span>selectAll<span class=\"token operator\">&lt;</span>\n      SVGPathElement<span class=\"token punctuation\">,</span>\n      HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span>\n    <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> pathInitialData <span class=\"token operator\">=</span> pathSel<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> pathSel<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>usedDescendants<span class=\"token punctuation\">)</span>\n\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> pathEnter <span class=\"token operator\">=</span> path\n      <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"display\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></span></span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>depth <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-index\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> nodeIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> nodeIndex<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#000\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-width\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0.5px\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke-dasharray\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1,3\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> arc<span class=\"token punctuation\">)</span>\n\n    path\n      <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span>transitionDuration<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">ease</span><span class=\"token punctuation\">(</span>easeFn<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attrTween</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">getInterpolatorFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fn<span class=\"token operator\">:</span> arc<span class=\"token punctuation\">,</span> initialData<span class=\"token operator\">:</span> pathInitialData <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> initialTextsSel <span class=\"token operator\">=</span> svgG<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>\n      SVGTextElement<span class=\"token punctuation\">,</span>\n      HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">></span>\n    <span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> textsInitialData <span class=\"token operator\">=</span> initialTextsSel<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> initialTexts <span class=\"token operator\">=</span> initialTextsSel<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>usedDescendants<span class=\"token punctuation\">)</span>\n\n    initialTexts<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">opacityFn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> HierarchyRectangularNode<span class=\"token operator\">&lt;</span>Node<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> arcLength <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>x0 <span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>x1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> node<span class=\"token punctuation\">.</span>y1\n\n      <span class=\"token comment\">// this number is obtained empirically</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arcLength <span class=\"token operator\">&lt;</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">const</span> isAlmostVertical <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>x0 <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>x1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.2</span>\n\n      <span class=\"token keyword\">return</span> isAlmostVertical <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> textsEnter <span class=\"token operator\">=</span> initialTexts\n      <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#333\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cursor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bold 12px Arial\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text-anchor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"middle\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">,</span> nodeIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nodeIndex <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> <span class=\"token function\">getNodeLabel</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n\n        <span class=\"token keyword\">return</span> label<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> limit <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>label<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> label\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-index\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> nodeIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> nodeIndex<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> textsTransform<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> opacityFn<span class=\"token punctuation\">)</span>\n\n    initialTexts\n      <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"movement\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span>transitionDuration<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">ease</span><span class=\"token punctuation\">(</span>easeFn<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attrTween</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">getInterpolatorFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          fn<span class=\"token operator\">:</span> textsTransform<span class=\"token punctuation\">,</span>\n          initialData<span class=\"token operator\">:</span> textsInitialData<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n\n    svgG\n      <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">selectAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGTextElement<span class=\"token punctuation\">,</span> HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span>transitionDuration<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">ease</span><span class=\"token punctuation\">(</span>easeLinear<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> opacityFn<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> updatedGroups <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>pathEnter<span class=\"token punctuation\">,</span> textsEnter<span class=\"token punctuation\">]</span>\n\n    updatedGroups<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      set<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseover\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onMouseOver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nodeIndex <span class=\"token operator\">=</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-index\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">path[data-index=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodeIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> overColor<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">text[data-index=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodeIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      set<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseout\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onMouseOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nodeIndex <span class=\"token operator\">=</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-index\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token generic-function\"><span class=\"token function\">select</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SVGPathElement<span class=\"token punctuation\">,</span> HierarchyRectNode<span class=\"token operator\">&lt;</span>ChartData<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span>\n          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">path[data-index=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodeIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">text[data-index=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodeIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#000\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      set<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token function\">getNodeTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          nodeData<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n          valueNum<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token function-variable function\">handleResize</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> PartitionChart<span class=\"token punctuation\">,</span> PartitionType<span class=\"token punctuation\">,</span> Node<span class=\"token punctuation\">,</span> ChartConfig <span class=\"token punctuation\">}</span>\n","filePath":"src/demos/partition/partition-chart.ts"}],"page":{"content":"<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DemoPageProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/common\"</span>\n\n<span class=\"token keyword\">import</span> Demo <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/components/demo\"</span>\n\n<span class=\"token keyword\">import</span> main<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">TYPE_FORM</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/demos/partition/partition\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Partition</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> pageContext <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> DemoPageProps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Demo</span></span> <span class=\"token attr-name\">main</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>main<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">pageContext</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageContext<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">TYPE_FORM</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginBottom<span class=\"token operator\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>size<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> Size\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">defaultChecked</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>count<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> Count\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">CONTAINER_ID</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Demo</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Partition\n","type":"tsx"}},"key":"partition"},"meta":{"description":"Radial treemap example using D3.js, with data from a partition, where labels, mouse events and titles are added."}}},
    "staticQueryHashes": []}