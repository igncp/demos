{"componentChunkName":"component---src-pages-d-3-js-icosahedron-js","path":"/d3js/icosahedron/","result":{"pageContext":{"demoInfo":{"data":[],"name":"Icosahedron","notes":["No data bound to it, it could be to the speed, size, colors","Added color scale and the sinusoidal x velocity","Added the stop and move when clicked"],"sources":["https://gist.github.com/mbostock/7782500"],"category":"d3js","files":{"js":"const ch = {}\n\nch.setCg = function () {\n  ch.cg = {\n    color: d3.scale.category20(),\n    defaultVelocity: [1, 0.4, 0.07],\n    height: 500,\n    rotationFactor1: 1 / 1000,\n    rotationFactor2: 4,\n    t0: Date.now(),\n    width: $(\"#chart\").innerWidth(),\n    zeroVelocity: [0, 0, 0],\n  }\n}\n\nch.setDom = function () {\n  ch.dom = {\n    faces: \"\",\n    projection: d3.geo.orthographic().scale(ch.cg.height / 2 - 10),\n    svg: d3\n      .select(\"#chart\")\n      .append(\"svg\")\n      .attr(\"width\", ch.cg.width)\n      .attr(\"height\", ch.cg.height),\n  }\n}\n\nch.setVars = function () {\n  ch.vars = {\n    velocity: \"\",\n  }\n}\n\nch.icosahedronFaces = function () {\n  const faces = []\n  const y = (Math.atan2(1, 2) * 180) / Math.PI\n\n  for (let x = 0; x < 360; x += 72) {\n    faces.push(\n      [\n        [x + 0, -90],\n        [x + 0, -y],\n        [x + 72, -y],\n      ],\n      [\n        [x + 36, y],\n        [x + 72, -y],\n        [x + 0, -y],\n      ],\n      [\n        [x + 36, y],\n        [x + 0, -y],\n        [x - 36, y],\n      ],\n      [\n        [x + 36, y],\n        [x - 36, y],\n        [x - 36, 90],\n      ]\n    )\n  }\n\n  return faces\n}\n\nch.calcNewPosition = function (velocity, time, position) {\n  return [\n    velocity[0] *\n      Math.abs(Math.sin(time * ch.cg.rotationFactor1) * ch.cg.rotationFactor2) +\n      position[0],\n    velocity[1] + position[1],\n    position[2] + velocity[2],\n  ]\n}\n\nch.timer = function () {\n  const time = Date.now() - ch.cg.t0\n  const originalPos = ch.dom.projection.rotate()\n\n  ch.dom.projection.rotate(\n    ch.calcNewPosition(ch.vars.velocity, time, originalPos)\n  )\n  ch.dom.faces\n    .each((d) =>\n      d.forEach((p, i) => {\n        d.polygon[i] = ch.dom.projection(p)\n\n        return null\n      })\n    )\n    .style(\"display\", (d) => {\n      if (d.polygon.area() > 0) {\n        return null\n      }\n\n      return \"none\"\n    })\n    .attr(\"d\", (d) => `M${d.polygon.join(\"L\")}Z`)\n    .on(\"click\", () => {\n      if (String(ch.vars.velocity) === String(ch.cg.zeroVelocity)) {\n        ch.vars.velocity = ch.cg.defaultVelocity\n      }\n\n      ch.vars.velocity = ch.cg.zeroVelocity\n    })\n\n  return null\n}\n\nch.ready = function () {\n  ch.setCg()\n  ch.setDom()\n  ch.setVars()\n  ch.dom.faces = ch.dom.svg\n    .selectAll(\"path\")\n    .data(ch.icosahedronFaces)\n    .enter()\n    .append(\"path\")\n    .each((d) => {\n      d.polygon = d3.geom.polygon(d.map(ch.dom.projection))\n    })\n    .style({\n      fill(_d, index) {\n        return ch.cg.color(index)\n      },\n    })\n  ch.vars.velocity = ch.cg.defaultVelocity\n\n  return d3.timer(ch.timer)\n}\n\nexport default () => {\n  ch.ready()\n}\n","page":"import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/icosahedron/icosahedron\"\n\nimport \"@/demos/icosahedron/icosahedron.styl\"\n\nconst Icosahedron = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main} scripts={[\"/vendors/d3/d3.min.js\"]}>\n    <div className=\"icosahedron-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default Icosahedron\n","styl":".icosahedron-chart\n    path \n      fill: #f88e22;\n      stroke: #fff;\n      stroke-width: 2px; ","ts":null},"key":"icosahedron"}}},"staticQueryHashes":[]}