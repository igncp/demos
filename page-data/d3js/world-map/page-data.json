{"componentChunkName":"component---src-pages-d-3-js-world-map-js","path":"/d3js/world-map/","result":{"pageContext":{"demoInfo":{"data":["world.json"],"name":"World Map","notes":["Added the mouse over stroke and the zooming-unzooming when clicking in countries (from third source)","Click a country to zoom, click in the water to set zoom back to normal"],"sources":["http://bost.ocks.org/mike/map/","http://bl.ocks.org/mbostock/raw/4090846/world-50m.json","http://bl.ocks.org/mbostock/2206590"],"category":"d3js","files":{"js":"const main = () => {\n  let path = \"\"\n  let countries = \"\"\n\n  const width = $(\"#chart\").innerWidth()\n  const height = 500\n  const color = d3.scale.category20()\n\n  const classFn = function (d) {\n    return `country ${d.id}`\n  }\n\n  const colorFn = function (d) {\n    return color(d.id)\n  }\n\n  const mouseoverFn = function () {\n    return d3.select(this).style({\n      stroke: \"black\",\n      \"stroke-width\": \"1px\",\n    })\n  }\n\n  const mouseoutFn = function () {\n    return d3.select(this).style({\n      stroke: \"white\",\n      \"stroke-width\": \".2px\",\n    })\n  }\n\n  const setZoom = function (d) {\n    if (!d) {\n      return countries\n        .transition()\n        .duration(3500)\n        .attr(\n          \"transform\",\n          `translate(${width / 2},${height / 2})scale(${1})translate(${\n            -width / 2\n          },${-height / 2})`\n        )\n    }\n\n    const centroid = path.centroid(d)\n    const x = centroid[0]\n    const y = centroid[1]\n\n    return countries\n      .transition()\n      .duration(3500)\n      .attr(\n        \"transform\",\n        `translate(${width / 2},${height / 2})scale(${8})translate(${-x},${-y})`\n      )\n  }\n\n  let svg = d3\n    .select(\"#chart\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n  svg\n    .append(\"rect\")\n    .attr({\n      class: \"background\",\n      height,\n      width,\n    })\n    .on(\"click\", setZoom)\n    .style({\n      fill: \"#DAEDFF\",\n    })\n  svg = svg.append(\"g\")\n\n  return d3.json(\n    `${ROOT_PATH}data/d3js/world-map/world.json`,\n    (_error, world) => {\n      const projection = d3.geo\n        .mercator()\n        .center([0, 45.4])\n        .scale(150)\n        .translate([width / 2, height / 2])\n\n      path = d3.geo.path().projection(projection)\n\n      const data = topojson.feature(world, world.objects.countries).features\n\n      countries = svg\n        .selectAll(\".country\")\n        .data(data)\n        .enter()\n        .append(\"path\")\n        .attr({\n          class: classFn,\n          d: path,\n        })\n        .style({\n          fill: colorFn,\n          stroke: \"#FFF\",\n          \"stroke-width\": 0.2,\n        })\n\n      countries.on(\"mouseover\", mouseoverFn)\n      countries.on(\"mouseout\", mouseoutFn)\n      countries.on(\"click\", setZoom)\n    }\n  )\n}\n\nexport default main\n","page":"import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/world-map/world-map\"\n\nconst WorldMap = ({ pageContext: { demoInfo } }) => (\n  <Demo\n    demoInfo={demoInfo}\n    main={main}\n    scripts={[\"/vendors/d3/d3.min.js\", \"/vendors/topojson/topojson.js\"]}\n  >\n    <div className=\"world-map-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default WorldMap\n","styl":null,"ts":null},"key":"world-map"}}},"staticQueryHashes":[]}