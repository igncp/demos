{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/pie/pie.ts","webpack://demos/./src/pages/d3js/pie.js","webpack://demos/./node_modules/lodash/cloneDeep.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchData","fetch","ROOT_PATH","data","json","jsonData","stashArcs","d","ea0","cloneDeep","arc","d3","outerRadius","innerRadius","textTransform","centroidD","centroid","pie","sort","val","color","arcTween","interpolateFn","normalizedTime","PieChart","rootElId","paths","labels","render","update","Math","floor","random","length","transition","duration","attrTween","attr","each","text","width","document","getElementById","getBoundingClientRect","slices","append","selectAll","enter","_d","i","toString","filter","endAngle","startAngle","style","label","chart","addEventListener","randomVal","demoInfo","pageContext","main","className","id","type","baseClone","module","exports","CLONE_DEEP_FLAG"],"mappings":"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","file":"component---src-pages-d-3-js-pie-js-59e2b7cbf3069024691f.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import cloneDeep from \"lodash/cloneDeep\"\nimport * as d3 from \"d3\"\n\nconst fetchData = async () => {\n  const data = await fetch(`${ROOT_PATH}data/d3js/pie/data.json`)\n  const jsonData = await data.json()\n\n  return jsonData\n}\n\ntype Data = Array<{\n  ea0?: d3.PieArcDatum<Data[0]>\n  label: string\n  val: number\n}>\n\nconst height = 300\nconst outerRadius = 100\n\nconst stashArcs = (d: d3.PieArcDatum<Data[9]>) => {\n  d.data.ea0 = cloneDeep(d)\n}\n\nconst arc = d3.arc().outerRadius(outerRadius).innerRadius(0)\n\ntype ArcDatum = Omit<\n  d3.DefaultArcObject & d3.PieArcDatum<Data[0]>,\n  \"outerRadius\" | \"innerRadius\"\n>\n\nconst textTransform = (d: ArcDatum): string => {\n  const centroidD = {\n    ...d,\n    innerRadius: outerRadius / 2,\n    outerRadius,\n  }\n\n  return `translate(${arc.centroid(centroidD)})`\n}\n\nconst pie = d3\n  .pie<Data[0]>()\n  .sort(null)\n  .value((d: Data[0]) => d.val)\n\nconst color = d3.scaleOrdinal(d3.schemePastel2)\n\nconst arcTween: any = (d: d3.PieArcDatum<Data[0]>) => {\n  const interpolateFn = d3.interpolate(d.data.ea0, d)\n\n  d.data.ea0 = interpolateFn(0)\n\n  return (normalizedTime: number) => arc(interpolateFn(normalizedTime) as any)\n}\n\ntype PieChartOpts = {\n  data: Data\n  rootElId: string\n}\n\ntype ChartPaths = d3.Selection<\n  SVGPathElement,\n  d3.PieArcDatum<Data[0]>,\n  SVGGElement,\n  unknown\n>\ntype ChartLabels = d3.Selection<\n  SVGTextElement,\n  d3.PieArcDatum<Data[0]>,\n  SVGGElement,\n  unknown\n>\n\nclass PieChart {\n  private rootElId: string\n  private data: Data\n  private paths: ChartPaths | null\n  private labels: ChartLabels | null\n\n  public constructor({ data, rootElId }: PieChartOpts) {\n    this.data = data\n    this.rootElId = rootElId\n\n    this.paths = null\n    this.labels = null\n\n    this.render()\n  }\n\n  public update(val: number) {\n    const { data, paths, labels } = this\n    const index = Math.floor(Math.random() * data.length)\n\n    data[index].val = val\n    ;(paths as ChartPaths)\n      .data(pie(data))\n      .transition()\n      .duration(1000)\n      .attrTween(\"d\", arcTween)\n    ;(labels as ChartLabels)\n      .data(pie(data))\n      .transition()\n      .duration(1000)\n      .attr(\"transform\", textTransform)\n      .each(function (d: { data: Data[0] }) {\n        const el: SVGTextElement = this\n\n        d3.select(el).text(d.data.val)\n      })\n  }\n\n  private render() {\n    const { rootElId, data } = this\n    const { width } = (document.getElementById(\n      rootElId\n    ) as HTMLElement).getBoundingClientRect()\n\n    const svg = d3\n      .select(`#${rootElId}`)\n      .append(\"svg:svg\")\n      .attr(\"height\", height)\n      .attr(\"width\", width)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2},${height / 2})`)\n\n    const slices = svg\n      .selectAll(\".slice\")\n      .data(pie(data))\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"slice\")\n\n    this.paths = slices\n      .append(\"path\")\n      .attr(\"d\", arc as any)\n      .attr(\"fill\", (_d, i) => color(i.toString()))\n      .each(stashArcs)\n\n    this.labels = slices\n      .filter((d) => d.endAngle - d.startAngle > 0.2)\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dy\", \".35em\")\n      .attr(\"transform\", textTransform)\n      .style(\"fill\", \"black\")\n      .style(\"font\", \"bold 12px Arial\")\n      .text((d) => d.data.val)\n\n    slices.append(\"title\").text((d) => d.data.label)\n  }\n}\n\nconst main = async () => {\n  const data = await fetchData()\n\n  const chart = new PieChart({\n    data,\n    rootElId: \"chart\",\n  })\n\n  ;(document.getElementById(\"change-data\") as HTMLElement).addEventListener(\n    \"click\",\n    () => {\n      const randomVal = Math.floor(Math.random() * 44) + 2\n\n      chart.update(randomVal)\n    }\n  )\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/pie/pie\"\n\nconst Pie = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main}>\n    <form>\n      <button className=\"btn btn-success\" id=\"change-data\" type=\"button\">\n        Change\n      </button>\n    </form>\n    <div className=\"pie-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default Pie\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n"],"sourceRoot":""}