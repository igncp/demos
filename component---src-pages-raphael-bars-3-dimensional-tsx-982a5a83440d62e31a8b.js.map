{"version":3,"file":"component---src-pages-raphael-bars-3-dimensional-tsx-982a5a83440d62e31a8b.js","mappings":"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","sources":["webpack://demos/./src/demos/_utils/browserRaphael.ts","webpack://demos/./src/demos/bars-3dimensional/bars-3dimensional.ts","webpack://demos/./src/demos/bars-3dimensional/bars-3dimensional.module.css","webpack://demos/./src/pages/raphael/bars-3dimensional.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { RaphaelStatic } from \"raphael\"\n\nconst Raphael: RaphaelStatic =\n  typeof window === \"undefined\" ? null : require(\"raphael\")\n\nexport default Raphael\n","import { RaphaelPaper, RaphaelPath, RaphaelSet } from \"raphael\"\n\nimport Raphael from \"@/demos/_utils/browserRaphael\"\n\nimport * as styles from \"./bars-3dimensional.module.css\"\n\nconst CONTAINER_ID = \"chart\"\n\nconst fetchData = async () => {\n  const response = await fetch(\n    `${ROOT_PATH}data/raphael/bars-3dimensional/data.json`\n  )\n  const jsonResponse = await response.json()\n\n  return jsonResponse.results\n}\n\ntype CountriesMetrics = {\n  [countryName: string]: number[]\n} & {\n  keys: string[]\n  keysLength: number\n  seriesDisplayed: number\n  seriesLength: number\n}\n\ntype Config = {\n  colorScheme: string[]\n  deep: number\n  easing: string\n  heightOffset: number\n  ratio: number\n  speed: number\n  width: number\n}\n\ntype Dom = {\n  elements: {\n    [k: string]: {\n      inner?: RaphaelPath\n      outer?: RaphaelPath\n      paperSet?: RaphaelSet\n    }\n  }\n  paper: RaphaelPaper\n}\n\ntype CalcArgs = {\n  countryName: string\n  serieIndex: number\n}\n\ntype ChartOpts = {\n  countriesMetrics: CountriesMetrics\n  rootElId: string\n}\n\nclass Chart {\n  private readonly rootElId: string\n  private cg!: Config\n  private dom!: Dom\n  private countriesMetrics!: CountriesMetrics\n\n  public constructor({ countriesMetrics, rootElId }: ChartOpts) {\n    this.rootElId = rootElId\n\n    this.setCg()\n    this.setDom()\n    this.setData(countriesMetrics)\n  }\n\n  public render() {\n    this.drawAxis()\n    this.countriesMetrics.keys.forEach((countryName) => {\n      this.dom.elements[countryName].paperSet = this.dom.paper.set()\n    })\n\n    this.createCountries(this.countriesMetrics.seriesDisplayed)\n  }\n\n  public displayNextSeries() {\n    const { countriesMetrics } = this\n\n    countriesMetrics.seriesDisplayed =\n      countriesMetrics.seriesDisplayed + 1 === countriesMetrics.seriesLength\n        ? 0\n        : countriesMetrics.seriesDisplayed + 1\n\n    this.animateCountries(countriesMetrics.seriesDisplayed)\n  }\n\n  private setCg() {\n    const { width } = (\n      document.getElementById(this.rootElId) as HTMLElement\n    ).getBoundingClientRect()\n\n    this.cg = {\n      colorScheme: [\"#c1252d\", \"#5f3a5f\", \"#51a8d0\"],\n      deep: 5,\n      easing: \"bounce\",\n      heightOffset: 100,\n      ratio: 0.6,\n      speed: 800,\n      width,\n    }\n  }\n\n  private setDom() {\n    this.dom = {\n      elements: {},\n      paper: Raphael(this.rootElId, this.cg.width, 245),\n    }\n    ;(document.getElementById(this.rootElId) as HTMLElement).classList.add(\n      styles.bars3DimensionalChart\n    )\n  }\n\n  private setData(countriesMetrics: CountriesMetrics) {\n    countriesMetrics.keys = Object.keys(countriesMetrics)\n    countriesMetrics.seriesDisplayed = 0\n    countriesMetrics.seriesLength =\n      countriesMetrics[countriesMetrics.keys[0]].length\n    countriesMetrics.keysLength = countriesMetrics.keys.length\n\n    this.countriesMetrics = countriesMetrics\n\n    countriesMetrics.keys.forEach((countryName: string) => {\n      this.dom.elements[countryName] = {}\n    })\n  }\n\n  private animateCountries(serieIndex: number) {\n    const { countriesMetrics } = this\n\n    countriesMetrics.keys.forEach((countryName) => {\n      this.dom.elements[countryName].inner!.animate(\n        {\n          path: this.calcInnerPath({ countryName, serieIndex }),\n        },\n        this.cg.speed,\n        this.cg.easing\n      )\n      this.dom.elements[countryName].outer!.animate(\n        {\n          path: this.calcOuterPath({ countryName, serieIndex }),\n        },\n        this.cg.speed,\n        this.cg.easing\n      )\n\n      return this.dom.elements[countryName].paperSet!.animate(\n        {\n          fill: this.cg.colorScheme[serieIndex],\n        },\n        this.cg.speed\n      )\n    })\n  }\n\n  private drawAxis() {\n    const {\n      dom: { paper },\n    } = this\n    const {\n      cg: { deep },\n    } = this\n\n    Array.from({ length: 4 }).forEach((...[, pathIndex]) => {\n      const horizontalLineHeight = 25 * pathIndex\n      const path = `M5,${horizontalLineHeight} ${this.cg.width},${\n        this.cg.heightOffset + horizontalLineHeight\n      }`\n\n      paper.path(path).attr(\"stroke-dasharray\", \". \")\n    })\n\n    return paper\n      .path(\n        `M0,${deep + 100} ${deep},100 ${this.cg.width},${\n          100 + this.cg.heightOffset\n        } ${this.cg.width - deep},${100 + this.cg.heightOffset + deep}Z`\n      )\n      .attr(\"fill\", \"#999\")\n      .attr(\"stroke\", \"none\")\n  }\n\n  private calcH0({ countryName, serieIndex }: CalcArgs): number {\n    return 100 - this.countriesMetrics[countryName]![serieIndex]!\n  }\n\n  private calcH5({ countryName, serieIndex }: CalcArgs) {\n    return (\n      100 - this.countriesMetrics[countryName][serieIndex] + 5 * this.cg.ratio\n    )\n  }\n\n  private calcH10({ countryName, serieIndex }: CalcArgs) {\n    return (\n      100 - this.countriesMetrics[countryName][serieIndex] + 10 * this.cg.ratio\n    )\n  }\n\n  private calcInnerPath({ countryName, serieIndex }: CalcArgs) {\n    return `M0,${this.calcH5({ countryName, serieIndex })} 15,${this.calcH10({\n      countryName,\n      serieIndex,\n    })} 15,${100 + 10 * this.cg.ratio} 0,${100 + 5 * this.cg.ratio}Z`\n  }\n\n  private calcOuterPath({ countryName, serieIndex }: CalcArgs) {\n    return `M0,${this.calcH5({ countryName, serieIndex })} 5,${this.calcH0({\n      countryName,\n      serieIndex,\n    })} 20,${this.calcH5({ countryName, serieIndex })} 20,${\n      100 + 5 * this.cg.ratio\n    } 15,${100 + 10 * this.cg.ratio} 0,${100 + 5 * this.cg.ratio}Z`\n  }\n\n  private createCountries(serieIndex: number) {\n    const { countriesMetrics } = this\n    const {\n      dom: { paper },\n    } = this\n\n    return countriesMetrics.keys.forEach((...[countryName, countryIndex]) => {\n      this.dom.elements[countryName].inner = paper.path(\n        this.calcInnerPath({ countryName, serieIndex })\n      )\n      this.dom.elements[countryName].outer = paper\n        .path(this.calcOuterPath({ countryName, serieIndex }))\n        .attr(\"opacity\", 0.5)\n      this.dom.elements[countryName].paperSet!.push(\n        this.dom.elements[countryName].inner!,\n        this.dom.elements[countryName].outer!\n      )\n      this.dom.elements[countryName].paperSet!.transform(\n        `T ${(this.cg.width / countriesMetrics.keysLength) * countryIndex},` +\n          `${\n            (this.cg.heightOffset / countriesMetrics.keysLength) * countryIndex\n          }`\n      )\n\n      return this.dom.elements[countryName]\n        .paperSet!.attr(\"fill\", \"#c1252d\")\n        .attr(\"stroke\", \"none\")\n        .attr(\n          \"title\",\n          `${countryName}: ${countriesMetrics[countryName][serieIndex]}`\n        )\n    })\n  }\n}\n\nconst main = async () => {\n  const countriesMetrics = await fetchData()\n\n  const chart = new Chart({\n    countriesMetrics,\n    rootElId: CONTAINER_ID,\n  })\n\n  chart.render()\n\n  const animateButton = document.querySelector(\".animate-bars\") as HTMLElement\n\n  animateButton.addEventListener(\"click\", (clickEvent) => {\n    clickEvent.preventDefault()\n\n    chart.displayNextSeries()\n  })\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","// extracted by mini-css-extract-plugin\nexport var bars3DimensionalChart = \"bars-3dimensional-module--bars3DimensionalChart--2Z5ce\";","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/bars-3dimensional/bars-3dimensional\"\n\nconst Bars3Dimensional = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div\n      style={{\n        marginBottom: 20,\n        textAlign: \"center\",\n      }}\n    >\n      <a className=\"btn btn-info animate-bars\" href=\"\">\n        Change Series\n      </a>\n    </div>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Bars3Dimensional\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Raphael","window","require","CONTAINER_ID","fetchData","fetch","ROOT_PATH","response","json","jsonResponse","results","Chart","countriesMetrics","rootElId","this","setCg","setDom","setData","render","drawAxis","keys","forEach","countryName","dom","elements","paperSet","paper","set","createCountries","seriesDisplayed","displayNextSeries","seriesLength","animateCountries","width","document","getElementById","getBoundingClientRect","cg","colorScheme","deep","easing","heightOffset","ratio","speed","classList","add","Object","length","keysLength","serieIndex","inner","animate","path","calcInnerPath","outer","calcOuterPath","fill","Array","from","pathIndex","horizontalLineHeight","attr","calcH0","calcH5","calcH10","countryIndex","push","transform","main","chart","querySelector","addEventListener","clickEvent","preventDefault","pageContext","style","marginBottom","textAlign","className","href","id","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}