{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/collapsible-tree/collapsible-tree.js","webpack://demos/./src/pages/d3js/collapsible-tree.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","margin","rootElId","width","document","getElementById","getBoundingClientRect","height","d3","json","ROOT_PATH","_error","data","children","forEach","collapse","d","_children","root","x0","y0","i","duration","tree","layout","size","diagonal","svg","projection","y","x","select","append","attr","click","update","source","nodes","reverse","links","depth","node","selectAll","id","nodeEnter","enter","on","style","text","name","nodeUpdate","transition","nodeExit","exit","remove","link","target","insert","o","demoInfo","pageContext","main","scripts","className"],"mappings":"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","file":"component---src-pages-d-3-js-collapsible-tree-js-4b0ead6ff8eda27053b2.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const fetchData = () =>\n  new Promise((resolve) => {\n    d3.json(\n      `${ROOT_PATH}data/d3js/collapsible-tree/data.json`,\n      (_error, data) => {\n        const collapse = function (d) {\n          if (d.children) {\n            d._children = d.children\n            d._children.forEach(collapse)\n            d.children = null\n          }\n        }\n\n        data.children.forEach(collapse)\n\n        resolve(data)\n      }\n    )\n  })\n\nconst margin = {\n  bottom: 20,\n  left: 120,\n  right: 120,\n  top: 20,\n}\n\nconst main = async () => {\n  const rootElId = \"chart\"\n  const width =\n    document.getElementById(rootElId).getBoundingClientRect().width -\n    margin.right -\n    margin.left\n  const height = 800 - margin.top - margin.bottom\n\n  const root = await fetchData()\n\n  root.x0 = height / 2\n  root.y0 = 0\n\n  let i = 0\n\n  const duration = 750\n  const tree = d3.layout.tree().size([height, width])\n\n  const diagonal = d3.svg.diagonal().projection((d) => [d.y, d.x])\n  const svg = d3\n    .select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  const click = function (d) {\n    if (d.children) {\n      d._children = d.children\n      d.children = null\n    } else {\n      d.children = d._children\n      d._children = null\n    }\n\n    update(d)\n  }\n\n  const update = function (source) {\n    const nodes = tree.nodes(root).reverse()\n    const links = tree.links(nodes)\n\n    nodes.forEach((d) => {\n      d.y = d.depth * 180\n    })\n\n    const node = svg.selectAll(\"g.node\").data(nodes, (d) => {\n      if (!d.id) {\n        d.id = ++i\n      }\n\n      return d.id\n    })\n    const nodeEnter = node\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", () => `translate(${source.y0},${source.x0})`)\n      .on(\"click\", click)\n\n    nodeEnter\n      .append(\"circle\")\n      .attr(\"r\", 1e-6)\n      .style(\"fill\", (d) => {\n        if (d._children) {\n          return \"lightsteelblue\"\n        }\n\n        return \"#fff\"\n      })\n    nodeEnter\n      .append(\"text\")\n      .attr(\"x\", (d) => {\n        if (d.children || d._children) {\n          return -10\n        }\n\n        return 10\n      })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", (d) => {\n        if (d.children || d._children) {\n          return \"end\"\n        }\n\n        return \"start\"\n      })\n      .text((d) => d.name)\n      .style(\"fill-opacity\", 1e-6)\n\n    const nodeUpdate = node\n      .transition()\n      .duration(duration)\n      .attr(\"transform\", (d) => `translate(${d.y},${d.x})`)\n\n    nodeUpdate\n      .select(\"circle\")\n      .attr(\"r\", 4.5)\n      .style(\"fill\", (d) => {\n        if (d._children) {\n          return \"lightsteelblue\"\n        }\n\n        return \"#fff\"\n      })\n    nodeUpdate.select(\"text\").style(\"fill-opacity\", 1)\n\n    const nodeExit = node\n      .exit()\n      .transition()\n      .duration(duration)\n      .attr(\"transform\", () => `translate(${source.y},${source.x})`)\n      .remove()\n\n    nodeExit.select(\"circle\").attr(\"r\", 1e-6)\n    nodeExit.select(\"text\").style(\"fill-opacity\", 1e-6)\n\n    const link = svg.selectAll(\"path.link\").data(links, (d) => d.target.id)\n\n    link\n      .enter()\n      .insert(\"path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", () => {\n        const o = {\n          x: source.x0,\n          y: source.y0,\n        }\n\n        return diagonal({\n          source: o,\n          target: o,\n        })\n      })\n    link.transition().duration(duration).attr(\"d\", diagonal)\n    link\n      .exit()\n      .transition()\n      .duration(duration)\n      .attr(\"d\", () => {\n        const o = {\n          x: source.x,\n          y: source.y,\n        }\n\n        return diagonal({\n          source: o,\n          target: o,\n        })\n      })\n      .remove()\n\n    nodes.forEach((d) => {\n      d.x0 = d.x\n      d.y0 = d.y\n    })\n  }\n\n  update(root)\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/collapsible-tree/collapsible-tree\"\n\nimport \"@/demos/collapsible-tree/collapsible-tree.styl\"\n\nconst CollapsibleTree = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main} scripts={[\"/vendors/d3/d3.min.js\"]}>\n    <div className=\"collapsible-tree-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default CollapsibleTree\n"],"sourceRoot":""}