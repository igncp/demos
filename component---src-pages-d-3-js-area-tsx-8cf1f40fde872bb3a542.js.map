{"version":3,"sources":["webpack://demos/./src/demos/area/area.module.css","webpack://demos/./src/demos/area/area-chart.ts","webpack://demos/./src/demos/area/area-chart-data.ts","webpack://demos/./src/demos/area/area.ts","webpack://demos/./src/pages/d3js/area.tsx"],"names":["axis","renderChart","chartConfig","areaPoints","rootElId","elWidth","document","getElementById","getBoundingClientRect","width","isSmallDevice","margin","height","svg","select","append","attr","text","getChartTitle","style","deviation","id","slope","filter","feMerge","filterBlackOpacity","xMax","max","getItemXValue","xMin","min","yMax","getItemYValue","yMin","xScale","scaleLinear","domain","range","yScale","extractXScale","areaPoint","extractYScale","ticks","scaleQuantize","Array","from","length","map","rangeIndex","getSmallDeviceTicksScale","xAxis","axisBottom","tickFormat","format","yAxis","axisLeft","tickSize","styles","call","selectAll","area","areaD3","x","y0","y1","line","lineD3","y","datum","voronoi","Delaunay","data","enter","getItemId","voronoiGroup","renderCell","on","getItemTitle","$","tooltip","track","toggleVoronoi","currentClass","showVoronoi","newClass","includes","replace","trim","fetchData","csv","ROOT_PATH","response","point","pointIndex","incomeItem","year","percent","createChartConfig","dataPoints","addEventListener","clickEvent","preventDefault","pageContext","links","main","scripts","className","type"],"mappings":"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","file":"component---src-pages-d-3-js-area-tsx-8cf1f40fde872bb3a542.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var areaChart = \"area-module--areaChart--18U7a\";\nexport var line = \"area-module--line--2fHic\";\nexport var area = \"area-module--area--1qZz_\";\nexport var axis = \"area-module--axis--3OeLF\";\nexport var chartTitle = \"area-module--chartTitle--2vijK\";\nexport var x = \"area-module--x--3vSV5\";\nexport var minor = \"area-module--minor--3a3G3\";\nexport var y = \"area-module--y--3xyOd\";\nexport var voronoi = \"area-module--voronoi--1NIYY\";\nexport var showVoronoi = \"area-module--showVoronoi--1QHCR\";\nexport var point = \"area-module--point--29v1-\";","import {\n  Selection,\n  area as areaD3,\n  axisBottom,\n  axisLeft,\n  format,\n  line as lineD3,\n  max,\n  min,\n  scaleLinear,\n  scaleQuantize,\n  select,\n} from \"d3\"\nimport { Delaunay } from \"d3-delaunay\"\n\nimport * as styles from \"./area.module.css\"\n\nconst filterBlackOpacity = ({\n  deviation,\n  id,\n  slope,\n  svg,\n}: {\n  deviation: number\n  id: string\n  slope: number\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>\n}) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nexport type ChartConfig<AreaPoint> = {\n  areaPoints: AreaPoint[]\n  getChartTitle: () => string\n  getItemId: (areaPoint: AreaPoint) => number\n  getItemTitle: (areaPoint: AreaPoint) => string\n  getItemXValue: (areaPoint: AreaPoint) => number\n  getItemYValue: (areaPoint: AreaPoint) => number\n  rootElId: string\n}\n\ntype ChartReturn = {\n  toggleVoronoi: () => void\n}\n\nexport const renderChart = <AreaPoint>(\n  chartConfig: ChartConfig<AreaPoint>\n): ChartReturn => {\n  const { areaPoints, rootElId } = chartConfig\n  const { width: elWidth } = (document.getElementById(\n    rootElId\n  ) as HTMLElement).getBoundingClientRect()\n  const isSmallDevice = elWidth < 500\n\n  const margin = {\n    bottom: 50,\n    left: isSmallDevice ? 50 : 70,\n    right: isSmallDevice ? 10 : 50,\n    top: 50,\n  }\n\n  const height = 400 - margin.top - margin.bottom\n  const titleYOffset = -15\n  const axisTickSize = 10\n\n  const width = elWidth - margin.left - margin.right\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n    .attr(\"class\", styles.areaChart)\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", styles.chartTitle)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", `translate(${width / 2},${titleYOffset})`)\n    .text(chartConfig.getChartTitle())\n    .style(\"font-weight\", \"bold\")\n\n  filterBlackOpacity({\n    deviation: 2,\n    id: \"points\",\n    slope: 0.5,\n    svg,\n  })\n\n  const xMax = max(areaPoints, chartConfig.getItemXValue) as number\n  const xMin = min(areaPoints, chartConfig.getItemXValue) as number\n\n  const yMax = max(areaPoints, chartConfig.getItemYValue) as number\n  const yMin = min(areaPoints, chartConfig.getItemYValue) as number\n\n  const xScale = scaleLinear().domain([xMin, xMax]).range([0, width])\n  const yScale = scaleLinear()\n    .domain([yMax + 0.05, yMin - 0.05])\n    .range([0, height])\n\n  const extractXScale = (areaPoint: AreaPoint) =>\n    xScale(chartConfig.getItemXValue(areaPoint))\n  const extractYScale = (areaPoint: AreaPoint) =>\n    yScale(chartConfig.getItemYValue(areaPoint))\n\n  const getSmallDeviceTicksScale = () =>\n    scaleQuantize()\n      .domain([0, 500])\n      .range(Array.from({ length: 6 }).map((...[, rangeIndex]) => rangeIndex))\n\n  const ticks = isSmallDevice ? getSmallDeviceTicksScale()(elWidth) : null\n\n  const xAxis = axisBottom(xScale).tickFormat(format(\".0f\")).ticks(ticks)\n  const yAxis = axisLeft(yScale)\n    .tickFormat(format(\".0%\"))\n    .tickSize(axisTickSize)\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", `${styles.x} ${styles.axis}`)\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(xAxis)\n    .selectAll(\"text\")\n    .attr(\"dy\", \"1.25em\")\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", `${styles.y} ${styles.axis}`)\n    .call(yAxis)\n    .selectAll(\"text\")\n    .attr(\"dx\", \"-.25em\")\n\n  const area = areaD3<AreaPoint>().x(extractXScale).y0(height).y1(extractYScale)\n  const line = lineD3<AreaPoint>().x(extractXScale).y(extractYScale)\n\n  svg\n    .append(\"path\")\n    .datum(areaPoints)\n    .attr(\"class\", styles.line)\n    .attr(\"d\", line)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  svg\n    .append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"rect\")\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n\n  svg\n    .append(\"path\")\n    .datum(areaPoints)\n    .attr(\"class\", styles.area)\n    .attr(\"d\", area)\n    .attr(\"clip-path\", \"url(#clip)\")\n\n  const voronoi = Delaunay.from(\n    areaPoints,\n    extractXScale,\n    extractYScale\n  ).voronoi([\n    -margin.left,\n    -margin.top,\n    width + margin.right,\n    height + margin.bottom,\n  ])\n\n  const mouseover = (...[, areaPoint]: [unknown, AreaPoint]) => {\n    select(`.point-${chartConfig.getItemId(areaPoint)}`).style(\n      \"display\",\n      \"block\"\n    )\n  }\n\n  const mouseleave = (...[, areaPoint]: [unknown, AreaPoint]) => {\n    select(`.point-${chartConfig.getItemId(areaPoint)}`).style(\n      \"display\",\n      \"none\"\n    )\n  }\n\n  svg\n    .selectAll(\"circle\")\n    .data(areaPoints)\n    .enter()\n    .append(\"circle\")\n    .attr(\n      \"transform\",\n      (areaPoint: AreaPoint) =>\n        `translate(${extractXScale(areaPoint)},${extractYScale(areaPoint)})`\n    )\n    .attr(\"r\", \"5px\")\n    .attr(\n      \"class\",\n      (areaPoint) => `${styles.point} point-${chartConfig.getItemId(areaPoint)}`\n    )\n    .style(\"filter\", \"url(#drop-shadow-points)\")\n\n  const voronoiGroup = svg.append(\"g\").attr(\"class\", styles.voronoi)\n\n  voronoiGroup\n    .selectAll(\"path\")\n    .data(areaPoints)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", (areaPoint) =>\n      voronoi.renderCell(chartConfig.getItemId(areaPoint))\n    )\n    .on(\"mouseover\", mouseover)\n    .on(\"mouseleave\", mouseleave)\n    .attr(\"class\", \"voronoi-group\")\n    .attr(\"title\", chartConfig.getItemTitle)\n\n  $(\".voronoi-group\").tooltip({\n    track: true,\n  })\n\n  return {\n    toggleVoronoi: () => {\n      const currentClass = voronoiGroup.attr(\"class\")\n      const { showVoronoi } = styles\n\n      const newClass = currentClass.includes(showVoronoi)\n        ? currentClass.replace(showVoronoi, \"\").trim()\n        : `${currentClass} ${showVoronoi}`\n\n      voronoiGroup.attr(\"class\", newClass)\n    },\n  }\n}\n","import { csv } from \"d3\"\n\nimport { ChartConfig } from \"./area-chart\"\n\ntype IncomeItemBase = {\n  percent: number\n  year: number\n}\n\nexport type IncomeItem = IncomeItemBase & {\n  pointIndex: number\n}\n\nexport const fetchData = async (): Promise<IncomeItem[]> => {\n  const response = (await (csv(\n    `${ROOT_PATH}data/d3js/area/data.csv`\n  ) as unknown)) as IncomeItemBase[]\n\n  return response.map((...[point, pointIndex]) => ({\n    ...point,\n    pointIndex,\n  }))\n}\n\ntype Config = ChartConfig<IncomeItem>\n\nconst getItemXValue: Config[\"getItemXValue\"] = (incomeItem) => incomeItem.year\nconst getItemYValue: Config[\"getItemYValue\"] = (incomeItem) =>\n  incomeItem.percent / 100\nconst getItemId: Config[\"getItemId\"] = (incomeItem) => incomeItem.pointIndex\nconst getItemTitle: Config[\"getItemTitle\"] = (incomeItem: IncomeItem) =>\n  `Year: ${incomeItem.year}, Percent: ${incomeItem.percent}%`\nconst getChartTitle = () =>\n  \"Share of top decile [aka top 10%] in national income\"\n\nexport const createChartConfig = (\n  dataPoints: IncomeItem[]\n): ChartConfig<IncomeItem> => ({\n  areaPoints: dataPoints,\n  getChartTitle,\n  getItemId,\n  getItemTitle,\n  getItemXValue,\n  getItemYValue,\n  rootElId: \"chart\",\n})\n","import { renderChart } from \"./area-chart\"\nimport { IncomeItem, createChartConfig, fetchData } from \"./area-chart-data\"\n\nconst main = async () => {\n  const dataPoints = await fetchData()\n  const chartConfig = createChartConfig(dataPoints)\n\n  const { toggleVoronoi } = renderChart<IncomeItem>(chartConfig)\n\n  ;(document.getElementById(\"toggle-voronoi\") as HTMLElement).addEventListener(\n    \"click\",\n    (clickEvent: MouseEvent) => {\n      clickEvent.preventDefault()\n\n      toggleVoronoi()\n    }\n  )\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/area/area\"\n\nconst Area = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <form>\n      <button className=\"btn btn-info\" id=\"toggle-voronoi\" type=\"button\">\n        Toggle Voronoi\n      </button>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Area\n"],"sourceRoot":""}