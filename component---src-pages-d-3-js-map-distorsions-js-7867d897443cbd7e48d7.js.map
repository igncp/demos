{"version":3,"sources":["webpack://demos/./src/demos/map-distorsions/map-distorsions.js","webpack://demos/./src/pages/d3js/map-distorsions.js"],"names":["margin","bottom","left","right","top","width","$","innerWidth","height","colors","dimensions","name","scale","d3","ordinal","rangePoints","type","String","linear","range","Number","sqrt","svg","d3utils","middleTitle","x","domain","map","d","line","defined","isNaN","yAxis","axis","orient","dimension","selectAll","data","enter","append","attr","tsv","ROOT_PATH","filterColor","_","sortBy","colorFn","colorsScale","length","forEach","dimItem","extent","sort","draw","tooltipText","vals","item","toFixed","join","each","select","this","call","text","style","fill","_d","i","moveToFront","parentNode","appendChild","filter","stroke","projection","on","classed","p","tooltip","followMouse","leftOffst","topOffst","demoInfo","pageContext","main","scripts","className","id"],"mappings":"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","file":"component---src-pages-d-3-js-map-distorsions-js-7867d897443cbd7e48d7.js","sourcesContent":["const main = () => {\n  const margin = {\n    bottom: 20,\n    left: 200,\n    right: 40,\n    top: 90,\n  }\n  const width = $(\"#chart\").innerWidth() - margin.left - margin.right\n  const height = 750 - margin.top - margin.bottom\n  const colors = [\"#7C7CC9\", \"#429742\", \"#63BD28\", \"#D14141\"]\n  const dimensions = [\n    {\n      name: \"name\",\n      scale: d3.scale.ordinal().rangePoints([0, height]),\n      type: String,\n    },\n    {\n      name: \"Acc. 40ยบ 150%\",\n      scale: d3.scale.linear().range([0, height]),\n      type: Number,\n    },\n    {\n      name: \"Scale\",\n      scale: d3.scale.linear().range([height, 0]),\n      type: Number,\n    },\n    {\n      name: \"Areal\",\n      scale: d3.scale.sqrt().range([height, 0]),\n      type: Number,\n    },\n    {\n      name: \"Angular\",\n      scale: d3.scale.linear().range([height, 0]),\n      type: Number,\n    },\n  ]\n  const svg = d3utils.svg(\"#chart\", width, height, margin)\n  const title =\n    \"Comparison of 41 map projections by four different types of distortion. Lower is better.\"\n\n  d3utils.middleTitle(svg, width, title, -60)\n\n  const x = d3.scale\n    .ordinal()\n    .domain(dimensions.map((d) => d.name))\n    .rangePoints([0, width])\n  const line = d3.svg.line().defined((d) => !isNaN(d[1]))\n  const yAxis = d3.svg.axis().orient(\"left\")\n  const dimension = svg\n    .selectAll(\".dimension\")\n    .data(dimensions)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", (d) => `translate(${x(d.name)})`)\n\n  d3.tsv(`${ROOT_PATH}data/d3js/map-distorsions/data.tsv`, (data) => {\n    d3utils.filterColor(\"lines\", svg, 2, 0.4)\n    data = _.sortBy(data, \"name\")\n\n    const colorFn = d3utils.colorsScale(colors, [0, data.length - 1])\n\n    dimensions.forEach((dimItem) =>\n      dimItem.scale.domain(\n        dimItem.type === Number\n          ? d3.extent(data, (d) => +d[dimItem.name])\n          : data.map((d) => d[dimItem.name]).sort()\n      )\n    )\n\n    const draw = function (d) {\n      return line(\n        dimensions.map((dimItem) => [\n          x(dimItem.name),\n          dimItem.scale(d[dimItem.name]),\n        ])\n      )\n    }\n\n    const tooltipText = function (d) {\n      const vals = _.map(\n        [\"Acc. 40ยบ 150%\", \"Scale\", \"Areal\", \"Angular\"],\n        (item) => String(Number(d[item]).toFixed(2))\n      )\n\n      return `${d.name}:  ${vals.join(\" - \")}`\n    }\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"background\")\n      .selectAll(\"path\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr({\n        d: draw,\n        \"data-title\": tooltipText,\n      })\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"foreground\")\n      .selectAll(\"path\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr({\n        d: draw,\n        \"data-title\": tooltipText,\n      })\n    dimension\n      .append(\"g\")\n      .attr(\"class\", \"axis\")\n      .each(function (d) {\n        return d3.select(this).call(yAxis.scale(d.scale))\n      })\n      .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text((d) => d.name)\n    svg\n      .select(\".axis\")\n      .selectAll(\"text:not(.title)\")\n      .attr(\"class\", \"label\")\n      .data(data, (d) => d.name || d)\n      .style({\n        fill(_d, i) {\n          return colorFn(i)\n        },\n      })\n\n    const moveToFront = function () {\n      return this.parentNode.appendChild(this)\n    }\n\n    const mouseover = function (d) {\n      svg.selectAll(\".foreground path\").style({\n        filter: \"none\",\n      })\n      svg.classed(\"active\", true)\n      projection.classed(\"inactive\", (p) => p !== d)\n\n      return projection.filter((p) => p === d).each(moveToFront)\n    }\n\n    const mouseout = function () {\n      svg.selectAll(\".foreground path\").style({\n        filter: \"url(#drop-shadow-lines)\",\n      })\n      svg.classed(\"active\", false)\n      projection.classed(\"inactive\", false)\n    }\n\n    svg.selectAll(\".foreground path\").style({\n      filter: \"url(#drop-shadow-lines)\",\n      stroke(_d, i) {\n        return colorFn(i)\n      },\n    })\n\n    const projection = svg\n      .selectAll(\".axis text,.background path,.foreground path\")\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout)\n\n    d3utils.tooltip(\".background path, .foreground path\", {\n      followMouse: true,\n      leftOffst: 100,\n      topOffst: 50,\n    })\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/map-distorsions/map-distorsions\"\n\nimport \"@/demos/map-distorsions/map-distorsions.styl\"\n\nconst MapDistorsions = ({ pageContext: { demoInfo } }) => (\n  <Demo\n    demoInfo={demoInfo}\n    main={main}\n    scripts={[\"/vendors/d3/d3.min.js\", \"/js/d3js-utils.js\"]}\n  >\n    <div className=\"map-distorsions-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default MapDistorsions\n"],"sourceRoot":""}