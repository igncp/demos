{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/bars/bars.ts","webpack://demos/./src/pages/d3js/bars.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","margin","floor","barWidth","colours","barYFn","d","barHeightFn","BarsChart","data","rootElId","interval","chart","color","render","width","document","getElementById","getBoundingClientRect","c","d3","domain","range","heatmapColour","length","svg","append","attr","setInterval","getIntervalFn","x","y","rangeRound","xAxisG","call","style","text","yAxisG","String","drawRectangles","refresh","redraw","clearInterval","selectAll","enter","_d","i","on","unshift","pop","newX","select","transition","duration","fetchData","fetch","ROOT_PATH","rawData","json","barsChart","addItemEl","addEventListener","push","Math","random","setAttribute","demoInfo","pageContext","main","className","id","type"],"mappings":"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","file":"component---src-pages-d-3-js-bars-js-6d829ef2fdae371e4b5e.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as d3 from \"d3\"\n\ntype Data = number[]\n\nconst height = 500\nconst margin = { left: 160, top: 100 }\nconst floor = height - margin.top * 2\n\nconst barWidth = 30\nconst barHeight = 7\n\nconst colours = [\"#323247\", \"#7C7CC9\", \"#72B66C\", \"#429742\"]\nconst barYFn = (d: Data[number]) => floor - barHeight * d\nconst barHeightFn = (d: Data[number]) => d * barHeight\n\ntype BarsChartOpts = {\n  data: Data\n  rootElId: string\n}\n\ntype Interval = ReturnType<typeof setInterval>\ntype Chart = d3.Selection<SVGGElement, unknown, HTMLElement, unknown>\ntype ColorFn = (c: Data[number]) => string\n\nclass BarsChart {\n  private data: Data\n  private rootElId: string\n  private interval: Interval | null\n  private chart: Chart | null\n  private color: ColorFn | null\n\n  public constructor({ data, rootElId }: BarsChartOpts) {\n    this.data = data\n    this.rootElId = rootElId\n\n    this.interval = null\n    this.chart = null\n    this.color = null\n  }\n\n  public render() {\n    const { data, rootElId } = this\n    const { width } = (document.getElementById(\n      rootElId\n    ) as HTMLElement).getBoundingClientRect()\n\n    const c = d3\n      .scaleLinear()\n      .domain(d3.extent(data) as [number, number])\n      .range([0, 1])\n    const heatmapColour: ColorFn = d3\n      .scaleLinear()\n      .domain(d3.range(0, 1, 1.0 / colours.length))\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .range(colours as any) as any\n\n    const color = (d: Data[number]) => heatmapColour(c(d))\n\n    this.color = color as ColorFn\n\n    const svg = d3.select(`#${rootElId}`).append(\"svg\")\n\n    svg.attr(\"height\", height).attr(\"width\", width)\n\n    const chart = svg.append(\"g\")\n\n    this.chart = chart\n\n    chart.attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    this.interval = setInterval(this.getIntervalFn(), 1000)\n\n    const x = d3\n      .scaleLinear()\n      .domain([0.5, data.length + 0.5])\n      .range([1, barWidth * data.length])\n\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data) as number])\n      .rangeRound([0, -1 * barHeight * (d3.max(data) as number)])\n\n    const xAxisG = chart.append(\"g\")\n\n    xAxisG\n      .attr(\"class\", \"x-axis axis\")\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(d3.axisBottom(x))\n\n    xAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(${(barWidth * data.length) / 2} ,0)`)\n      .attr(\"class\", \"x-axis-label\")\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Number\")\n\n    const yAxisG = chart.append(\"g\")\n\n    yAxisG\n      .attr(\"class\", \"x-axis axis\")\n      .attr(\"transform\", `translate(0,${floor})`)\n      .call(d3.axisLeft(y))\n\n    yAxisG\n      .append(\"text\")\n      .attr(\"transform\", `translate(-30,${String((-1 * (height - 60)) / 2)})`)\n      .attr(\"y\", 40)\n      .attr(\"font-size\", \"1.3em\")\n      .attr(\"fill\", \"black\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Value\")\n\n    this.drawRectangles()\n  }\n\n  public refresh() {\n    this.drawRectangles()\n    this.redraw()\n  }\n\n  private clearInterval() {\n    if (this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  private drawRectangles() {\n    const { data, chart, color } = this\n\n    ;(chart as Chart)\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (_d: unknown, i: number) => barWidth * i)\n      .attr(\"y\", barYFn)\n      .attr(\"width\", barWidth)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", (d: Data[number]) => (color as ColorFn)(d))\n      .on(\"mouseover\", () => {\n        this.clearInterval()\n      })\n      .on(\"mouseleave\", () => {\n        this.clearInterval()\n        this.interval = setInterval(this.getIntervalFn(), 1000)\n      })\n      .append(\"title\")\n      .text((d: Data[number]) => d)\n  }\n\n  private getIntervalFn() {\n    return () => {\n      const { data } = this\n\n      data.unshift(data.pop() as Data[0])\n      this.redraw()\n    }\n  }\n\n  private redraw() {\n    const { data, chart, color } = this\n\n    if (!chart) {\n      return\n    }\n\n    const newX = d3\n      .scaleLinear()\n      .domain([0.5, data.length + 0.5])\n      .range([1, barWidth * data.length])\n\n    chart\n      .select(\".x-axis\")\n      .transition()\n      .duration(500)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .call(d3.axisBottom(newX) as any)\n\n    chart\n      .select(\".x-axis-label\")\n      .transition()\n      .duration(500)\n      .attr(\"transform\", `translate(${(barWidth * data.length) / 2} ,0)`)\n\n    chart\n      .selectAll(\"rect\")\n      .data(data)\n      .transition()\n      .duration(500)\n      .attr(\"y\", barYFn)\n      .attr(\"height\", barHeightFn)\n      .attr(\"fill\", color as ColorFn)\n      .select(\"title\")\n      .text((d: Data[number]) => d)\n  }\n}\n\nconst fetchData = async (): Promise<Data> => {\n  const rawData = await fetch(`${ROOT_PATH}data/d3js/bars/data.json`)\n  const data = await rawData.json()\n\n  return data\n}\n\nconst main = async () => {\n  const data = await fetchData()\n\n  const barsChart = new BarsChart({\n    data,\n    rootElId: \"chart\",\n  })\n\n  barsChart.render()\n\n  const addItemEl = document.getElementById(\"add-item\") as HTMLElement\n\n  addItemEl.addEventListener(\"click\", () => {\n    if (data.length < 20) {\n      data.push(Math.floor(Math.random() * (d3.max(data) as number)) + 1)\n      barsChart.refresh()\n    } else {\n      addItemEl.setAttribute(\"disabled\", \"disabled\")\n    }\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/bars/bars\"\n\nimport \"@/demos/bars/bars.styl\"\n\nconst Bars = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main}>\n    <form>\n      <button className=\"btn btn-info\" id=\"add-item\" type=\"button\">\n        Add item\n      </button>\n    </form>\n    <div className=\"bars-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default Bars\n"],"sourceRoot":""}