{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/weekly-heatmap/weekly-heatmap.module.css","webpack://demos/./src/demos/weekly-heatmap/weekly-heatmap-chart.ts","webpack://demos/./src/demos/weekly-heatmap/weekly-heatmap-data.ts","webpack://demos/./src/demos/weekly-heatmap/weekly-heatmap.ts","webpack://demos/./src/pages/d3js/weekly-heatmap.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","mono","axisBold","colors","buckets","length","margin","renderChart","chartConfig","rootElId","weeklyData","rootEl","document","getElementById","classList","add","horizontalLabels","verticalLabels","width","getBoundingClientRect","height","Math","ceil","cellSize","floor","legendElementWidth","max","maxD3","cell","getItemValue","colorScale","scaleQuantile","domain","range","svg","select","append","attr","selectAll","data","enter","text","label","labelIndex","styles","getIsVerticalLabelBold","_label","style","getIsHorizontalLabelBold","cellItem","getItemHorizontalIndex","getItemVerticalIndex","getItemTooltip","transition","duration","$","tooltip","legend","concat","quantiles","legendValue","_value","valueIndex","getLegendText","days","hours","Array","from","map","_","hourIndex","fetchData","tsv","ROOT_PATH","weeklyTSVData","timeItem","arbitraryMetric","day","hour","_hour","_day","dayIndex","toFixed","createChartConfig","pageContext","links","main","scripts","id"],"mappings":"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","file":"component---src-pages-d-3-js-weekly-heatmap-tsx-31a369da888e5d3c9777.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var weeklyHeatmapChart = \"weekly-heatmap-module--weeklyHeatmapChart--3k92Q\";\nexport var bordered = \"weekly-heatmap-module--bordered--2Vfqv\";\nexport var mono = \"weekly-heatmap-module--mono--1FY_w\";\nexport var axisBold = \"weekly-heatmap-module--axisBold--ymVm3\";","import { max as maxD3, scaleQuantile, select } from \"d3\"\n\nimport * as styles from \"./weekly-heatmap.module.css\"\n\nconst colors = [\n  \"#ffffd9\",\n  \"#edf8b1\",\n  \"#c7e9b4\",\n  \"#7fcdbb\",\n  \"#41b6c4\",\n  \"#1d91c0\",\n  \"#225ea8\",\n  \"#253494\",\n  \"#081d58\",\n]\nconst { length: buckets } = colors\n\nconst margin = {\n  bottom: 100,\n  left: 50,\n  right: 50,\n  top: 50,\n}\n\nconst rectRadiusSize = 100\nconst extraHeight = 60\nconst axisOffset = -6\n\nconst legendStroke = \"#ccc\"\n\nexport type ChartConfig<ChartData> = {\n  getIsHorizontalLabelBold: (label: string, labelIndex: number) => boolean\n  getIsVerticalLabelBold: (label: string, labelIndex: number) => boolean\n  getItemHorizontalIndex: (cell: ChartData) => number\n  getItemTooltip: (cell: ChartData) => string\n  getItemValue: (cell: ChartData) => number\n  getItemVerticalIndex: (cell: ChartData) => number\n  getLegendText: (cellValue: number) => string\n  horizontalLabels: string[]\n  rootElId: string\n  verticalLabels: string[]\n  weeklyData: ChartData[]\n}\n\nexport const renderChart = <ChartData>(chartConfig: ChartConfig<ChartData>) => {\n  const { rootElId, weeklyData } = chartConfig\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.weeklyHeatmapChart)\n\n  const { horizontalLabels, verticalLabels } = chartConfig\n\n  const width =\n    rootEl.getBoundingClientRect().width - margin.left - margin.right\n  const height =\n    Math.ceil((width * 10) / horizontalLabels.length) -\n    margin.top -\n    margin.bottom +\n    extraHeight\n  const cellSize = Math.floor(width / horizontalLabels.length)\n  const legendElementWidth = cellSize * 2\n\n  const max = maxD3(weeklyData, (cell) => chartConfig.getItemValue(cell))\n\n  const colorScale = scaleQuantile<string>()\n    .domain([0, buckets - 1, max])\n    .range(colors)\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  svg\n    .selectAll(\".verticalLabel\")\n    .data(verticalLabels)\n    .enter()\n    .append(\"text\")\n    .text((label) => label)\n    .attr(\n      \"class\",\n      (label, labelIndex) =>\n        `verticalLabel ${styles.mono} axis${\n          chartConfig.getIsVerticalLabelBold(label, labelIndex)\n            ? ` ${styles.axisBold}`\n            : \"\"\n        }`\n    )\n    .attr(\"transform\", `translate(${axisOffset},${cellSize / 1.5})`)\n    .attr(\"x\", 0)\n    .attr(\"y\", (_label, labelIndex) => labelIndex * cellSize)\n    .style(\"text-anchor\", \"end\")\n\n  svg\n    .selectAll(\".horizontalLabel\")\n    .data(horizontalLabels)\n    .enter()\n    .append(\"text\")\n    .text((label) => label)\n    .attr(\n      \"class\",\n      (label, labelIndex) =>\n        `horizontalLabel ${styles.mono} axis${\n          chartConfig.getIsHorizontalLabelBold(label, labelIndex)\n            ? ` ${styles.axisBold}`\n            : \"\"\n        }`\n    )\n    .attr(\"transform\", `translate(${cellSize / 2}, ${axisOffset})`)\n    .attr(\"x\", (_label, labelIndex) => labelIndex * cellSize)\n    .attr(\"y\", 0)\n    .style(\"text-anchor\", \"middle\")\n\n  const heatMap = svg\n    .selectAll(\".cell\")\n    .data(weeklyData)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", `cell ${styles.bordered}`)\n    .attr(\"height\", cellSize)\n    .attr(\"rx\", rectRadiusSize)\n    .attr(\"ry\", rectRadiusSize)\n    .attr(\"width\", cellSize)\n    .attr(\n      \"x\",\n      (cellItem) => chartConfig.getItemHorizontalIndex(cellItem) * cellSize\n    )\n    .attr(\n      \"y\",\n      (cellItem) => chartConfig.getItemVerticalIndex(cellItem) * cellSize\n    )\n    .attr(\"title\", chartConfig.getItemTooltip)\n    .style(\"fill\", colors[0])\n\n  heatMap\n    .transition()\n    .duration(6000)\n    .style(\"fill\", (cellItem) => colorScale(chartConfig.getItemValue(cellItem)))\n\n  $(\".cell\").tooltip()\n\n  const legend = svg\n    .selectAll(\".legend\")\n    .data<any>([0].concat(colorScale.quantiles()), (legendValue) => legendValue)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"legend\")\n\n  legend\n    .append(\"rect\")\n    .attr(\"x\", (_value, valueIndex) => legendElementWidth * valueIndex)\n    .attr(\"y\", height)\n    .attr(\"width\", legendElementWidth)\n    .attr(\"height\", cellSize / 2)\n    .style(\"fill\", (_value, valueIndex) => colors[valueIndex])\n    .style(\"stroke\", legendStroke)\n\n  legend\n    .append(\"text\")\n    .attr(\"class\", styles.mono)\n    .text(chartConfig.getLegendText)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\n      \"x\",\n      (_value, valueIndex) =>\n        legendElementWidth * valueIndex + legendElementWidth / 2\n    )\n    .attr(\"y\", height + cellSize)\n}\n","import { tsv } from \"d3\"\n\nimport { ChartConfig } from \"./weekly-heatmap-chart\"\n\nexport type TimeItem = {\n  arbitraryMetric: number\n  day: number\n  hour: number\n}\n\nconst days = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"]\n\nconst hours = Array.from({ length: 24 }).map((_, hourIndex: number) => {\n  const num = hourIndex % 12\n\n  return `${num + 1} ${hourIndex >= 11 && hourIndex !== 23 ? \"pm\" : \"am\"}`\n})\n\nconst workingHourMin = 7\nconst workingHourMax = 16\nconst workingDayMin = 0\nconst workingDayMax = 4\n\nexport const fetchData = async (): Promise<TimeItem[]> => {\n  const weeklyTSVData: any = await tsv(\n    `${ROOT_PATH}data/d3js/weekly-heatmap/data.tsv`\n  )\n\n  return weeklyTSVData.map((timeItem: any) => ({\n    arbitraryMetric: +timeItem.value,\n    day: +timeItem.day,\n    hour: +timeItem.hour,\n  }))\n}\n\ntype Config = ChartConfig<TimeItem>\n\nconst getItemValue: Config[\"getItemValue\"] = (timeItem) =>\n  timeItem.arbitraryMetric\nconst getItemTooltip: Config[\"getItemTooltip\"] = (timeItem) =>\n  `Arbitrary Metric: ${timeItem.arbitraryMetric}`\nconst getItemHorizontalIndex: Config[\"getItemHorizontalIndex\"] = (timeItem) =>\n  timeItem.hour - 1\nconst getItemVerticalIndex: Config[\"getItemVerticalIndex\"] = (timeItem) =>\n  timeItem.day - 1\nconst getIsHorizontalLabelBold: Config[\"getIsHorizontalLabelBold\"] = (\n  _hour,\n  hourIndex\n) => hourIndex >= workingHourMin && hourIndex <= workingHourMax\n\nconst getIsVerticalLabelBold: Config[\"getIsVerticalLabelBold\"] = (\n  _day,\n  dayIndex\n) => dayIndex >= workingDayMin && dayIndex <= workingDayMax\n\nconst getLegendText: Config[\"getLegendText\"] = (arbitraryMetric) =>\n  `≥ ${arbitraryMetric.toFixed(2)}`\n\nexport const createChartConfig = (weeklyData: TimeItem[]): Config => ({\n  getIsHorizontalLabelBold,\n  getIsVerticalLabelBold,\n  getItemHorizontalIndex,\n  getItemTooltip,\n  getItemValue,\n  getItemVerticalIndex,\n  getLegendText,\n  horizontalLabels: hours,\n  rootElId: \"chart\",\n  verticalLabels: days,\n  weeklyData,\n})\n","import { renderChart } from \"./weekly-heatmap-chart\"\nimport { TimeItem, createChartConfig, fetchData } from \"./weekly-heatmap-data\"\n\nconst main = async () => {\n  const weeklyData = await fetchData()\n  const chartConfig = createChartConfig(weeklyData)\n\n  renderChart<TimeItem>(chartConfig)\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/weekly-heatmap/weekly-heatmap\"\n\nconst WeeklyHeatmap = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default WeeklyHeatmap\n"],"sourceRoot":""}