{"version":3,"sources":["webpack://demos/./src/demos/trend-line/trend-line.js","webpack://demos/./src/pages/d3js/trend-line.js"],"names":["animationTime","getInterpolation","data","line","interpolate","d3","scale","quantile","domain","range","length","t","interpolatedLine","slice","tsv","ROOT_PATH","_error","margin","width","$","innerWidth","height","timeFormat","time","format","parse","forEach","d","occurred","value","renderGraph","zoomed","select","checked","svg","text","append","attr","x","y","linear","xAxis","axis","orient","yAxis","extent","min","max","call","datum","transition","duration","attrTween","lr","n","sumX","sumY","sumXY","sumXX","sumYY","getTime","slope","intercept","r2","Math","pow","sqrt","linearRegression","regressionLine","tmp","delay","style","toExponential","selectAll","on","demoInfo","pageContext","main","scripts","name","type","className","id"],"mappings":"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","file":"component---src-pages-d-3-js-trend-line-js-b4d3afe531f65c5ac4b8.js","sourcesContent":["const main = () => {\n  const animationTime = 2000\n\n  const linearRegression = function (data) {\n    const lr = {}\n    const n = data.length\n\n    let sumX = 0\n    let sumY = 0\n    let sumXY = 0\n    let sumXX = 0\n    let sumYY = 0\n\n    data.forEach((d) => {\n      sumX += d.occurred.getTime()\n      sumY += d.value\n      sumXX += d.occurred.getTime() * d.occurred.getTime()\n      sumYY += d.value * d.value\n      sumXY += d.occurred.getTime() * d.value\n    })\n    lr.slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX)\n    lr.intercept = (sumY - lr.slope * sumX) / n\n    lr.r2 = Math.pow(\n      (n * sumXY - sumX * sumY) /\n        Math.sqrt((n * sumXX - sumX * sumX) * (n * sumYY - sumY * sumY)),\n      2\n    )\n\n    return lr\n  }\n\n  const getInterpolation = function (data, line) {\n    const interpolate = d3.scale\n      .quantile()\n      .domain([0, 1])\n      .range(d3.range(1, data.length + 1))\n\n    return function (t) {\n      const interpolatedLine = data.slice(0, interpolate(t))\n\n      return line(interpolatedLine)\n    }\n  }\n\n  return d3.tsv(`${ROOT_PATH}data/d3js/trend-line/data.tsv`, (_error, data) => {\n    const margin = {\n      bottom: 50,\n      left: 50,\n      right: 50,\n      top: 50,\n    }\n    const width = $(\"#chart\").innerWidth() - margin.left - margin.right\n    const height = 500 - margin.top - margin.bottom\n    const timeFormat = d3.time.format(\"%Y-%m-%d\").parse\n\n    data.forEach((d) => {\n      d.occurred = timeFormat(d.occurred)\n      d.value = +d.value\n    })\n\n    const renderGraph = function () {\n      const zoomed = d3.select('input[value=\"zoom\"]')[0][0].checked\n      const svg = d3\n        .select(\"#chart\")\n        .text(\"\")\n        .append(\"svg\")\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .attr(\"width\", width + margin.left + margin.right)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.right})`)\n\n      const x = d3.time.scale().range([0, width])\n      const y = d3.scale.linear().range([height, 0])\n      const xAxis = d3.svg.axis().scale(x).orient(\"bottom\")\n      const yAxis = d3.svg.axis().scale(y).orient(\"left\")\n\n      const line = d3.svg\n        .line()\n        .x((d) => x(d.occurred))\n        .y((d) => y(d.value))\n\n      x.domain(d3.extent(data, (d) => d.occurred))\n      y.domain([\n        (function () {\n          if (zoomed) {\n            return d3.min(data, (d) => d.value)\n          }\n\n          return 0\n        })(),\n        d3.max(data, (d) => d.value),\n      ])\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(xAxis)\n      svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis)\n      svg\n        .append(\"path\")\n        .datum(data)\n        .transition()\n        .duration(animationTime)\n        .attrTween(\"d\", () => getInterpolation(data, line))\n        .attr(\"class\", \"line\")\n\n      const lr = linearRegression(data)\n\n      const regressionLine = d3.svg\n        .line()\n        .x((d) => x(d.occurred))\n        .y((d) => {\n          const tmp = lr.intercept + lr.slope * d.occurred\n\n          return y(tmp)\n        })\n\n      svg\n        .append(\"path\")\n        .datum(data)\n        .transition()\n        .delay(animationTime)\n        .duration(animationTime)\n        .attrTween(\"d\", () => getInterpolation(data, regressionLine))\n        .attr(\"class\", \"rline\")\n\n      return svg\n        .append(\"text\")\n        .attr(\"transform\", `translate(${width * 0.7},${height * 0.7})`)\n        .style(\"opacity\", 0)\n        .transition(1000)\n        .delay(animationTime * 2)\n        .text(`Slope: ${lr.slope.toExponential(3)}`)\n        .style(\"opacity\", 1)\n    }\n\n    renderGraph()\n\n    return d3.selectAll('input[name=\"mode\"]').on(\"change\", renderGraph)\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/trend-line/trend-line\"\n\nimport \"@/demos/trend-line/trend-line.styl\"\n\nconst TrendLine = ({ pageContext: { demoInfo } }) => (\n  <Demo\n    demoInfo={demoInfo}\n    main={main}\n    scripts={[\"/vendors/d3/d3.min.js\", \"/js/d3js-utils.js\"]}\n  >\n    <form>\n      <label>\n        <input checked name=\"mode\" type=\"radio\" value=\"zoom\" /> Zoom\n      </label>\n      <label>\n        <input name=\"mode\" type=\"radio\" value=\"normal\" /> Normal\n      </label>\n    </form>\n    <div className=\"trend-line-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default TrendLine\n"],"sourceRoot":""}