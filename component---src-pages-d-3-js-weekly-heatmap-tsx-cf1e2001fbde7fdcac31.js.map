{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/weekly-heatmap/weekly-heatmap.module.css","webpack://demos/./src/demos/weekly-heatmap/weekly-heatmap.ts","webpack://demos/./src/pages/d3js/weekly-heatmap.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","mono","axisWorkweek","colors","buckets","length","days","hours","Array","from","map","_","index","fetchData","tsv","ROOT_PATH","data","timeItem","day","hour","margin","texts","toFixed","renderChart","rootElId","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","height","Math","ceil","cellSize","floor","legendElementWidth","max","maxD3","colorScale","scaleQuantile","domain","range","svg","select","append","attr","selectAll","enter","text","_d","dayIndex","classes","styles","style","hourStr","hourIndex","transition","duration","$","tooltip","legend","concat","quantiles","d","_value","valueIndex","pageContext","links","main","scripts","id"],"mappings":"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","file":"component---src-pages-d-3-js-weekly-heatmap-tsx-cf1e2001fbde7fdcac31.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var weeklyHeatmapChart = \"weekly-heatmap-module--weeklyHeatmapChart--3k92Q\";\nexport var bordered = \"weekly-heatmap-module--bordered--2Vfqv\";\nexport var mono = \"weekly-heatmap-module--mono--1FY_w\";\nexport var axisWorkweek = \"weekly-heatmap-module--axisWorkweek--3eDms\";\nexport var axisWorktime = \"weekly-heatmap-module--axisWorktime--1xbgX\";","import { max as maxD3, scaleQuantile, select, tsv } from \"d3\"\n\nimport * as styles from \"./weekly-heatmap.module.css\"\n\ntype TimeItem = {\n  day: number\n  hour: number\n  value: number\n}\n\nconst colors = [\n  \"#ffffd9\",\n  \"#edf8b1\",\n  \"#c7e9b4\",\n  \"#7fcdbb\",\n  \"#41b6c4\",\n  \"#1d91c0\",\n  \"#225ea8\",\n  \"#253494\",\n  \"#081d58\",\n]\nconst { length: buckets } = colors\n\nconst days = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"]\nconst hours = Array.from({ length: 24 }).map((_, index: number) => {\n  const num = index % 12\n\n  return `${num + 1} ${index >= 11 && index !== 23 ? \"pm\" : \"am\"}`\n})\n\nconst fetchData = async (): Promise<TimeItem[]> => {\n  const data: any = await tsv(`${ROOT_PATH}data/d3js/weekly-heatmap/data.tsv`)\n\n  return data.map((timeItem: TimeItem) => ({\n    day: +timeItem.day,\n    hour: +timeItem.hour,\n    value: +timeItem.value,\n  }))\n}\n\nconst margin = {\n  bottom: 100,\n  left: 50,\n  right: 50,\n  top: 50,\n}\n\nconst hoursInDay = 24\nconst rectRadiusSize = 100\nconst extraHeight = 60\nconst axisOffset = -6\n\nconst workingDayMin = 0\nconst workingDayMax = 4\nconst workingHourMin = 7\nconst workingHourMax = 16\n\nconst legendStroke = \"#ccc\"\n\nconst texts = {\n  hoursTooltip: (timeItem: TimeItem) => `Value: ${timeItem.value}`,\n  legendText: (value: number) => `â‰¥ ${value.toFixed(2)}`,\n}\n\nconst renderChart = ({\n  data,\n  rootElId,\n}: {\n  data: TimeItem[]\n  rootElId: string\n}) => {\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.weeklyHeatmapChart)\n\n  const width =\n    rootEl.getBoundingClientRect().width - margin.left - margin.right\n  const height =\n    Math.ceil((width * 10) / hoursInDay) -\n    margin.top -\n    margin.bottom +\n    extraHeight\n  const cellSize = Math.floor(width / hoursInDay)\n  const legendElementWidth = cellSize * 2\n\n  const max = maxD3(data, (timeItem) => timeItem.value)\n\n  const colorScale = scaleQuantile<string>()\n    .domain([0, buckets - 1, max])\n    .range(colors)\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  svg\n    .selectAll(\".dayLabel\")\n    .data(days)\n    .enter()\n    .append(\"text\")\n    .text((day) => day)\n    .attr(\"class\", (_d, dayIndex) => {\n      const classes = `dayLabel ${styles.mono} axis`\n\n      if (dayIndex >= workingDayMin && dayIndex <= workingDayMax) {\n        return `${classes} ${styles.axisWorkweek}`\n      }\n\n      return classes\n    })\n    .attr(\"transform\", `translate(${axisOffset},${cellSize / 1.5})`)\n    .attr(\"x\", 0)\n    .attr(\"y\", (_d, dayIndex) => dayIndex * cellSize)\n    .style(\"text-anchor\", \"end\")\n\n  svg\n    .selectAll(\".timeLabel\")\n    .data(hours)\n    .enter()\n    .append(\"text\")\n    .text((hourStr) => hourStr)\n    .attr(\"class\", (_d, hourIndex) => {\n      const classes = `timeLabel ${styles.mono} axis`\n\n      if (hourIndex >= workingHourMin && hourIndex <= workingHourMax) {\n        return `${classes} ${styles.axisWorkweek}`\n      }\n\n      return classes\n    })\n    .attr(\"transform\", `translate(${cellSize / 2}, ${axisOffset})`)\n    .attr(\"x\", (_d, hourIndex) => hourIndex * cellSize)\n    .attr(\"y\", 0)\n    .style(\"text-anchor\", \"middle\")\n\n  const heatMap = svg\n    .selectAll(\".hour\")\n    .data(data)\n    .enter()\n    .append(\"rect\")\n    .attr(\"class\", `hour ${styles.bordered}`)\n    .attr(\"height\", cellSize)\n    .attr(\"rx\", rectRadiusSize)\n    .attr(\"ry\", rectRadiusSize)\n    .attr(\"width\", cellSize)\n    .attr(\"x\", (timeItem) => (timeItem.hour - 1) * cellSize)\n    .attr(\"y\", (timeItem) => (timeItem.day - 1) * cellSize)\n    .attr(\"title\", texts.hoursTooltip)\n    .style(\"fill\", colors[0])\n\n  heatMap\n    .transition()\n    .duration(6000)\n    .style(\"fill\", (timeItem) => colorScale(timeItem.value))\n\n  $(\".hour\").tooltip()\n\n  const legend = svg\n    .selectAll(\".legend\")\n    .data<any>([0].concat(colorScale.quantiles()), (d) => d)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"legend\")\n\n  legend\n    .append(\"rect\")\n    .attr(\"x\", (_value, valueIndex) => legendElementWidth * valueIndex)\n    .attr(\"y\", height)\n    .attr(\"width\", legendElementWidth)\n    .attr(\"height\", cellSize / 2)\n    .style(\"fill\", (_value, valueIndex) => colors[valueIndex])\n    .style(\"stroke\", legendStroke)\n\n  legend\n    .append(\"text\")\n    .attr(\"class\", styles.mono)\n    .text(texts.legendText)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\n      \"x\",\n      (_value, valueIndex) =>\n        legendElementWidth * valueIndex + legendElementWidth / 2\n    )\n    .attr(\"y\", height + cellSize)\n}\n\nconst main = async () => {\n  const data = await fetchData()\n\n  renderChart({ data, rootElId: \"chart\" })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/weekly-heatmap/weekly-heatmap\"\n\nconst WeeklyHeatmap = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default WeeklyHeatmap\n"],"sourceRoot":""}