{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/trend-line/trend-line.module.css","webpack://demos/./src/demos/trend-line/trend-line.ts","webpack://demos/./src/pages/d3js/trend-line.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","axis","fetchData","tsv","ROOT_PATH","response","timeFormat","timeParse","map","responseItem","arbitraryValue","occurred","margin","height","animationTime","getInterpolation","line","lineData","interpolate","scaleQuantile","domain","range","length","t","interpolatedLine","slice","renderGraph","initialZoomed","rootElId","container","document","getElementById","classList","add","width","getBoundingClientRect","renderContent","isZoomed","svg","select","text","append","attr","x","scaleTime","y","scaleLinear","xAxis","axisBottom","yAxis","axisLeft","d3Line","lineItem","extent","min","max","styles","call","datum","transition","duration","attrTween","linearRegression","itemsNum","sumX","sumY","sumXY","sumXX","sumYY","forEach","getTime","slope","intercept","r2","Math","pow","sqrt","createLinearRegression","regressionLine","delay","style","toExponential","getIsZoomed","querySelector","checked","selectAll","on","pageContext","main","defaultChecked","name","type","id"],"mappings":"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","file":"component---src-pages-d-3-js-trend-line-tsx-4610f4d68dd27eb05764.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var trendLineChart = \"trend-line-module--trendLineChart--32KJ2\";\nexport var axis = \"trend-line-module--axis--2pFpS\";\nexport var line = \"trend-line-module--line--1IGBC\";\nexport var rline = \"trend-line-module--rline--3Goq9\";","import {\n  Line,\n  axisBottom,\n  axisLeft,\n  line as d3Line,\n  extent,\n  max,\n  min,\n  range,\n  scaleLinear,\n  scaleQuantile,\n  scaleTime,\n  select,\n  selectAll,\n  timeParse,\n  tsv,\n} from \"d3\"\n\nimport * as styles from \"./trend-line.module.css\"\n\ntype InitialDataItem = {\n  occurred: string\n  value: string // eslint-disable-line id-denylist\n}\n\ntype DataItem = {\n  arbitraryValue: number\n  occurred: Date\n}\n\nconst fetchData = async (): Promise<DataItem[]> => {\n  const response = (await tsv(\n    `${ROOT_PATH}data/d3js/trend-line/data.tsv`\n  )) as InitialDataItem[]\n\n  const timeFormat = timeParse(\"%Y-%m-%d\")\n\n  return response.map((responseItem) => ({\n    arbitraryValue: +responseItem.value,\n    occurred: timeFormat(responseItem.occurred)!,\n  }))\n}\n\nconst margin = {\n  bottom: 50,\n  left: 50,\n  right: 50,\n  top: 50,\n}\n\nconst height = 500 - margin.top - margin.bottom\n\nconst animationTime = 2000\n\nconst getInterpolation = ({\n  line,\n  lineData,\n}: {\n  line: Line<DataItem>\n  lineData: DataItem[]\n}) => () => {\n  const interpolate = scaleQuantile()\n    .domain([0, 1])\n    .range(range(1, lineData.length + 1))\n\n  return (t: number): string => {\n    const interpolatedLine = lineData.slice(0, interpolate(t))\n\n    return line(interpolatedLine)!\n  }\n}\n\nconst createLinearRegression = (lineData: DataItem[]) => {\n  const linearRegression: {\n    intercept?: number\n    r2?: number\n    slope?: number\n  } = {}\n  const { length: itemsNum } = lineData\n\n  let sumX = 0\n  let sumY = 0\n  let sumXY = 0\n  let sumXX = 0\n  let sumYY = 0\n\n  lineData.forEach((lineItem) => {\n    sumY += lineItem.arbitraryValue\n    sumYY += lineItem.arbitraryValue * lineItem.arbitraryValue\n    sumXY += lineItem.occurred.getTime() * lineItem.arbitraryValue\n\n    sumX += lineItem.occurred.getTime()\n    sumXX += lineItem.occurred.getTime() * lineItem.occurred.getTime()\n  })\n\n  linearRegression.slope =\n    (itemsNum * sumXY - sumX * sumY) / (itemsNum * sumXX - sumX * sumX)\n  linearRegression.intercept = (sumY - linearRegression.slope * sumX) / itemsNum\n  linearRegression.r2 = Math.pow(\n    (itemsNum * sumXY - sumX * sumY) /\n      Math.sqrt(\n        (itemsNum * sumXX - sumX * sumX) * (itemsNum * sumYY - sumY * sumY)\n      ),\n    2\n  )\n\n  return linearRegression\n}\n\nconst renderGraph = ({\n  initialZoomed,\n  lineData,\n  rootElId,\n}: {\n  initialZoomed: boolean\n  lineData: DataItem[]\n  rootElId: string\n}) => {\n  const container = document.getElementById(rootElId) as HTMLElement\n\n  container.classList.add(styles.trendLineChart)\n\n  const width =\n    container.getBoundingClientRect().width - margin.left - margin.right\n\n  const renderContent = (isZoomed: boolean) => {\n    const svg = select(`#${rootElId}`)\n      .text(\"\")\n      .append(\"svg\")\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .attr(\"width\", width + margin.left + margin.right)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.right})`)\n\n    const x = scaleTime().range([0, width])\n    const y = scaleLinear().range([height, 0])\n    const xAxis = axisBottom(x)\n    const yAxis = axisLeft(y)\n\n    const line = d3Line<DataItem>()\n      .x((lineItem) => x(lineItem.occurred))\n      .y((lineItem) => y(lineItem.arbitraryValue))\n\n    x.domain(extent(lineData, (lineItem) => lineItem.occurred) as [Date, Date])\n    y.domain([\n      isZoomed\n        ? (min(lineData, (lineItem) => lineItem.arbitraryValue) as number)\n        : 0,\n      max(lineData, (lineItem) => lineItem.arbitraryValue) as number,\n    ])\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", `x ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(xAxis)\n    svg.append(\"g\").attr(\"class\", `y ${styles.axis}`).call(yAxis)\n\n    svg\n      .append(\"path\")\n      .datum(lineData)\n      .transition()\n      .duration(animationTime)\n      .attrTween(\n        \"d\",\n        getInterpolation({\n          line,\n          lineData,\n        })\n      )\n      .attr(\"class\", styles.line)\n\n    const linearRegression = createLinearRegression(lineData)\n\n    const regressionLine = d3Line<DataItem>()\n      .x((lineItem) => x(lineItem.occurred))\n      .y((lineItem) =>\n        y(\n          linearRegression.intercept! +\n            linearRegression.slope! * +lineItem.occurred\n        )\n      )\n\n    svg\n      .append(\"path\")\n      .datum(lineData)\n      .transition()\n      .delay(animationTime)\n      .duration(animationTime)\n      .attrTween(\n        \"d\",\n        getInterpolation({\n          line: regressionLine,\n          lineData,\n        })\n      )\n      .attr(\"class\", styles.rline)\n\n    svg\n      .append(\"text\")\n      .attr(\"transform\", `translate(${width * 0.7},${height * 0.7})`)\n      .style(\"opacity\", 0)\n      .transition()\n      .delay(animationTime * 2)\n      .text(`Slope: ${linearRegression.slope!.toExponential(3)}`)\n      .style(\"opacity\", 1)\n  }\n\n  renderContent(initialZoomed)\n\n  return {\n    renderContent,\n  }\n}\n\nconst main = async () => {\n  const rootElId = \"chart\"\n  const lineData = await fetchData()\n\n  const getIsZoomed = () =>\n    (document.querySelector('input[value=\"zoom\"]') as HTMLInputElement).checked\n\n  const { renderContent } = renderGraph({\n    initialZoomed: getIsZoomed(),\n    lineData,\n    rootElId,\n  })\n\n  selectAll('input[name=\"mode\"]').on(\"change\", () => {\n    const isZoomed = getIsZoomed()\n\n    renderContent(isZoomed)\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/trend-line/trend-line\"\n\nconst TrendLine = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form>\n      <label>\n        <input defaultChecked name=\"mode\" type=\"radio\" value=\"zoom\" /> Zoom\n      </label>\n      <label>\n        <input name=\"mode\" type=\"radio\" value=\"normal\" /> Normal\n      </label>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default TrendLine\n"],"sourceRoot":""}