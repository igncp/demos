{"version":3,"sources":["webpack://demos/./src/demos/circular-arcs/circular-arcs.js","webpack://demos/./src/pages/raphael/circular-arcs.js"],"names":["Raphael","window","require","createArc","stroke","fill","arcI","paper","center","width","arc","circularArc","centerX","Math","pow","centerY","height","endAngle","radius","startAngle","attr","hover","this","animate","strokeWidth","rootElId","document","getElementById","getBoundingClientRect","fn","angle","endX","endY","radius1","radius2","startX","startY","arcSVG","join","path","cos","PI","sin","demoInfo","pageContext","main","className","id"],"mappings":"wKAAMA,EAA4B,oBAAXC,OAAyB,KAAOC,EAAQ,MAiCzDC,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjCC,EAASD,EAAME,OAAS,EAAIH,GAAnB,EAETI,EAAMH,EAAMI,YAAY,CAC5BC,QAASJ,EAAS,GAAKK,KAAKC,IAAIR,EAAM,KACtCS,QAASR,EAAMS,QAAU,IAAa,EAAPV,GAC/BW,SAAU,EACVC,OAAQX,EAAME,OAAS,EAAIH,GAC3Ba,WAAY,MAGdT,EACGU,KAAK,OAAQf,GACbe,KAAK,eAAgB,MACrBA,KAAK,SAAUhB,GACfgB,KAAK,eA9CU,GAgDDV,EA3CdW,OACD,WAGE,OAFAC,KAAKF,KAAK,eAAgB,MAEnBE,KAAKC,QACV,CACE,eAAgBC,KAElB,IACA,aAGJ,WAGE,OAFAF,KAAKF,KAAK,eAAgB,MAEnBE,KAAKC,QACV,CACE,eAtBU,GAwBZ,IACA,cAuFR,EArBa,WACX,IAAME,EAAW,QAGThB,EAFaiB,SAASC,eAAeF,GAEdG,wBAAvBnB,MAGFF,EAAQP,EAAQyB,EAAUhB,EAFjB,KA5CfT,EAAQ6B,GAAGnB,IAAM,YAQb,IAPFoB,EAOC,EAPDA,MACAC,EAMC,EANDA,KACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,OACAC,EACC,EADDA,OAEMC,EAAS,CAACJ,EAASC,EAASJ,EAAO,EAAG,EAAGC,EAAMC,GAAMM,KAAK,KAEhE,OAAOhB,KAAKiB,KAAL,IAAcJ,EAAd,IAAwBC,EAAxB,MAAoCC,IAG7CrC,EAAQ6B,GAAGlB,YAAc,YAMrB,IALFC,EAKC,EALDA,QACAG,EAIC,EAJDA,QACAG,EAGC,EAHDA,OACAC,EAEC,EAFDA,WACAF,EACC,EADDA,SAEMkB,EAASvB,EAAUM,EAASL,KAAK2B,IAAKrB,EAAaN,KAAK4B,GAAM,KAC9DL,EAASrB,EAAUG,EAASL,KAAK6B,IAAKvB,EAAaN,KAAK4B,GAAM,KAE9DV,EAAOnB,EAAUM,EAASL,KAAK2B,IAAKvB,EAAWJ,KAAK4B,GAAM,KAC1DT,EAAOjB,EAAUG,EAASL,KAAK6B,IAAKzB,EAAWJ,KAAK4B,GAAM,KAEhE,OAAOnB,KAAKZ,IAAI,CACdoB,MAAO,EACPC,KAAMA,EAAOI,EACbH,KAAMA,EAAOI,EACbH,QAASf,EACTgB,QAAShB,EACTiB,SACAC,YAgBJ,IAAK,IAAI9B,EAAO,EAAGA,GAAQ,KAAMA,EAC/BH,EAAU,CACRG,OACAD,KAAM,UACNE,QACAH,OAAQ,aChGd,EANqB,SAAC,GAAD,IAAkBuC,EAAlB,EAAGC,YAAeD,SAAlB,OACnB,gBAAC,IAAD,CAAMA,SAAUA,EAAUE,KAAMA,GAC9B,uBAAKC,UAAU,sBAAsBC,GAAG","file":"component---src-pages-raphael-circular-arcs-js-83f58c814c660e782bce.js","sourcesContent":["const Raphael = typeof window === \"undefined\" ? null : require(\"raphael\")\n\nconst strokeWidth = 3\n\nconst addHoverHandlers = function (el) {\n  const widthMultiplier = 2.5\n\n  el.hover(\n    function () {\n      this.attr(\"fill-opacity\", \".3\")\n\n      return this.animate(\n        {\n          \"stroke-width\": strokeWidth * widthMultiplier,\n        },\n        500,\n        \"bounce\"\n      )\n    },\n    function () {\n      this.attr(\"fill-opacity\", \".2\")\n\n      return this.animate(\n        {\n          \"stroke-width\": strokeWidth,\n        },\n        500,\n        \"bounce\"\n      )\n    }\n  )\n}\n\nconst createArc = ({ stroke, fill, arcI, paper }) => {\n  const center = paper.width / (4 + arcI) + (strokeWidth - 1)\n\n  const arc = paper.circularArc({\n    centerX: center + 30 + Math.pow(arcI, 1.5),\n    centerY: paper.height - (100 - arcI * 2),\n    endAngle: 0,\n    radius: paper.width / (4 + arcI),\n    startAngle: 180,\n  })\n\n  arc\n    .attr(\"fill\", fill)\n    .attr(\"fill-opacity\", \".2\")\n    .attr(\"stroke\", stroke)\n    .attr(\"stroke-width\", strokeWidth)\n\n  addHoverHandlers(arc)\n}\n\nconst setupNewRaphaelFns = () => {\n  Raphael.fn.arc = function ({\n    angle,\n    endX,\n    endY,\n    radius1,\n    radius2,\n    startX,\n    startY,\n  }) {\n    const arcSVG = [radius1, radius2, angle, 0, 1, endX, endY].join(\" \")\n\n    return this.path(`M${startX} ${startY} a ${arcSVG}`)\n  }\n\n  Raphael.fn.circularArc = function ({\n    centerX,\n    centerY,\n    radius,\n    startAngle,\n    endAngle,\n  }) {\n    const startX = centerX + radius * Math.cos((startAngle * Math.PI) / 180)\n    const startY = centerY + radius * Math.sin((startAngle * Math.PI) / 180)\n\n    const endX = centerX + radius * Math.cos((endAngle * Math.PI) / 180)\n    const endY = centerY + radius * Math.sin((endAngle * Math.PI) / 180)\n\n    return this.arc({\n      angle: 0,\n      endX: endX - startX,\n      endY: endY - startY,\n      radius1: radius,\n      radius2: radius,\n      startX,\n      startY,\n    })\n  }\n}\n\nconst main = function () {\n  const rootElId = \"chart\"\n  const chartWrapper = document.getElementById(rootElId)\n\n  const { width } = chartWrapper.getBoundingClientRect()\n  const height = 500\n\n  const paper = Raphael(rootElId, width, height)\n\n  setupNewRaphaelFns()\n\n  for (let arcI = 0; arcI <= 50; ++arcI) {\n    createArc({\n      arcI,\n      fill: \"#85D588\",\n      paper,\n      stroke: \"#558857\",\n    })\n  }\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/circular-arcs/circular-arcs\"\nimport \"@/demos/circular-arcs/circular-arcs.styl\"\n\nconst CircularArcs = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main}>\n    <div className=\"circular-arcs-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default CircularArcs\n"],"sourceRoot":""}