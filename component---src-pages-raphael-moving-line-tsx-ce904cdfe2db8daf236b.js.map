{"version":3,"file":"component---src-pages-raphael-moving-line-tsx-ce904cdfe2db8daf236b.js","mappings":"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","sources":["webpack://demos/./src/demos/_utils/browserRaphael.ts","webpack://demos/./src/demos/moving-line/moving-line.module.css","webpack://demos/./src/demos/moving-line/moving-line.ts","webpack://demos/./src/pages/raphael/moving-line.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { RaphaelStatic } from \"raphael\"\n\nconst Raphael: RaphaelStatic =\n  typeof window === \"undefined\" ? null : require(\"raphael\")\n\nexport default Raphael\n","// extracted by mini-css-extract-plugin\nexport var movingLineChart = \"moving-line-module--movingLineChart--1kCq_\";\nexport var point = \"moving-line-module--point--zxXJ-\";","import { RaphaelElement, RaphaelPaper, RaphaelPath } from \"raphael\"\n\nimport Raphael from \"@/demos/_utils/browserRaphael\"\n\nimport * as styles from \"./moving-line.module.css\"\n\nconst CONTAINER_ID = \"chart\"\n\ntype GraphData = {\n  charts: Array<{\n    lower: string\n    points: Array<{\n      point: RaphaelElement\n      value: number // eslint-disable-line id-denylist\n    }>\n    upper: string\n  }>\n  current: number\n  line: RaphaelPath\n  paper: RaphaelPaper\n  xDelta: number\n  xOffset: number\n  yOffset: number\n}\n\nconst fetchGraphData = async (): Promise<GraphData> => {\n  const response = await fetch(`${ROOT_PATH}data/raphael/moving-line/data.json`)\n\n  return response.json()\n}\n\nconst height = 300\n\ntype RenderChartOpts = { graphData: GraphData; rootElId: string }\n\nconst renderChart = ({ graphData, rootElId }: RenderChartOpts) => {\n  const createPathString = () => {\n    const {\n      charts: {\n        [graphData.current]: { points },\n      },\n    } = graphData\n\n    let path = `M ${graphData.xOffset} ${graphData.yOffset - points[0].value}`\n\n    points.forEach((...[point, pointIndex]) => {\n      path += \" L \"\n      path += `${graphData.xOffset + pointIndex * graphData.xDelta} `\n      path += graphData.yOffset - point.value\n    })\n\n    return path\n  }\n\n  const drawPoints = function () {\n    const radius = 6\n    const { points } = graphData.charts[0]\n\n    points.forEach((...[point, pointIndex]) => {\n      const xPos = graphData.xOffset + pointIndex * graphData.xDelta\n      const { yOffset: yPos } = graphData\n\n      const circle = graphData.paper.circle(xPos, yPos, radius)\n\n      circle.node.className.baseVal = styles.point\n      circle.attr(\"title\", `Value: ${0}`)\n      point.point = circle\n    })\n  }\n\n  const animateChart = () => {\n    const {\n      charts: { [graphData.current]: newData },\n    } = graphData\n\n    const upperLimit = parseInt(newData.upper) || 1\n    const lowerLimit = parseInt(newData.lower) || 0\n    const scaleFactor = graphData.yOffset / (upperLimit - lowerLimit)\n    const { points } = graphData.charts[0]\n\n    let newPath = \"\"\n\n    points.forEach((...[point, pointIndex]) => {\n      if (pointIndex === 0) {\n        newPath += \"M \"\n        newPath += `${graphData.xOffset} `\n        newPath += `${\n          graphData.yOffset -\n          (newData.points[pointIndex].value - lowerLimit) * scaleFactor\n        } `\n      } else {\n        newPath += \"L \"\n        newPath += `${graphData.xOffset + pointIndex * graphData.xDelta} `\n        newPath +=\n          graphData.yOffset -\n          (newData.points[pointIndex].value - lowerLimit) * scaleFactor\n      }\n\n      point.point.animate(\n        {\n          cy:\n            graphData.yOffset -\n            (newData.points[pointIndex].value - lowerLimit) * scaleFactor,\n        },\n        800,\n        \"ease-in-out\"\n      )\n      points[pointIndex].point.node.childNodes[0].remove()\n      points[pointIndex].point.attr(\n        \"title\",\n        `Value: ${newData.points[pointIndex].value}`\n      )\n    })\n\n    graphData.line.animate(\n      {\n        path: newPath,\n      },\n      800,\n      \"ease-in-out\"\n    )\n  }\n\n  const advanceGraph = function () {\n    if (graphData.current < graphData.charts.length - 1) {\n      graphData.current += 1\n    } else {\n      graphData.current = 1\n    }\n\n    animateChart()\n  }\n\n  const initLineGraph = function () {\n    const rootEl = document.getElementById(rootElId) as HTMLElement\n\n    rootEl.classList.add(styles.movingLineChart)\n\n    const { width } = rootEl.getBoundingClientRect()\n    const paper = Raphael(rootElId, width, height)\n\n    graphData.paper = paper\n\n    const path = createPathString()\n\n    const line = paper.path(path)\n\n    graphData.line = line\n    drawPoints()\n\n    setInterval(advanceGraph, 3000)\n  }\n\n  initLineGraph()\n}\n\nconst main = async () => {\n  const graphData = await fetchGraphData()\n\n  renderChart({\n    graphData,\n    rootElId: CONTAINER_ID,\n  })\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/moving-line/moving-line\"\n\nconst CircularArcs = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default CircularArcs\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Raphael","window","require","CONTAINER_ID","fetchGraphData","fetch","ROOT_PATH","response","json","renderChart","graphData","rootElId","advanceGraph","newData","upperLimit","lowerLimit","scaleFactor","points","newPath","current","charts","length","parseInt","upper","lower","yOffset","forEach","point","pointIndex","xOffset","value","xDelta","animate","cy","node","childNodes","remove","attr","line","path","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","paper","createPathString","xPos","yPos","circle","className","baseVal","styles","setInterval","initLineGraph","main","pageContext","id","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}