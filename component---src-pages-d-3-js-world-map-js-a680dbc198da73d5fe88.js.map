{"version":3,"sources":["webpack://demos/./src/demos/world-map/world-map.js","webpack://demos/./src/pages/d3js/world-map.js"],"names":["path","countries","width","$","innerWidth","height","color","d3","scale","category20","classFn","d","id","colorFn","mouseoverFn","select","this","style","stroke","mouseoutFn","setZoom","transition","duration","attr","centroid","x","y","svg","append","class","on","fill","json","_error","world","projection","geo","mercator","center","translate","data","topojson","feature","objects","features","selectAll","enter","demoInfo","pageContext","main","scripts","className"],"mappings":"wKA2GA,EA3Ga,WACX,IAAIA,EAAO,GACPC,EAAY,GAEVC,EAAQC,EAAE,UAAUC,aACpBC,EAAS,IACTC,EAAQC,GAAGC,MAAMC,aAEjBC,EAAU,SAAUC,GACxB,MAAM,WAAYA,EAAEC,IAGhBC,EAAU,SAAUF,GACxB,OAAOL,EAAMK,EAAEC,KAGXE,EAAc,WAClB,OAAOP,GAAGQ,OAAOC,MAAMC,MAAM,CAC3BC,OAAQ,QACR,eAAgB,SAIdC,EAAa,WACjB,OAAOZ,GAAGQ,OAAOC,MAAMC,MAAM,CAC3BC,OAAQ,QACR,eAAgB,UAIdE,EAAU,SAAUT,GACxB,IAAKA,EACH,OAAOV,EACJoB,aACAC,SAAS,MACTC,KACC,YAJG,aAKUrB,EAAQ,EALlB,2BAMAA,EAAQ,EANR,aAWT,IAAMsB,EAAWxB,EAAKwB,SAASb,GACzBc,EAAID,EAAS,GACbE,EAAIF,EAAS,GAEnB,OAAOvB,EACJoB,aACAC,SAAS,MACTC,KACC,YAJG,aAKUrB,EAAQ,EALlB,2BAK2DuB,EAL3D,KAKiEC,EALjE,MASLC,EAAMpB,GACPQ,OAAO,UACPa,OAAO,OACPL,KAAK,QAASrB,GACdqB,KAAK,SAAUlB,GAelB,OAbAsB,EACGC,OAAO,QACPL,KAAK,CACJM,MAAO,aACPxB,SACAH,UAED4B,GAAG,QAASV,GACZH,MAAM,CACLc,KAAM,YAEVJ,EAAMA,EAAIC,OAAO,KAEVrB,GAAGyB,KAAK,mCAAmC,SAACC,EAAQC,GACzD,IAAMC,EAAa5B,GAAG6B,IACnBC,WACAC,OAAO,CAAC,EAAG,OACX9B,MAAM,KACN+B,UAAU,CAACrC,EAAQ,EAAGG,MAEzBL,EAAOO,GAAG6B,IAAIpC,OAAOmC,WAAWA,GAEhC,IAAMK,EAAOC,SAASC,QAAQR,EAAOA,EAAMS,QAAQ1C,WAAW2C,UAE9D3C,EAAY0B,EACTkB,UAAU,YACVL,KAAKA,GACLM,QACAlB,OAAO,QACPL,KAAK,CACJM,MAAOnB,EACPC,EAAGX,IAEJiB,MAAM,CACLc,KAAMlB,EACNK,OAAQ,OACR,eAAgB,MAGVY,GAAG,YAAahB,GAC1Bb,EAAU6B,GAAG,WAAYX,GACzBlB,EAAU6B,GAAG,QAASV,OCvF1B,EAViB,SAAC,GAAD,IAAkB2B,EAAlB,EAAGC,YAAeD,SAAlB,OACf,gBAAC,IAAD,CACEA,SAAUA,EACVE,KAAMA,EACNC,QAAS,CAAC,wBAAyB,kCAEnC,uBAAKC,UAAU,kBAAkBvC,GAAG","file":"component---src-pages-d-3-js-world-map-js-a680dbc198da73d5fe88.js","sourcesContent":["const main = () => {\n  let path = \"\"\n  let countries = \"\"\n\n  const width = $(\"#chart\").innerWidth()\n  const height = 500\n  const color = d3.scale.category20()\n\n  const classFn = function (d) {\n    return `country ${d.id}`\n  }\n\n  const colorFn = function (d) {\n    return color(d.id)\n  }\n\n  const mouseoverFn = function () {\n    return d3.select(this).style({\n      stroke: \"black\",\n      \"stroke-width\": \"1px\",\n    })\n  }\n\n  const mouseoutFn = function () {\n    return d3.select(this).style({\n      stroke: \"white\",\n      \"stroke-width\": \".2px\",\n    })\n  }\n\n  const setZoom = function (d) {\n    if (!d) {\n      return countries\n        .transition()\n        .duration(3500)\n        .attr(\n          \"transform\",\n          `translate(${width / 2},${height / 2})scale(${1})translate(${\n            -width / 2\n          },${-height / 2})`\n        )\n    }\n\n    const centroid = path.centroid(d)\n    const x = centroid[0]\n    const y = centroid[1]\n\n    return countries\n      .transition()\n      .duration(3500)\n      .attr(\n        \"transform\",\n        `translate(${width / 2},${height / 2})scale(${8})translate(${-x},${-y})`\n      )\n  }\n\n  let svg = d3\n    .select(\"#chart\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n  svg\n    .append(\"rect\")\n    .attr({\n      class: \"background\",\n      height,\n      width,\n    })\n    .on(\"click\", setZoom)\n    .style({\n      fill: \"#DAEDFF\",\n    })\n  svg = svg.append(\"g\")\n\n  return d3.json(\"/data/d3js/world-map/world.json\", (_error, world) => {\n    const projection = d3.geo\n      .mercator()\n      .center([0, 45.4])\n      .scale(150)\n      .translate([width / 2, height / 2])\n\n    path = d3.geo.path().projection(projection)\n\n    const data = topojson.feature(world, world.objects.countries).features\n\n    countries = svg\n      .selectAll(\".country\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr({\n        class: classFn,\n        d: path,\n      })\n      .style({\n        fill: colorFn,\n        stroke: \"#FFF\",\n        \"stroke-width\": 0.2,\n      })\n\n    countries.on(\"mouseover\", mouseoverFn)\n    countries.on(\"mouseout\", mouseoutFn)\n    countries.on(\"click\", setZoom)\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/world-map/world-map\"\n\nconst WorldMap = ({ pageContext: { demoInfo } }) => (\n  <Demo\n    demoInfo={demoInfo}\n    main={main}\n    scripts={[\"/vendors/d3/d3.min.js\", \"/vendors/topojson/topojson.js\"]}\n  >\n    <div className=\"world-map-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default WorldMap\n"],"sourceRoot":""}