{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/multiline-voronoi/multiline-voronoi.js","webpack://demos/./src/pages/d3js/multiline-voronoi.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchData","monthFormat","d3","time","format","months","tsv","ROOT_PATH","d","index","Object","keys","map","parse","filter","Number","forEach","push","city","name","replace","values","m","date","_error","citiesResp","cities","monthNames","margin","renderChart","rootElId","color","scale","category20","clickToggle","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","height","x","range","y","d3next","svg","select","append","attr","domain","c","nice","call","axis","orient","ticks","style","text","feMerge","addFilter","line","generateVoronoi","data","focus","voronoi","geom","clipExtent","voronoiGroup","selectAll","nest","rollup","v","entries","merge","enter","join","datum","point","on","classed","parentNode","appendChild","trim","getMonth","getFullYear","String","toFixed","remove","generateLines","property","checked","_d","i","demoInfo","pageContext","main","scripts","id","type","htmlFor"],"mappings":"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","file":"component---src-pages-d-3-js-multiline-voronoi-tsx-5bfe234feda5f2db3555.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as d3next from \"d3\"\n\nconst fetchData = () => {\n  const monthFormat = d3.time.format(\"%Y-%m\")\n  const months = []\n\n  return new Promise((resolve) => {\n    d3.tsv(\n      `${ROOT_PATH}data/d3js/multiline-voronoi/data.tsv`,\n      (d, index) => {\n        if (!index) {\n          Object.keys(d)\n            .map(monthFormat.parse)\n            .filter(Number)\n            .forEach((value) => months.push(value))\n        }\n\n        const city = {\n          name: d.name.replace(/(msa|necta div|met necta|met div)$/i, \"\"),\n          values: null,\n        }\n\n        city.values = months.map((m) => ({\n          city,\n          date: m,\n          value: d[monthFormat(m)] / 100,\n        }))\n\n        return city\n      },\n      (_error, citiesResp) => {\n        resolve({ cities: citiesResp, months })\n      }\n    )\n  })\n}\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n]\n\nconst margin = {\n  bottom: 70,\n  left: 80,\n  right: 70,\n  top: 60,\n}\n\nconst addFilter = (svg) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs.append(\"filter\").attr(\"id\", \"drop-shadow\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", 1)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", \"1\")\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nconst renderChart = ({ rootElId, cities, months }) => {\n  const color = d3.scale.category20()\n  let clickToggle = false\n\n  const rootEl = document.getElementById(rootElId)\n\n  rootEl.classList.add(\"multiline-voronoi-chart\")\n\n  const width =\n    rootEl.getBoundingClientRect().width - margin.left - margin.right\n\n  const height = 500 - margin.top - margin.bottom\n\n  const x = d3.time.scale().range([0, width])\n  const y = d3next.scaleLinear().range([height, 0])\n\n  const svg = d3\n    .select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  x.domain(d3next.extent(months))\n  y.domain([\n    0,\n    d3next.max(cities, (c) => d3next.max(c.values, (d) => d.value)),\n  ]).nice()\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(d3.svg.axis().scale(x).orient(\"bottom\"))\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(d3.svg.axis().scale(y).orient(\"left\").ticks(10, \"%\"))\n    .append(\"text\")\n    .attr(\"x\", 20)\n    .attr(\"dy\", \".32em\")\n    .style(\"font-weight\", \"bold\")\n    .text(\"US Unemployment Rate\")\n\n  addFilter(svg)\n\n  const line = d3next\n    .line()\n    .x((d) => x(d.date))\n    .y((d) => y(d.value))\n\n  const generateVoronoi = function (data) {\n    const mouseover = (d) => {\n      d3.select(d.city.line).classed(\"city--hover\", true)\n      d.city.line.parentNode.appendChild(d.city.line)\n      focus.attr(\"transform\", `translate(${x(d.date)},${y(d.value)})`)\n      focus.select(\".text1\").text(`${d.city.name.trim()}: `)\n\n      const date = `${monthNames[d.date.getMonth()]} of ${d.date.getFullYear()}`\n\n      return focus\n        .select(\".text2\")\n        .text(` ${String((d.value * 100).toFixed(2))}% - ${date}`)\n    }\n\n    const mouseout = function (d) {\n      d3.select(d.city.line).classed(\"city--hover\", false)\n\n      return focus.attr(\"transform\", \"translate(-100,-100)\")\n    }\n\n    const clicked = function (d) {\n      clickToggle = !clickToggle\n      d3.selectAll(\".cities\").remove()\n      d3.selectAll(\".voronoi\").remove()\n\n      if (clickToggle) {\n        generateLines([d.city])\n\n        return\n      }\n\n      generateLines(cities)\n\n      return\n    }\n\n    const focus = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(-100,-100)\")\n      .attr(\"class\", \"focus\")\n\n    focus.append(\"circle\").attr(\"r\", 3.5)\n    focus.append(\"text\").attr(\"class\", \"text1\").attr(\"y\", -30)\n    focus.append(\"text\").attr(\"class\", \"text2\").attr(\"y\", -10)\n\n    const voronoi = d3.geom\n      .voronoi()\n      .x((d) => x(d.date))\n      .y((d) => y(d.value))\n      .clipExtent([\n        [-margin.left, -margin.top],\n        [width + margin.right, height + margin.bottom],\n      ])\n\n    const voronoiGroup = svg.append(\"g\").attr(\"class\", \"voronoi\")\n\n    voronoiGroup\n      .selectAll(\"path\")\n      .data(\n        voronoi(\n          d3\n            .nest()\n            .key((d) => `${x(d.date)},${y(d.value)}`)\n            .rollup((v) => v[0])\n            .entries(d3.merge(data.map((d) => d.values)))\n            .map((d) => d.values)\n        )\n      )\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", (d) => `M${d.join(\"L\")}Z`)\n      .datum((d) => d.point)\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseout\", mouseout)\n      .on(\"click\", clicked)\n\n    d3.select(\"#show-voronoi\")\n      .property(\"disabled\", false)\n      .on(\"change\", function () {\n        return voronoiGroup.classed(\"voronoi--show\", this.checked)\n      })\n  }\n\n  const generateLines = function (data) {\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"cities\")\n      .selectAll(\"path\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", function (d) {\n        d.line = this\n\n        return line(d.values)\n      })\n      .style(\"stroke\", (_d, i) => color(i))\n      .style(\"filter\", () => \"url(#drop-shadow)\")\n\n    return generateVoronoi(data)\n  }\n\n  generateLines(cities)\n}\n\nconst main = async () => {\n  const rootElId = \"chart\"\n  const { cities, months } = await fetchData()\n\n  renderChart({\n    cities,\n    months,\n    rootElId,\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\n// @ts-ignore\nimport main from \"@/demos/multiline-voronoi/multiline-voronoi\"\n\nimport \"@/demos/multiline-voronoi/multiline-voronoi.styl\"\n\nconst MultilineVoronoi = ({ pageContext: { demoInfo } }: DemoPageProps) => (\n  <Demo demoInfo={demoInfo} main={main} scripts={[\"/vendors/d3/d3.min.js\"]}>\n    <form>\n      <input id=\"show-voronoi\" type=\"checkbox\" />{\" \"}\n      <label htmlFor=\"show-voronoi\">Show Voronoi lines</label>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default MultilineVoronoi\n"],"sourceRoot":""}