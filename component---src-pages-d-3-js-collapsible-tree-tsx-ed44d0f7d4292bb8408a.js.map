{"version":3,"file":"component---src-pages-d-3-js-collapsible-tree-tsx-ed44d0f7d4292bb8408a.js","mappings":"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","sources":["webpack://demos/./src/components/demo-title.tsx","webpack://demos/./src/ui-constants.ts","webpack://demos/./src/utils/getDemoE2ETestFilePath.ts","webpack://demos/./src/components/hooks/useBrowserInitialWidth.ts","webpack://demos/./src/utils/getBrowserWidth.ts","webpack://demos/./src/components/code-fragment.tsx","webpack://demos/./src/components/files-details.tsx","webpack://demos/./src/components/demo.tsx","webpack://demos/./src/components/footer.tsx","webpack://demos/./src/components/page-title.tsx","webpack://demos/./src/components/layout.tsx","webpack://demos/./src/demos/collapsible-tree/collapsible-tree-chart-ui-link.ts","webpack://demos/./src/demos/collapsible-tree/collapsible-tree-chart-ui-small-button.ts","webpack://demos/./src/demos/collapsible-tree/ui-constants.ts","webpack://demos/./src/demos/collapsible-tree/collapsible-tree-chart-ui-node.ts","webpack://demos/./src/demos/collapsible-tree/collapsible-tree-chart.ts","webpack://demos/./src/demos/collapsible-tree/collapsible-tree.module.css","webpack://demos/./src/demos/collapsible-tree/collapsible-tree-chart-config.ts","webpack://demos/./src/demos/collapsible-tree/collapsible-tree.ts","webpack://demos/./src/pages/d3js/collapsible-tree.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./src/components/styles/styles.module.css","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from \"react\"\n\nimport * as styles from \"@/components/styles/styles.module.css\"\n\nimport { BACK_HOME_ATTR } from \"@/ui-constants\"\n\ntype Props = {\n  isCompleted: boolean\n  mainSource: string\n  name: string\n}\n\nconst DemoTitle = ({ isCompleted, mainSource, name }: Props) => (\n  <h2 className=\"row\" id={styles.demoTitle}>\n    <span className=\"col-xs-12 col-sm-10 p-0\">\n      <span className={styles.demoName}>{name} Chart </span>\n      <small id={styles.mainSource} title=\"Main Source\">\n        <a href={mainSource} rel=\"noreferrer\" target=\"_blank\">\n          source\n        </a>\n      </small>\n      {!isCompleted && (\n        <small id={styles.demoWip} title=\"This demo is still work in progress\">\n          WIP\n        </small>\n      )}\n    </span>\n    <span\n      className={`col-sm-2 p-0 d-xs-none ${styles.backHome}`}\n      {...{ [BACK_HOME_ATTR]: \"\" }}\n    >\n      <a className=\"btn btn-info\" href={ROOT_PATH} role=\"button\">\n        <span className=\"glyphicon glyphicon-home\" /> Home\n      </a>\n    </span>\n  </h2>\n)\n\nexport default DemoTitle\n","const BACK_HOME_ATTR = \"data-back-home\"\n\nexport { BACK_HOME_ATTR }\n","export const getDemoE2ETestFilePath = (demoName: string) =>\n  `src/demos/${demoName}/tests/${demoName}.e2e.ts`\n","import { useEffect, useState } from \"react\"\n\nimport { getBrowserWidth } from \"@/utils/getBrowserWidth\"\n\nconst useBrowserInitialWidth = () => {\n  const [browserWidth, setBrowserWidth] = useState<number | null>(null)\n\n  useEffect(() => {\n    const browserWidthInitial = getBrowserWidth()\n\n    if (browserWidthInitial !== null) {\n      setBrowserWidth(browserWidthInitial)\n    }\n  }, [])\n\n  return browserWidth\n}\n\nexport default useBrowserInitialWidth\n","export const getBrowserWidth = () => {\n  if (typeof window === \"undefined\") {\n    return null\n  }\n\n  return Math.max(\n    document.body.scrollWidth,\n    document.documentElement.scrollWidth,\n    document.body.offsetWidth,\n    document.documentElement.offsetWidth,\n    document.documentElement.clientWidth\n  )\n}\n","import React, { useState } from \"react\"\n\nimport useBrowserInitialWidth from \"@/components/hooks/useBrowserInitialWidth\"\n\nimport * as styles from \"./styles/styles.module.css\"\n\ntype Props = { content: string }\n\nconst CodeFragment = ({ content }: Props) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const browserWidth = useBrowserInitialWidth()\n\n  if (browserWidth === null) {\n    return null\n  }\n\n  if (!browserWidth || (browserWidth < 1280 && !isExpanded)) {\n    return (\n      <div className={styles.codeFragment}>\n        <button\n          className={`${styles.codeFragmentButton} btn btn-light`}\n          onClick={() => setIsExpanded(true)}\n          type=\"button\"\n        >\n          Show Code\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <pre>\n      <code\n        dangerouslySetInnerHTML={{\n          __html: content,\n        }}\n      />\n    </pre>\n  )\n}\n\nexport default CodeFragment\n","import \"prismjs/themes/prism-coy.css\"\nimport React from \"react\"\n\nimport { DemoInfo } from \"@/common\"\n\nimport * as styles from \"@/components/styles/styles.module.css\"\n\nimport { getDemoE2ETestFilePath } from \"@/utils/getDemoE2ETestFilePath\"\n\nimport CodeFragment from \"./code-fragment\"\n\nconst CodeInGH = ({ filePath }: { filePath: string }) => (\n  <>\n    <span>| </span>\n    <a\n      href={`https://github.com/igncp/demos/blob/main/${filePath}`}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n    >\n      Code in Github\n    </a>\n  </>\n)\nconst CoverageReport = ({ filePath }: { filePath: string }) => (\n  <>\n    <span>| </span>\n    <a\n      href={`https://igncp.github.io/demos/coverage-ts/files/${filePath}.html`}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n    >\n      TypeScript coverage report\n    </a>\n  </>\n)\n\ntype Props = {\n  demoInfo: DemoInfo\n}\n\nconst FilesDetails = ({ demoInfo }: Props) => {\n  if (typeof window === \"undefined\") {\n    return null\n  }\n\n  const pageFilePath = `pages/${demoInfo.category}/${demoInfo.key}.${demoInfo.files.page.type}`\n\n  return (\n    <div>\n      {!!demoInfo.notes.length && (\n        <div className={`bs-callout bs-callout-info${styles.notes}`}>\n          <p>\n            <strong>Notes:</strong>\n          </p>\n          <ul>\n            {demoInfo.notes.map((...[note, noteIndex]) => (\n              <li dangerouslySetInnerHTML={{ __html: note }} key={noteIndex} />\n            ))}\n          </ul>\n        </div>\n      )}\n      {!!demoInfo.summary.length && (\n        <div className={`bs-callout bs-callout-summary ${styles.notes}`}>\n          <p>\n            <strong>Implementation Summary:</strong>\n          </p>\n          <ul>\n            {demoInfo.summary.map((...[summaryLine, summaryIndex]) => (\n              <p\n                dangerouslySetInnerHTML={{ __html: summaryLine }}\n                key={summaryIndex}\n              />\n            ))}\n          </ul>\n        </div>\n      )}\n      <div className=\"bs-callout bs-callout-primary\" id={styles.sourcesList}>\n        <p>\n          <strong>Sources:</strong>\n        </p>\n        <ul>\n          {demoInfo.sources.map((...[source, sourceIndex]) => (\n            <li key={sourceIndex}>\n              <span className={styles.sourceNumber}>[{sourceIndex + 1}]</span>:{\" \"}\n              <a href={source}>{source}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {!!demoInfo.docs.length && (\n        <div className=\"bs-callout bs-callout-secondary\" id=\"docs\">\n          <p>\n            <strong>Docs:</strong>\n          </p>\n          <div className={styles.tagCollection}>\n            {demoInfo.docs.map((doc) => (\n              <span className={styles.tag} key={doc[1]}>\n                <a href={doc[1]} rel=\"noreferrer\" target=\"_blank\">\n                  {doc[0]}\n                </a>\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n      {!!demoInfo.dataFiles.length && (\n        <div className=\"bs-callout bs-callout-warning\" id={styles.dataList}>\n          <p>\n            <strong>Data files: </strong>\n            {demoInfo.dataFiles.map((...[file, fileIndex]) => (\n              <a\n                href={`${ROOT_PATH}data/${demoInfo.category}/${demoInfo.key}/${file}`}\n                key={fileIndex}\n              >\n                {file}\n              </a>\n            ))}\n          </p>\n        </div>\n      )}\n      <div className=\"bs-callout bs-callout-success\" id=\"code\">\n        <p>\n          <strong>Code:</strong>\n        </p>\n        <ul>\n          {demoInfo.files.demoTS.map(\n            (...[{ content, filePath }, fileIndex]) => (\n              <li key={filePath}>\n                <p>\n                  <span className={styles.fileNameWrapper}>{filePath}</span>{\" \"}\n                  <CodeInGH filePath={filePath} />{\" \"}\n                  <CoverageReport filePath={filePath} />\n                  {fileIndex === 0 && (\n                    <>\n                      <span> | </span>\n                      <a\n                        href={`https://github.com/igncp/demos/blob/main/${getDemoE2ETestFilePath(\n                          demoInfo.key\n                        )}`}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        E2E tests\n                      </a>\n                    </>\n                  )}\n                </p>\n                <CodeFragment content={content} />\n                <div className={styles.divisor} />\n              </li>\n            )\n          )}\n          <li>\n            <p>\n              <span className={styles.fileNameWrapper}>{pageFilePath}</span>{\" \"}\n              <CodeInGH filePath={pageFilePath} />{\" \"}\n              <CoverageReport filePath={pageFilePath} />\n            </p>\n            <CodeFragment content={demoInfo.files.page.content} />\n            {!!demoInfo.files.demoCSS.length && (\n              <div className={styles.divisor} />\n            )}\n          </li>\n          {demoInfo.files.demoCSS.map(\n            (...[{ content, filePath }, cssIndex]) => (\n              <li key={filePath}>\n                <p>\n                  <span className={styles.fileNameWrapper}>{filePath}</span>{\" \"}\n                  {(() => (\n                    <CodeInGH filePath={filePath} />\n                  ))()}\n                </p>\n                <CodeFragment content={content} />\n                {cssIndex !== demoInfo.files.demoCSS.length - 1 && (\n                  <div className={styles.divisor} />\n                )}\n              </li>\n            )\n          )}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default FilesDetails\n","import React, { useEffect } from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport DemoTitle from \"./demo-title\"\nimport FilesDetails from \"./files-details\"\nimport Layout from \"./layout\"\n\nconst parsePath = (str: string) =>\n  str[0] === \"/\" ? ROOT_PATH + str.replace(/^\\//, \"\") : str\n\ntype Props = {\n  children: React.ReactNode\n  links?: string[]\n  main: () => Promise<void>\n  pageContext: DemoPageProps[\"pageContext\"]\n  scripts?: string[]\n}\n\nconst Demo = ({\n  main,\n  children,\n  scripts = [],\n  links = [],\n  pageContext,\n}: Props) => {\n  const { demoInfo, meta } = pageContext\n  const { isCompleted, name, sources } = demoInfo\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") {\n      return\n    }\n\n    main().catch((mainError) => {\n      // eslint-disable-next-line no-console\n      console.error(\"error:\", mainError)\n    })\n  }, [])\n\n  return (\n    <Layout>\n      <Helmet\n        link={(process.env.NODE_ENV === \"production\" ? links : []).map(\n          (href) => ({\n            href: parsePath(href),\n            rel: \"stylesheet\",\n            type: \"text/css\",\n          })\n        )}\n        meta={[\n          {\n            content: meta.description,\n            name: \"description\",\n          },\n        ]}\n        script={(process.env.NODE_ENV === \"production\" ? scripts : []).map(\n          (src) => ({\n            src: parsePath(src),\n            type: \"text/javascript\",\n          })\n        )}\n        title={`${demoInfo.name} | Demos igncp`}\n      />\n      <DemoTitle\n        isCompleted={isCompleted}\n        mainSource={sources[0]}\n        name={name}\n      />\n      {children}\n      <FilesDetails demoInfo={demoInfo} />\n    </Layout>\n  )\n}\n\nexport default Demo\n","import React from \"react\"\n\nimport * as styles from \"@/components/styles/styles.module.css\"\n\nconst Footer = () => (\n  <div className={styles.footer}>\n    <p>{new Date().getFullYear()}</p>\n  </div>\n)\n\nexport default Footer\n","import React from \"react\"\n\nimport * as styles from \"@/components/styles/styles.module.css\"\n\nconst PageTitle = () => (\n  <div className={styles.pageHeader}>\n    <h1>\n      <span className={styles.titleWrapper}>\n        <a href={ROOT_PATH}>Demos</a>{\" \"}\n        <small className=\"hide-tablet\">\n          interactive data visualization examples\n        </small>\n      </span>\n      <span id={styles.ghButtons}>\n        <iframe\n          className=\"hide-mobile\"\n          frameBorder=\"0\"\n          height=\"20\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=igncp&repo=demos&type=follow\"\n          width=\"119\"\n        />\n        <iframe\n          className=\"hide-mobile\"\n          frameBorder=\"0\"\n          height=\"20\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=igncp&repo=demos&type=fork\"\n          width=\"62\"\n        />\n        <iframe\n          frameBorder=\"0\"\n          height=\"20\"\n          scrolling=\"0\"\n          src=\"https://ghbtns.com/github-btn.html?user=igncp&repo=demos&type=watch\"\n          width=\"52\"\n        />\n      </span>\n    </h1>\n  </div>\n)\n\nexport default PageTitle\n","import React from \"react\"\n\nimport Footer from \"./footer\"\nimport PageTitle from \"./page-title\"\nimport \"./styles/styles.css\"\nimport * as styles from \"./styles/styles.module.css\"\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst Layout = ({ children }: Props) => (\n  <div className={`${styles.rootLayout} px-3 px-sm-5`}>\n    <div className={styles.navWrapper}>\n      <PageTitle />\n    </div>\n    <div className={styles.contentWrapper}>{children}</div>\n    <div className={styles.footerWrapper}>\n      <Footer />\n    </div>\n  </div>\n)\n\nexport default Layout\n","import { BaseType, Link, Selection, linkHorizontal } from \"d3\"\n\nimport { CommonUIProps, Point } from \"./collapsible-tree-chart-ui-common\"\n\nconst treeLinkPathClass = \"tree-link\"\n\ntype DiagonalLink = { source: Point; target: Point }\n\ntype UILinkOpts<Container extends BaseType, NodeDatum> = CommonUIProps<\n  Container,\n  NodeDatum\n>\n\n/**\n * Responsible for handle the UI of the link, without any knowledge of the node\n * tree structure, with a constraint on the link data.\n */\nexport class UILink<\n  Container extends BaseType,\n  LinkDatum extends DiagonalLink,\n  NodeDatum\n> {\n  private readonly initialOpts: UILinkOpts<Container, NodeDatum>\n  private readonly linkG: Selection<SVGGElement, NodeDatum, Element, unknown>\n  private readonly linkPath: Link<unknown, DiagonalLink, Point>\n\n  public constructor(opts: UILinkOpts<Container, NodeDatum>) {\n    this.initialOpts = opts\n\n    this.linkPath = linkHorizontal<DiagonalLink, Point>()\n      .x((diagonalNode) => diagonalNode.y)\n      .y((diagonalNode) => diagonalNode.x)\n\n    this.linkG = opts.container\n      .append(\"g\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", opts.linkDefaultColor)\n      .attr(\"stroke-opacity\", 0.4)\n      .attr(\"stroke-width\", 1.5)\n  }\n\n  public update(opts: {\n    getData: () => [LinkDatum[], (linkData: LinkDatum) => number]\n    source: NodeDatum\n  }) {\n    const {\n      initialOpts: {\n        getInitialPosition,\n        getPosition,\n        openCloseAnimationDuration,\n      },\n      linkG,\n      linkPath,\n    } = this\n    const { getData, source } = opts\n\n    const linkSelection = linkG\n      .selectAll<SVGPathElement, LinkDatum>(\"path\")\n      .data(...getData())\n\n    const linkEnter = linkSelection\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", treeLinkPathClass)\n      .attr(\"d\", () => {\n        const diagonalNode = getInitialPosition(source)\n        const diagonalLink = { source: diagonalNode, target: diagonalNode }\n\n        return linkPath(diagonalLink)\n      })\n\n    linkSelection\n      .merge(linkEnter)\n      .transition()\n      .duration(openCloseAnimationDuration)\n      .attr(\"d\", (link) => linkPath(link))\n\n    linkSelection\n      .exit()\n      .transition()\n      .duration(openCloseAnimationDuration)\n      .remove()\n      .attr(\"d\", () => {\n        const diagonalNode = getPosition(source)\n        const diagonalLink = { source: diagonalNode, target: diagonalNode }\n\n        return linkPath(diagonalLink)\n      })\n  }\n\n  public getSelection() {\n    return this.linkG.selectAll<SVGPathElement, LinkDatum>(\n      `.${treeLinkPathClass}`\n    )\n  }\n}\n","import { BaseType, Selection, select } from \"d3\"\n\ntype UISmallButtonOpts = {\n  dx: string\n  fontSize: string\n  text: string\n}\n\nexport class UISmallButton<\n  Element extends BaseType,\n  Datum,\n  ElementAbove extends BaseType\n> {\n  private readonly className: string\n  private readonly initialOpts: UISmallButtonOpts\n\n  public constructor(opts: UISmallButtonOpts) {\n    this.className = `small-button-${Math.random().toFixed(6).split(\".\")[1]}`\n\n    this.initialOpts = opts\n  }\n\n  public add({\n    container,\n    onClick,\n  }: {\n    container: Selection<Element, Datum, ElementAbove, unknown>\n    onClick: (datum: Datum) => void\n  }) {\n    const {\n      initialOpts: { dx, fontSize, text },\n    } = this\n    const groupSelection = container\n      .append(\"g\")\n      .style(\"transform\", `translate(${dx},-10px)`)\n      .attr(\"class\", this.className)\n      .style(\"display\", \"none\")\n      .attr(\"cursor\", \"pointer\")\n\n    groupSelection\n      .append(\"circle\")\n      .attr(\"r\", 8)\n      .attr(\"cx\", 5)\n      .attr(\"cy\", -7)\n      .attr(\"fill\", \"#ddd\")\n      .style(\"font-size\", fontSize)\n      .text(text)\n\n    const textSelection = groupSelection\n      .append(\"text\")\n      .style(\"font-size\", fontSize)\n      .text(text)\n\n    groupSelection\n      .on(\"mouseenter\", () => {\n        textSelection.attr(\"fill\", \"orange\")\n      })\n      .on(\"mouseleave\", () => {\n        textSelection.attr(\"fill\", null)\n      })\n      .on(\"click\", (...[clickEvent, datum]) => {\n        clickEvent.stopPropagation()\n        onClick(datum)\n      })\n  }\n\n  public hide<ContainerElement extends SVGElement>({\n    container,\n    filterFn,\n  }: {\n    container: ContainerElement\n    filterFn?: (itemData: Datum) => boolean\n  }) {\n    select<ContainerElement, Datum>(container)\n      .selectAll<SVGTextElement, Datum>(`.${this.className}`)\n      .style(\"display\", (itemData) =>\n        !filterFn || filterFn(itemData) ? \"none\" : \"block\"\n      )\n  }\n}\n","const CONTAINER_ID = \"chart\"\nconst NODE_CIRCLE_CLASS = \"node-circle\"\nconst OPEN_CLOSE_ANIMATION_MS = 750\n\nexport { CONTAINER_ID, NODE_CIRCLE_CLASS, OPEN_CLOSE_ANIMATION_MS }\n","import anime from \"animejs\"\nimport { BaseType, Selection, select } from \"d3\"\n\nimport { CommonUIProps } from \"./collapsible-tree-chart-ui-common\"\nimport { UISmallButton } from \"./collapsible-tree-chart-ui-small-button\"\nimport { NODE_CIRCLE_CLASS } from \"./ui-constants\"\n\ntype UINodeOpts<Container extends BaseType, Datum> = CommonUIProps<\n  Container,\n  Datum\n> &\n  Readonly<{\n    displayRemoveButton: (nodeData: Datum) => boolean\n    getNodeId: (nodeData: Datum) => number\n    getPointingLinkForNode: (\n      nodeData: Datum\n    ) => Selection<SVGElement, unknown, SVGElement, unknown>\n    getText: (nodeData: Datum) => string\n    hasDescendants: (node: Datum) => boolean\n  }>\n\nconst nodeLabelClass = \"node-label\"\n\n/**\n * Responsible for handle the UI of the node, without any knowledge of the node\n * tree structure (it doesn't know how the children nodes are referenced)\n */\nexport class UINode<Container extends BaseType, Datum> {\n  private readonly initialOpts: UINodeOpts<Container, Datum>\n  private readonly nodeG: Selection<SVGGElement, Datum, Element, unknown>\n  private readonly hoveredItems = new Set<number>()\n\n  private readonly plusButton: UISmallButton<SVGGElement, Datum, SVGGElement>\n  private readonly minusButton: UISmallButton<SVGGElement, Datum, SVGGElement>\n\n  private readonly circleLinkForEffect: Selection<\n    SVGCircleElement,\n    Datum,\n    Element,\n    unknown\n  >\n\n  public constructor(opts: UINodeOpts<Container, Datum>) {\n    this.initialOpts = opts\n\n    this.nodeG = this.initialOpts.container\n      .append(\"g\")\n      .attr(\"pointer-events\", \"all\")\n\n    this.circleLinkForEffect = this.initialOpts.container\n      .insert(\"circle\", \":first-child\")\n      .attr(\"r\", 4)\n      .attr(\"fill\", \"none\")\n\n    this.plusButton = new UISmallButton({\n      dx: \"0px\",\n      fontSize: \"20px\",\n      text: \"+\",\n    })\n\n    this.minusButton = new UISmallButton({\n      dx: \"-15px\",\n      fontSize: \"25px\",\n      text: \"-\",\n    })\n  }\n\n  public update(opts: {\n    getData: () => [Datum[], (nodeData: Datum) => number]\n    onNodeAdd: (node: Datum) => void\n    onNodeClick: (node: Datum) => void\n    onNodeRemove: (node: Datum) => void\n    source: Datum\n  }) {\n    const { source } = opts\n    const {\n      circleLinkForEffect,\n      hoveredItems,\n      initialOpts: {\n        displayRemoveButton,\n        getInitialPosition,\n        getNodeId,\n        getPointingLinkForNode,\n        getPosition,\n        getText,\n        hasDescendants,\n        linkDefaultColor,\n      },\n    } = this\n\n    const nodeSelection = this.nodeG\n      .selectAll<SVGGElement, Datum>(\"g\")\n      .data(...opts.getData())\n\n    const circleDefaultFill = (node: Datum) => {\n      if (hasDescendants(node)) {\n        return hoveredItems.has(getNodeId(node)) ? \"blue\" : \"green\"\n      }\n\n      return \"red\"\n    }\n\n    const nodeEnter = nodeSelection\n      .enter()\n      .append(\"g\")\n      .attr(\"transform\", () => {\n        const position = getInitialPosition(source)\n\n        return `translate(${position.y},${position.x})`\n      })\n      .attr(\"fill-opacity\", 0)\n      .attr(\"stroke-opacity\", 0)\n      .on(\"click\", (...[, treeNode]) => {\n        opts.onNodeClick(treeNode)\n      })\n\n    nodeEnter\n      .append(\"circle\")\n      .attr(\"r\", 10)\n      .attr(\"class\", NODE_CIRCLE_CLASS)\n      .attr(\"stroke-width\", 10)\n\n    const textDX = 10\n\n    nodeEnter\n      .append(\"text\")\n      .attr(\"class\", nodeLabelClass)\n      .attr(\"dy\", \"5px\")\n      .style(\"font-size\", \"20px\")\n      .text(getText)\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"stroke\", \"white\")\n\n    const { minusButton, plusButton } = this\n\n    const buttons = [plusButton, minusButton]\n\n    const showButtonsIfNecessary = (container: SVGGElement) => {\n      buttons.forEach((button) => {\n        button.hide({\n          container,\n          filterFn: (node) =>\n            button === minusButton && !displayRemoveButton(node),\n        })\n      })\n    }\n\n    nodeEnter\n      .on(\"mouseenter\", function onMouseEnter(...[, focusedTreeNode]) {\n        hoveredItems.add(getNodeId(focusedTreeNode))\n\n        select<SVGGElement, Datum>(this)\n          .select<SVGCircleElement>(\"circle\")\n          .attr(\"fill\", circleDefaultFill)\n\n        showButtonsIfNecessary(this)\n\n        const pointingLink = getPointingLinkForNode(focusedTreeNode)\n\n        if (!pointingLink.size()) {\n          return\n        }\n\n        pointingLink.style(\"stroke\", \"orange\")\n        circleLinkForEffect.attr(\"fill\", \"orange\")\n\n        const animePath = anime.path(pointingLink.node() as SVGElement)\n\n        anime({\n          duration: 500,\n          easing: \"easeInOutSine\",\n          endDelay: 1000,\n          loop: true,\n          targets: circleLinkForEffect.node(),\n          translateX: animePath(\"x\"),\n          translateY: animePath(\"y\"),\n        })\n      })\n      .on(\"mouseleave\", function onMouseLeave(...[, focusedTreeNode]) {\n        hoveredItems.delete(getNodeId(focusedTreeNode))\n\n        select<SVGGElement, Datum>(this)\n          .select<SVGCircleElement>(\"circle\")\n          .attr(\"fill\", circleDefaultFill)\n\n        buttons.forEach((button) => {\n          button.hide({\n            container: this,\n          })\n        })\n\n        const pointingLink = getPointingLinkForNode(focusedTreeNode)\n\n        if (!pointingLink.size()) {\n          return\n        }\n\n        circleLinkForEffect.attr(\"fill\", \"none\")\n\n        pointingLink.style(\"stroke\", linkDefaultColor)\n        anime.remove(circleLinkForEffect.node())\n      })\n\n    nodeSelection\n      .merge(nodeEnter)\n      .transition()\n      .duration(this.initialOpts.openCloseAnimationDuration)\n      .attr(\"transform\", (treeNode) => {\n        const position = getPosition(treeNode)\n\n        return `translate(${position.y},${position.x})`\n      })\n      .attr(\"fill-opacity\", 1)\n      .attr(\"stroke-opacity\", 1)\n\n    const groupsToUpdate = [nodeSelection, nodeEnter]\n\n    groupsToUpdate.forEach((nodeGroup) => {\n      plusButton.add({\n        container: nodeGroup,\n        onClick: (nodeDatum) => {\n          opts.onNodeAdd(nodeDatum)\n        },\n      })\n\n      minusButton.add({\n        container: nodeGroup,\n        onClick: (nodeDatum) => {\n          opts.onNodeRemove(nodeDatum)\n        },\n      })\n\n      nodeGroup.each(function setupHover(nodeDatum) {\n        const isHovered = hoveredItems.has(getNodeId(nodeDatum))\n\n        if (isHovered) {\n          showButtonsIfNecessary(this)\n        }\n      })\n\n      nodeGroup.attr(\"cursor\", (treeNode) =>\n        hasDescendants(treeNode) ? \"pointer\" : \"default\"\n      )\n\n      nodeGroup\n        .selectAll<SVGCircleElement, Datum>(`.${NODE_CIRCLE_CLASS}`)\n        .attr(\"fill\", circleDefaultFill)\n\n      nodeGroup\n        .selectAll<SVGCircleElement, Datum>(`.${nodeLabelClass}`)\n        .attr(\"dx\", (treeNode) =>\n          hasDescendants(treeNode) ? `-${textDX}px` : `${textDX}px`\n        )\n        .attr(\"x\", (treeNode) => (hasDescendants(treeNode) ? -6 : 6))\n        .attr(\"text-anchor\", (treeNode) =>\n          hasDescendants(treeNode) ? \"end\" : \"start\"\n        )\n    })\n\n    const sourcePosition = getPosition(source)\n\n    nodeSelection\n      .exit()\n      .transition()\n      .duration(this.initialOpts.openCloseAnimationDuration)\n      .remove()\n      .attr(\"transform\", `translate(${sourcePosition.y},${sourcePosition.x})`)\n      .attr(\"fill-opacity\", 0)\n      .attr(\"stroke-opacity\", 0)\n  }\n}\n","import {\n  D3DragEvent,\n  HierarchyPointLink,\n  HierarchyPointNode,\n  Selection,\n  drag,\n  hierarchy,\n  select,\n  tree as treeD3,\n} from \"d3\"\n\nimport { UILink } from \"./collapsible-tree-chart-ui-link\"\nimport { UINode } from \"./collapsible-tree-chart-ui-node\"\nimport * as styles from \"./collapsible-tree.module.css\"\nimport { OPEN_CLOSE_ANIMATION_MS } from \"./ui-constants\"\n\nconst inlineStyles = {\n  linkDefaultColor: \"#555\",\n} as const\n\ntype NodeShape<Content> = Content & {\n  children?: Array<NodeShape<Content>>\n}\n\nconst findNode = <NodeData>({\n  getId,\n  node,\n  nodeId,\n}: {\n  getId: (node: NodeShape<NodeData>) => number\n  node: NodeShape<NodeData>\n  nodeId: number\n}): NodeShape<NodeData> | null => {\n  if (getId(node) === nodeId) {\n    return node\n  }\n\n  return (node.children ?? []).reduce<NodeShape<NodeData> | null>(\n    (...[acc, otherNode]) =>\n      acc ?? findNode({ getId, node: otherNode, nodeId }),\n    null\n  )\n}\n\nconst findParentNode = <NodeData>({\n  getId,\n  node,\n  nodeId,\n}: {\n  getId: (node: NodeShape<NodeData>) => number\n  node: NodeShape<NodeData>\n  nodeId: number\n}): NodeShape<NodeData> | null => {\n  if (!node.children?.length) {\n    return null\n  }\n\n  const hasNode = node.children.some((otherNode) => getId(otherNode) === nodeId)\n\n  if (hasNode) {\n    return node\n  }\n\n  return node.children.reduce<NodeShape<NodeData> | null>(\n    (...[acc, otherNode]) =>\n      acc ?? findParentNode({ getId, node: otherNode, nodeId }),\n    null\n  )\n}\n\ntype ChartNode<BaseData> = BaseData &\n  NodeShape<{\n    _children: Array<HierarchyPointNode<ChartNode<BaseData>>> | undefined\n    x: number\n    x0: number\n    y: number\n    y0: number\n  }>\n\nconst margin = {\n  bottom: 20,\n  left: 120,\n  right: 120,\n  top: 20,\n}\n\nconst height = 800 - margin.top - margin.bottom\n\nconst getChartNode = <BaseData>(\n  initialNode: NodeShape<BaseData>\n): ChartNode<BaseData> => ({\n  ...initialNode,\n  _children: undefined,\n  children: (initialNode.children ?? []).map((subNode) =>\n    getChartNode(subNode)\n  ),\n  x: 0,\n  x0: 0,\n  y: 0,\n  y0: 0,\n})\n\nconst setupDrag = <SelectionData>(\n  svgG: Selection<SVGGElement, SelectionData, HTMLElement, unknown>\n) => {\n  const translateOffset = {\n    x: margin.left,\n    y: height / 2,\n  } as const\n\n  const draggedState = {\n    x: 0,\n    y: 0,\n  }\n\n  const dragHandler = drag<SVGSVGElement, unknown>().on(\n    \"drag\",\n    (dragEvent: D3DragEvent<SVGSVGElement, unknown, unknown>) => {\n      draggedState.x += dragEvent.dx\n      draggedState.y += dragEvent.dy\n\n      svgG.attr(\n        \"transform\",\n        `translate(${translateOffset.x + draggedState.x},${\n          translateOffset.y + draggedState.y\n        })`\n      )\n    }\n  )\n\n  svgG.attr(\"transform\", `translate(${translateOffset.x},${translateOffset.y})`)\n\n  const svg = select(svgG.node()!.parentNode as SVGSVGElement)\n\n  svg.style(\"cursor\", \"move\").call(dragHandler)\n}\n\ntype ChartConfig<BaseData> = {\n  canBeRemoved: (node: ChartNode<BaseData>) => boolean\n  getNodeId: (node: ChartNode<BaseData>) => number\n  getNodeLabel: (node: ChartNode<BaseData>) => string\n  onNodeAdd: (node: ChartNode<BaseData>) => NodeShape<BaseData>\n  onNodeRemove: (node: ChartNode<BaseData>) => NodeShape<BaseData>\n  rootData: NodeShape<BaseData>\n  rootElId: string\n}\n\nconst renderChart = <BaseData>(chartConfig: ChartConfig<BaseData>) => {\n  const { rootData, rootElId } = chartConfig\n\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.collapsibleTreeChart)\n\n  const width =\n    rootEl.getBoundingClientRect().width - margin.right - margin.left\n\n  type TreeNode = HierarchyPointNode<ChartNode<BaseData>>\n  type TreeLink = HierarchyPointLink<ChartNode<BaseData>>\n\n  const dataNodeRoot = getChartNode(rootData)\n\n  const rootHierarchy = hierarchy<ChartNode<BaseData>>(dataNodeRoot)\n\n  rootHierarchy.data.x0 = height / 2\n  rootHierarchy.data.y0 = 0\n\n  const buildTree = treeD3<ChartNode<BaseData>>().nodeSize([40, 250])\n\n  const rootTree = buildTree(rootHierarchy)\n\n  rootTree.descendants().forEach((treeNode: TreeNode) => {\n    treeNode.data._children = treeNode.children\n\n    if (treeNode.depth) {\n      treeNode.children = undefined\n    }\n  })\n\n  const svgG = select<SVGElement, TreeNode>(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n\n  setupDrag(svgG)\n\n  const commonUIOpts = {\n    container: svgG,\n    getInitialPosition: (node: TreeNode) => ({\n      x: node.data.x0,\n      y: node.data.y0,\n    }),\n    getPosition: (node: TreeNode) => ({ x: node.x, y: node.y }),\n    linkDefaultColor: inlineStyles.linkDefaultColor,\n    openCloseAnimationDuration: OPEN_CLOSE_ANIMATION_MS,\n  }\n\n  const uiLink = new UILink<SVGGElement, TreeLink, TreeNode>(commonUIOpts)\n\n  const uiNode = new UINode({\n    ...commonUIOpts,\n    displayRemoveButton: (treeNode) => chartConfig.canBeRemoved(treeNode.data),\n    getNodeId: (treeNode) => chartConfig.getNodeId(treeNode.data),\n    getPointingLinkForNode: (treeNode) =>\n      uiLink\n        .getSelection()\n        .filter(\n          (link) =>\n            chartConfig.getNodeId(link.target.data) ===\n            chartConfig.getNodeId(treeNode.data)\n        ) as unknown as Selection<SVGElement, unknown, SVGElement, unknown>,\n    getText: (treeNode) => chartConfig.getNodeLabel(treeNode.data),\n    hasDescendants: (node) => !!node.data.children?.length,\n  })\n\n  const update = (source: TreeNode) => {\n    const nodes = rootTree.descendants().reverse()\n    const links = rootTree.links()\n\n    buildTree(rootHierarchy)\n\n    uiNode.update({\n      getData: () => [\n        nodes,\n        (treeNode) => chartConfig.getNodeId(treeNode.data),\n      ],\n      onNodeAdd: (clickedTreeNode) => {\n        const newNodeData = chartConfig.onNodeAdd(clickedTreeNode.data)\n        const newDataNode = getChartNode(newNodeData)\n        const newNodeHirarchy = hierarchy<ChartNode<BaseData>>(\n          newDataNode\n        ) as TreeNode\n\n        // @ts-expect-error\n        newNodeHirarchy.depth = clickedTreeNode.depth + 1\n        newNodeHirarchy.parent = clickedTreeNode\n\n        clickedTreeNode.children =\n          clickedTreeNode.children ?? clickedTreeNode.data._children ?? []\n        clickedTreeNode.data._children = clickedTreeNode.children\n        clickedTreeNode.children.push(newNodeHirarchy)\n\n        clickedTreeNode.data.children = clickedTreeNode.data.children ?? []\n        clickedTreeNode.data.children.push(newNodeHirarchy.data)\n\n        window.requestAnimationFrame(() => {\n          update(clickedTreeNode)\n        })\n      },\n      onNodeClick: (treeNode) => {\n        treeNode.children = treeNode.children\n          ? undefined\n          : treeNode.data._children\n\n        update(treeNode)\n      },\n      onNodeRemove: (clickedTreeNode) => {\n        const parentNode = chartConfig.onNodeRemove(clickedTreeNode.data)\n\n        const treeNode = findNode({\n          getId: (node) => chartConfig.getNodeId(node.data),\n          node: rootHierarchy,\n          nodeId: chartConfig.getNodeId(parentNode as ChartNode<BaseData>),\n        }) as TreeNode\n\n        const nodeIndex = treeNode.children!.findIndex(\n          (node) =>\n            chartConfig.getNodeId(node.data) ===\n            chartConfig.getNodeId(clickedTreeNode.data)\n        )\n\n        treeNode.children!.splice(nodeIndex, 1)\n\n        update(treeNode)\n      },\n      source,\n    })\n\n    uiLink.update({\n      getData: () => [\n        links,\n        (treeLink) => chartConfig.getNodeId(treeLink.target.data),\n      ],\n      source,\n    })\n\n    rootTree.eachBefore((treeNode) => {\n      treeNode.data.x0 = treeNode.x\n      treeNode.data.y0 = treeNode.y\n    })\n  }\n\n  update(rootTree)\n}\n\nexport { NodeShape, findNode, findParentNode, ChartConfig, renderChart }\n","// extracted by mini-css-extract-plugin\nexport var collapsibleTreeChart = \"collapsible-tree-module--collapsibleTreeChart--32549\";\nexport var node = \"collapsible-tree-module--node--c0811\";\nexport var link = \"collapsible-tree-module--link--20248\";","import { json } from \"d3\"\n\nimport {\n  ChartConfig,\n  NodeShape,\n  findNode,\n  findParentNode,\n} from \"./collapsible-tree-chart\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\ntype RawData = {\n  name: string\n}\n\ntype BaseData = RawData & {\n  id: number\n}\n\ntype RawNode = NodeShape<BaseData>\ntype BaseNode = NodeShape<BaseData>\n\nconst getBaseNode = ({\n  context,\n  rawNode,\n}: {\n  context: { id: number }\n  rawNode: RawNode\n}): BaseNode => {\n  const { id: nodeId } = context\n\n  context.id += 1\n\n  return {\n    ...rawNode,\n    children: (rawNode.children ?? []).map((rawNodeChildren) =>\n      getBaseNode({ context, rawNode: rawNodeChildren })\n    ),\n    id: nodeId,\n  }\n}\n\nconst findMaxId = (node: BaseNode): BaseNode[\"id\"] =>\n  (node.children ?? []).reduce(\n    (...[acc, childrenNode]) => Math.max(findMaxId(childrenNode), acc),\n    node.id\n  )\n\nconst fetchData = async (): Promise<BaseNode> => {\n  const rawNode = (await json(\n    `${ROOT_PATH}data/d3js/collapsible-tree/data.json`\n  )) as RawNode\n\n  return getBaseNode({ context: { id: 0 }, rawNode })\n}\n\ntype Config = ChartConfig<BaseData>\n\nconst getNodeLabel: Config[\"getNodeLabel\"] = (node) => node.name\nconst getNodeId: Config[\"getNodeId\"] = (node) => node.id\nconst canBeRemoved: Config[\"canBeRemoved\"] = (node) => node.id !== 0\n\nconst createChartConfig = (rootData: BaseNode): Config => {\n  const onNodeAdd: Config[\"onNodeAdd\"] = (clickedNode) => {\n    const maxId = findMaxId(rootData)\n    const baseNode = findNode({\n      getId: (node) => node.id,\n      node: rootData,\n      nodeId: clickedNode.id,\n    })\n\n    if (!baseNode) {\n      throw new Error(\"Node not found\")\n    }\n\n    const newId = maxId + 1\n\n    baseNode.children = baseNode.children ?? []\n\n    const newNode = {\n      id: newId,\n      name: `New Node id: ${newId}`,\n    }\n\n    baseNode.children.push(newNode)\n\n    return newNode\n  }\n\n  const onNodeRemove: Config[\"onNodeRemove\"] = (clickedNode) => {\n    const parentNode = findParentNode({\n      getId: (node) => node.id,\n      node: rootData,\n      nodeId: clickedNode.id,\n    })\n\n    if (!parentNode) {\n      throw new Error(\"No parent node\")\n    }\n\n    const nodeIndex = parentNode.children!.findIndex(\n      (node) => node.id === clickedNode.id\n    )\n\n    parentNode.children!.splice(nodeIndex, 1)\n\n    return parentNode\n  }\n\n  return {\n    canBeRemoved,\n    getNodeId,\n    getNodeLabel,\n    onNodeAdd,\n    onNodeRemove,\n    rootData,\n    rootElId: CONTAINER_ID,\n  }\n}\n\nexport { fetchData, createChartConfig }\n","import { renderChart } from \"./collapsible-tree-chart\"\nimport { createChartConfig, fetchData } from \"./collapsible-tree-chart-config\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\nconst main = async () => {\n  const rootData = await fetchData()\n\n  const chartConfig = createChartConfig(rootData)\n\n  renderChart(chartConfig)\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/collapsible-tree/collapsible-tree\"\n\nconst CollapsibleTree = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default CollapsibleTree\n","module.exports = require(\"regenerator-runtime\");\n","// extracted by mini-css-extract-plugin\nexport var backHome = \"styles-module--backHome--b9e05\";\nexport var bullet = \"styles-module--bullet--337e0\";\nexport var d3js = \"styles-module--d3js--ff3aa\";\nexport var raphael = \"styles-module--raphael--40af0\";\nexport var storybook = \"styles-module--storybook--f1bcc\";\nexport var testing = \"styles-module--testing--9f8b3\";\nexport var codeFragment = \"styles-module--codeFragment--8d705\";\nexport var codeFragmentButton = \"styles-module--codeFragmentButton--98bc0\";\nexport var contentWrapper = \"styles-module--contentWrapper--2c2b6\";\nexport var demoName = \"styles-module--demoName--4057d\";\nexport var divisor = \"styles-module--divisor--4c75d\";\nexport var fileNameWrapper = \"styles-module--fileNameWrapper--e0bd4\";\nexport var footer = \"styles-module--footer--a0f96\";\nexport var footerWrapper = \"styles-module--footerWrapper--5365d\";\nexport var homeDemoNumber = \"styles-module--homeDemoNumber--755fe\";\nexport var homeDemoNameLink = \"styles-module--homeDemoNameLink--4b57a\";\nexport var navWrapper = \"styles-module--navWrapper--08cc9\";\nexport var notes = \"styles-module--notes--e1c07\";\nexport var rootLayout = \"styles-module--rootLayout--03362\";\nexport var sourceNumber = \"styles-module--sourceNumber--335c1\";\nexport var pageHeader = \"styles-module--pageHeader--06484\";\nexport var titleWrapper = \"styles-module--titleWrapper--81a79\";\nexport var rowWrapper = \"styles-module--rowWrapper--9f3a4\";\nexport var tagCollection = \"styles-module--tagCollection--c96c8\";\nexport var tag = \"styles-module--tag--8c674\";\nexport var demosLegend = \"styles-module--demosLegend--16d25\";\nexport var demosLists = \"styles-module--demosLists--52492\";\nexport var highlightStorybook = \"styles-module--highlightStorybook--b465e\";\nexport var highlightTesting = \"styles-module--highlightTesting--b7d3f\";\nexport var demoWip = \"styles-module--demoWip--18449\";\nexport var demoTitle = \"styles-module--demoTitle--7c73a\";\nexport var mainSource = \"styles-module--mainSource--f7ebb\";\nexport var dataList = \"styles-module--dataList--54f77\";\nexport var sourcesList = \"styles-module--sourcesList--27e91\";\nexport var ghButtons = \"styles-module--ghButtons--1d466\";","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["isCompleted","mainSource","name","className","id","styles","title","href","rel","target","ROOT_PATH","role","getDemoE2ETestFilePath","demoName","useState","browserWidth","setBrowserWidth","useEffect","browserWidthInitial","window","Math","max","document","body","scrollWidth","documentElement","offsetWidth","clientWidth","content","isExpanded","setIsExpanded","useBrowserInitialWidth","onClick","type","dangerouslySetInnerHTML","__html","CodeInGH","filePath","CoverageReport","demoInfo","pageFilePath","category","key","files","page","notes","length","map","note","noteIndex","summary","summaryLine","summaryIndex","sources","source","sourceIndex","docs","doc","dataFiles","file","fileIndex","demoTS","demoCSS","cssIndex","parsePath","str","replace","main","children","scripts","links","pageContext","meta","catch","mainError","console","error","Helmet","link","description","script","src","Date","getFullYear","frameBorder","height","scrolling","width","treeLinkPathClass","UILink","opts","this","initialOpts","linkPath","linkHorizontal","x","diagonalNode","y","linkG","container","append","attr","linkDefaultColor","update","getInitialPosition","getPosition","openCloseAnimationDuration","getData","linkSelection","selectAll","data","linkEnter","enter","merge","transition","duration","exit","remove","getSelection","UISmallButton","random","toFixed","split","add","dx","fontSize","text","groupSelection","style","textSelection","on","clickEvent","datum","stopPropagation","hide","filterFn","select","itemData","CONTAINER_ID","NODE_CIRCLE_CLASS","nodeLabelClass","UINode","hoveredItems","Set","nodeG","circleLinkForEffect","insert","plusButton","minusButton","displayRemoveButton","getNodeId","getPointingLinkForNode","getText","hasDescendants","nodeSelection","circleDefaultFill","node","has","nodeEnter","position","treeNode","onNodeClick","clone","lower","buttons","showButtonsIfNecessary","forEach","button","focusedTreeNode","pointingLink","size","animePath","anime","easing","endDelay","loop","targets","translateX","translateY","delete","nodeGroup","nodeDatum","onNodeAdd","onNodeRemove","each","textDX","sourcePosition","inlineStyles","findNode","getId","nodeId","reduce","acc","otherNode","findParentNode","some","margin","getChartNode","initialNode","_children","undefined","subNode","x0","y0","renderChart","chartConfig","rootData","rootElId","rootEl","getElementById","classList","getBoundingClientRect","dataNodeRoot","rootHierarchy","hierarchy","buildTree","treeD3","nodeSize","rootTree","descendants","depth","svgG","translateOffset","draggedState","dragHandler","drag","dragEvent","dy","parentNode","call","setupDrag","commonUIOpts","uiLink","uiNode","canBeRemoved","filter","getNodeLabel","nodes","reverse","clickedTreeNode","newNodeData","newDataNode","newNodeHirarchy","parent","push","requestAnimationFrame","nodeIndex","findIndex","splice","treeLink","eachBefore","getBaseNode","context","rawNode","rawNodeChildren","findMaxId","childrenNode","fetchData","json","createChartConfig","clickedNode","maxId","baseNode","Error","newId","newNode","module","exports","backHome","bullet","d3js","raphael","storybook","testing","codeFragment","codeFragmentButton","contentWrapper","divisor","fileNameWrapper","footer","footerWrapper","homeDemoNumber","homeDemoNameLink","navWrapper","rootLayout","sourceNumber","pageHeader","titleWrapper","rowWrapper","tagCollection","tag","demosLegend","demosLists","highlightStorybook","highlightTesting","demoWip","demoTitle","dataList","sourcesList","ghButtons","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err"],"sourceRoot":""}