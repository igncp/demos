{"version":3,"file":"component---src-pages-d-3-js-concentric-circles-tsx-d2b4be01ab88fed639f7.js","mappings":"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","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/demos/concentric-circles/circles-chart.ts","webpack://demos/./src/demos/concentric-circles/ui-constants.ts","webpack://demos/./src/demos/concentric-circles/concentric-circles-config.ts","webpack://demos/./src/demos/concentric-circles/concentric-circles.ts","webpack://demos/./src/pages/d3js/concentric-circles.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import {\n  D3DragEvent,\n  Selection,\n  drag,\n  interpolateCool,\n  max,\n  scaleLinear,\n  scaleOrdinal,\n  select,\n} from \"d3\"\nimport { v1 as uuidv1 } from \"uuid\"\n\nconst margin = {\n  bottom: 20,\n  left: 20,\n  right: 20,\n  top: 20,\n}\n\n// https://stackoverflow.com/questions/2916081/zoom-in-on-a-point-using-scale-and-translate\nconst getNewDrag = ({\n  baseZoom,\n  newZoom,\n  prevDragX,\n  prevDragY,\n  prevZoom,\n  zoomPoint,\n}: {\n  baseZoom: number\n  newZoom: number\n  prevDragX: number\n  prevDragY: number\n  prevZoom: number\n  zoomPoint: { x: number; y: number }\n}) => {\n  const scalechange = (newZoom - prevZoom) / baseZoom\n  const offsetX = -(zoomPoint.x * scalechange)\n  const offsetY = -(zoomPoint.y * scalechange)\n\n  return {\n    x: prevDragX + offsetX,\n    y: prevDragY + offsetY,\n  }\n}\n\ntype ChartConfig<ChartData> = Readonly<{\n  chartDescription: string\n  circlesData: ChartData[]\n  getCircleId: (circle: ChartData) => string\n  getCircleTitle: (circle: ChartData) => string\n  getCircleValue: (circle: ChartData) => number\n  rootElId: string\n}>\n\ntype ChartElements<ChartData> = Readonly<{\n  descriptionSel: Selection<SVGTextElement, ChartData, HTMLElement, unknown>\n  dragSel: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n  gSel: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n  rootSel: Selection<HTMLElement, ChartData, HTMLElement, unknown>\n  svgSel: Selection<SVGSVGElement, ChartData, HTMLElement, unknown>\n}>\n\nclass CirclesChart<ChartData> {\n  public static defaultZoom = 10\n\n  private readonly config: ChartConfig<ChartData>\n  private readonly elements: ChartElements<ChartData>\n  private readonly circleClass: string\n  private readonly state: {\n    dragX: number\n    dragY: number\n    selectedCircles: Record<string, boolean>\n    zoom: number\n  } = {\n    dragX: 0,\n    dragY: 0,\n    selectedCircles: {},\n    zoom: CirclesChart.defaultZoom,\n  }\n\n  private constructor(config: ChartConfig<ChartData>) {\n    this.config = config\n\n    const rootSel = select<HTMLElement, ChartData>(`#${config.rootElId}`)\n    const svgSel = rootSel.append(\"svg\")\n    const dragSel = svgSel.append(\"g\")\n    const gSel = dragSel.append(\"g\")\n    const descriptionSel = gSel\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"width\", \"20px\")\n\n    this.circleClass = `name-circle-${uuidv1().slice(0, 6)}`\n\n    this.elements = {\n      descriptionSel,\n      dragSel,\n      gSel,\n      rootSel,\n      svgSel,\n    }\n\n    this.setupDrag()\n    this.render()\n\n    window.addEventListener(\"resize\", this.handleResize)\n  }\n\n  public static renderChart<ChartData>(config: ChartConfig<ChartData>) {\n    return new CirclesChart(config)\n  }\n\n  public teardown() {\n    window.removeEventListener(\"resize\", this.handleResize)\n  }\n\n  public setZoom(zoom: number) {\n    const { height, width } = this.getDimensions()\n\n    const newDrag = getNewDrag({\n      baseZoom: CirclesChart.defaultZoom,\n      newZoom: zoom,\n      prevDragX: this.state.dragX,\n      prevDragY: this.state.dragY,\n      prevZoom: this.state.zoom,\n      zoomPoint: { x: width / 2, y: height / 2 },\n    })\n\n    this.state.zoom = zoom\n    this.state.dragX = newDrag.x\n    this.state.dragY = newDrag.y\n\n    this.updateDrag()\n  }\n\n  private updateDrag() {\n    const {\n      elements: { dragSel },\n    } = this\n\n    dragSel.attr(\n      \"transform\",\n      `translate(${this.state.dragX},${this.state.dragY}) scale(${\n        this.state.zoom / CirclesChart.defaultZoom\n      })`\n    )\n  }\n\n  private setupDrag() {\n    const {\n      elements: { svgSel },\n    } = this\n\n    const dragHandler = drag<SVGSVGElement, ChartData>().on(\n      \"drag\",\n      (dragEvent: D3DragEvent<SVGSVGElement, unknown, unknown>) => {\n        this.state.dragX += dragEvent.dx\n        this.state.dragY += dragEvent.dy\n\n        this.updateDrag()\n      }\n    )\n\n    svgSel.style(\"cursor\", \"move\").call(dragHandler).on(\"wheel\", null)\n  }\n\n  private getDimensions() {\n    const {\n      config: { circlesData, getCircleValue, rootElId },\n    } = this\n    const rootEl = document.getElementById(rootElId) as HTMLElement\n    const { width: elWidth } = rootEl.getBoundingClientRect()\n\n    const width = elWidth - margin.left - margin.right\n    const height = max(circlesData, getCircleValue)! * 2.5\n\n    return {\n      height,\n      width,\n    }\n  }\n\n  private render() {\n    const {\n      config: {\n        chartDescription,\n        circlesData,\n        getCircleId,\n        getCircleTitle,\n        getCircleValue,\n      },\n      elements,\n    } = this\n\n    this.updateDrag()\n\n    const maxValue = max(circlesData, getCircleValue) as number\n    const colorScale = scaleOrdinal<number, number>()\n      .domain([0, maxValue])\n      .range([0, 0.5])\n    const clickedColor = \"orange\"\n\n    const colorize = (circle: ChartData) => {\n      const circleId = getCircleId(circle)\n\n      if (this.state.selectedCircles[circleId]) {\n        return clickedColor\n      }\n\n      const circleValue = getCircleValue(circle)\n\n      const normalized = colorScale(circleValue)\n\n      return interpolateCool(normalized)\n    }\n\n    const { height, width } = this.getDimensions()\n\n    elements.svgSel\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.left + margin.right)\n\n    // It sorts from bigger to smaller value for the hover to work\n    const sortedData = circlesData\n      .slice(0)\n      .sort(\n        (...[circleA, circleB]) =>\n          getCircleValue(circleB) - getCircleValue(circleA)\n      )\n\n    const groupUpdates = elements.gSel\n      .selectAll<SVGGElement, ChartData>(\".circle-group\")\n      .data(sortedData, getCircleId)\n\n    groupUpdates\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"circle-group\")\n      .append(\"circle\")\n      .attr(\"class\", this.circleClass)\n\n    groupUpdates.exit().remove()\n\n    const maxRadius = Math.min(height / 2, width / 2)\n    const scaleRadius = scaleLinear()\n      .domain([0, maxValue])\n      .range([0, maxRadius])\n\n    const circles = elements.gSel.selectAll<SVGCircleElement, ChartData>(\n      `.${this.circleClass}`\n    )\n\n    const {\n      state: { selectedCircles },\n    } = this\n\n    const bigStroke = \"4px\"\n\n    const getStrokeWidth = (circle: ChartData) => {\n      const id = getCircleId(circle)\n\n      return selectedCircles[id] ? bigStroke : \"2px\"\n    }\n\n    circles\n      .attr(\"cx\", width / 2)\n      .attr(\"cy\", height / 2)\n      .style(\"fill\", \"rgba(0, 0, 0, 0)\")\n      .style(\"stroke\", colorize)\n      .style(\"stroke-width\", getStrokeWidth)\n      .attr(\"r\", (circle) => scaleRadius(getCircleValue(circle)))\n      .on(\"mouseenter\", function handleMouseEnter() {\n        select<SVGCircleElement, ChartData>(this)\n          .style(\"stroke\", clickedColor)\n          .style(\"stroke-width\", bigStroke)\n      })\n      .on(\"mouseleave\", function handleMouseLeave() {\n        select<SVGCircleElement, ChartData>(this)\n          .style(\"stroke\", colorize)\n          .style(\"stroke-width\", getStrokeWidth)\n      })\n      .on(\"click\", function handleClick(...[, circle]) {\n        const id = getCircleId(circle)\n\n        selectedCircles[id] = !selectedCircles[id]\n\n        select<SVGCircleElement, ChartData>(this)\n          .style(\"stroke\", colorize)\n          .style(\"stroke-width\", getStrokeWidth)\n      })\n      .append(\"title\")\n      .text(getCircleTitle)\n\n    elements.descriptionSel\n      .text(chartDescription)\n      .attr(\"transform\", `translate(${width / 2},${height + 25})`)\n  }\n\n  private readonly handleResize = () => {\n    this.render()\n  }\n}\n\nconst _test = process.env.NODE_ENV === \"test\" ? { getNewDrag } : null\n\nexport { CirclesChart, ChartConfig, _test }\n","const CONTAINER_ID = \"chart\"\n\nexport { CONTAINER_ID }\n","import { csv } from \"d3\"\n\nimport { ChartConfig } from \"./circles-chart\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\nconst ZOOM_SLIDER_ID = \"year-slider\"\n\ntype NamesMetric = {\n  count: number\n  name: string\n  year: string\n}\n\ntype NamesMetrics = NamesMetric[]\n\nconst fetchData = async (): Promise<NamesMetrics> => {\n  const response = (await csv(\n    `${ROOT_PATH}data/d3js/concentric-circles/data.csv`\n  )) as unknown as NamesMetrics\n\n  return response.map((nameItem) => ({\n    ...nameItem,\n    count: +nameItem.count,\n  }))\n}\n\ntype Config = ChartConfig<NamesMetric>\n\nconst getCircleValue: Config[\"getCircleValue\"] = (circle) => circle.count\nconst getCircleId: Config[\"getCircleId\"] = (circle) => circle.name\n\nconst getCircleTitle: Config[\"getCircleTitle\"] = (circle) =>\n  `${circle.name}: ${circle.count}`\n\nconst chartDescription =\n  \"Circles radius are proportional to order in the ranking, click to select\"\n\nconst getChartConfig = ({\n  namesMetrics,\n}: {\n  namesMetrics: NamesMetrics\n}): Config => ({\n  chartDescription,\n  circlesData: (() => {\n    const addedNames = new Set()\n\n    return namesMetrics\n      .sort((...[namesObjA, namesObjB]) => namesObjB.count - namesObjA.count)\n      .filter((nameObj) => {\n        if (addedNames.has(nameObj.name)) {\n          return false\n        }\n\n        addedNames.add(nameObj.name)\n\n        return true\n      })\n      .reverse()\n  })(),\n  getCircleId,\n  getCircleTitle,\n  getCircleValue,\n  rootElId: CONTAINER_ID,\n})\n\nexport { ZOOM_SLIDER_ID, fetchData, getChartConfig }\n","import $ from \"jquery\"\nimport \"jquery-ui/themes/base/all.css\"\n\nimport { CirclesChart } from \"./circles-chart\"\nimport {\n  ZOOM_SLIDER_ID,\n  fetchData,\n  getChartConfig,\n} from \"./concentric-circles-config\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\nif (typeof window !== \"undefined\") {\n  require(\"jquery-ui/ui/widgets/slider\")\n}\n\nconst main = async () => {\n  const namesMetrics = await fetchData()\n  const { defaultZoom } = CirclesChart\n\n  const chartConfig = getChartConfig({\n    namesMetrics,\n  })\n\n  const chart = CirclesChart.renderChart(chartConfig)\n\n  $(`#${ZOOM_SLIDER_ID}`).slider({\n    change: (...[, { value: zoomValue }]) => {\n      chart.setZoom(zoomValue as number)\n    },\n    max: 100,\n    min: defaultZoom,\n    value: defaultZoom, // eslint-disable-line id-denylist\n  })\n}\n\nexport { CONTAINER_ID, ZOOM_SLIDER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, {\n  CONTAINER_ID,\n  ZOOM_SLIDER_ID,\n} from \"@/demos/concentric-circles/concentric-circles\"\n\nconst ConcentricCircles = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div style={{ marginBottom: 20 }}>\n      <p>Zoom</p>\n      <div id={ZOOM_SLIDER_ID} />\n    </div>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default ConcentricCircles\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","margin","CirclesChart","config","state","dragX","dragY","selectedCircles","zoom","defaultZoom","handleResize","render","this","rootSel","select","rootElId","svgSel","append","dragSel","gSel","descriptionSel","attr","circleClass","uuidv1","slice","elements","setupDrag","window","addEventListener","renderChart","teardown","removeEventListener","setZoom","baseZoom","newZoom","prevDragX","prevDragY","prevZoom","zoomPoint","scalechange","getDimensions","height","width","newDrag","x","y","updateDrag","dragHandler","drag","on","dragEvent","dx","dy","style","call","circlesData","getCircleValue","document","getElementById","getBoundingClientRect","max","chartDescription","getCircleId","getCircleTitle","maxValue","colorScale","scaleOrdinal","domain","range","clickedColor","colorize","circle","circleId","circleValue","normalized","interpolateCool","sortedData","sort","circleA","circleB","groupUpdates","selectAll","data","enter","exit","remove","maxRadius","Math","min","scaleRadius","scaleLinear","circles","getStrokeWidth","id","text","CONTAINER_ID","ZOOM_SLIDER_ID","fetchData","csv","ROOT_PATH","response","map","nameItem","count","name","getChartConfig","addedNames","namesMetrics","Set","namesObjA","namesObjB","filter","nameObj","has","add","reverse","require","main","chartConfig","chart","$","slider","change","zoomValue","value","pageContext","marginBottom"],"sourceRoot":""}