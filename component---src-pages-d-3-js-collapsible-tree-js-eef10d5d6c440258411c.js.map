{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/collapsible-tree/collapsible-tree.js","webpack://demos/./src/pages/d3js/collapsible-tree.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchData","d3","ROOT_PATH","data","margin","height","renderChart","rootElId","rootData","root","descendants","forEach","d","i","id","_children","children","depth","name","length","width","document","getElementById","getBoundingClientRect","x0","y0","tree","nodeSize","diagonal","x","y","svg","append","attr","gLink","gNode","update","source","nodes","reverse","links","left","right","eachBefore","node","transition","duration","tween","window","ResizeObserver","dispatch","selectAll","nodeEnter","enter","on","_event","text","clone","lower","merge","exit","remove","link","target","linkEnter","o","demoInfo","pageContext","main","className"],"mappings":"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","file":"component---src-pages-d-3-js-collapsible-tree-js-eef10d5d6c440258411c.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as d3 from \"d3\"\n\nconst fetchData = async () => {\n  const data = await d3.json(`${ROOT_PATH}data/d3js/collapsible-tree/data.json`)\n\n  return data\n}\n\nconst margin = {\n  bottom: 20,\n  left: 120,\n  right: 120,\n  top: 20,\n}\n\nconst duration = 750\nconst height = 800 - margin.top - margin.bottom\n\nconst renderChart = ({ rootElId, rootData }) => {\n  const root = d3.hierarchy(rootData)\n\n  root.descendants().forEach((d, i) => {\n    d.id = i\n    d._children = d.children\n    if (d.depth && d.data.name.length !== 7) d.children = null\n  })\n\n  const width =\n    document.getElementById(rootElId).getBoundingClientRect().width -\n    margin.right -\n    margin.left\n\n  root.x0 = height / 2\n  root.y0 = 0\n\n  const tree = d3.tree().nodeSize([20, 100])\n\n  tree(root)\n\n  const diagonal = d3\n    .linkHorizontal()\n    .x((d) => d.y)\n    .y((d) => d.x)\n\n  const svg = d3\n    .select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.right + margin.left)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${height / 2})`)\n\n  const gLink = svg\n    .append(\"g\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#555\")\n    .attr(\"stroke-opacity\", 0.4)\n    .attr(\"stroke-width\", 1.5)\n\n  const gNode = svg\n    .append(\"g\")\n    .attr(\"cursor\", \"pointer\")\n    .attr(\"pointer-events\", \"all\")\n\n  const update = function (source) {\n    const nodes = root.descendants().reverse()\n    const links = root.links()\n\n    tree(root)\n\n    let left = root\n    let right = root\n\n    root.eachBefore((node) => {\n      if (node.x < left.x) left = node\n      if (node.x > right.x) right = node\n    })\n\n    const transition = svg\n      .transition()\n      .duration(duration)\n      .tween(\n        \"resize\",\n        window.ResizeObserver ? null : () => () => svg.dispatch(\"toggle\")\n      )\n    const node = gNode.selectAll(\"g\").data(nodes, (d) => d.id)\n\n    const nodeEnter = node\n      .enter()\n      .append(\"g\")\n      .attr(\"transform\", () => `translate(${source.y0},${source.x0})`)\n      .attr(\"fill-opacity\", 0)\n      .attr(\"stroke-opacity\", 0)\n      .on(\"click\", (_event, d) => {\n        d.children = d.children ? null : d._children\n\n        update(d)\n      })\n\n    nodeEnter\n      .append(\"circle\")\n      .attr(\"r\", 2.5)\n      .attr(\"fill\", (d) => (d._children ? \"#555\" : \"#999\"))\n      .attr(\"stroke-width\", 10)\n\n    nodeEnter\n      .append(\"text\")\n      .attr(\"dy\", \"0.31em\")\n      .attr(\"x\", (d) => (d._children ? -6 : 6))\n      .attr(\"text-anchor\", (d) => (d._children ? \"end\" : \"start\"))\n      .text((d) => (d.data ? d.data.name : d.name))\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"stroke\", \"white\")\n\n    node\n      .merge(nodeEnter)\n      .transition(transition)\n      .attr(\"transform\", (d) => `translate(${d.y},${d.x})`)\n      .attr(\"fill-opacity\", 1)\n      .attr(\"stroke-opacity\", 1)\n\n    node\n      .exit()\n      .transition(transition)\n      .remove()\n      .attr(\"transform\", () => `translate(${source.y},${source.x})`)\n      .attr(\"fill-opacity\", 0)\n      .attr(\"stroke-opacity\", 0)\n\n    const link = gLink.selectAll(\"path\").data(links, (d) => d.target.id)\n\n    const linkEnter = link\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", () => {\n        const o = { x: source.x0, y: source.y0 }\n\n        return diagonal({ source: o, target: o })\n      })\n\n    link.merge(linkEnter).transition(transition).attr(\"d\", diagonal)\n\n    link\n      .exit()\n      .transition(transition)\n      .remove()\n      .attr(\"d\", () => {\n        const o = { x: source.x, y: source.y }\n\n        return diagonal({ source: o, target: o })\n      })\n\n    root.eachBefore((d) => {\n      d.x0 = d.x\n      d.y0 = d.y\n    })\n  }\n\n  update(root)\n}\n\nconst main = async () => {\n  const rootElId = \"chart\"\n\n  const rootData = await fetchData()\n\n  renderChart({\n    rootData,\n    rootElId,\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/collapsible-tree/collapsible-tree\"\n\nimport \"@/demos/collapsible-tree/collapsible-tree.styl\"\n\nconst CollapsibleTree = ({ pageContext: { demoInfo } }) => (\n  <Demo demoInfo={demoInfo} main={main}>\n    <div className=\"collapsible-tree-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default CollapsibleTree\n"],"sourceRoot":""}