{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/force/force.module.css","webpack://demos/./src/demos/force/force.ts","webpack://demos/./src/pages/d3js/force.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","linkCurved","fetchData","all","d3","ROOT_PATH","nodes","links","settings","renderGraph","data","rootElId","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","svg","append","attr","simulation","force","strength","height","on","updateLinks","updateNodes","dragstarted","event","d","active","alphaTarget","restart","fx","x","fy","y","dragged","dragended","linksEls","selectAll","styles","enter","merge","dx","target","source","dy","dr","Math","sqrt","exit","remove","nodesEls","textsEls","each","_ev","index","style","call","text","name","_d","i","pageContext","main","id"],"mappings":"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","file":"component---src-pages-d-3-js-force-tsx-0fce55893489ef9fd034.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var forceChart = \"force-module--forceChart--oSa8u\";\nexport var linkCurved = \"force-module--linkCurved--373Bv\";\nexport var node = \"force-module--node--1g0MJ\";","import * as d3 from \"d3\"\n\nimport * as styles from \"./force.module.css\"\n\ntype Node = {\n  fx: number | null\n  fy: number | null\n  index: number\n  name: string\n  x: number\n  y: number\n}\n\ntype Data = {\n  links: Array<{\n    index: number\n    name: string\n    source: Node\n    target: Node\n  }>\n  nodes: Node[]\n}\n\ntype CustomDragEvent = DragEvent & { active: boolean }\n\nconst fetchData = async (): Promise<Data> => {\n  const [nodes, links] = await Promise.all([\n    d3.json(`${ROOT_PATH}data/d3js/force/nodes.json`),\n    d3.json(`${ROOT_PATH}data/d3js/force/links.json`),\n  ])\n\n  return {\n    links,\n    nodes,\n  } as Data\n}\n\nconst settings = {\n  circleRadius: 5,\n  defaultTextOpacity: 0.5,\n  strength: -40,\n  textDY: 5,\n}\n\nconst height = 600\n\ntype RenderGraph = (o: { data: Data; rootElId: string }) => void\n\nconst renderGraph: RenderGraph = ({ data, rootElId }) => {\n  const { links, nodes } = data\n\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.forceChart)\n\n  const { width } = rootEl.getBoundingClientRect()\n\n  const svg = d3\n    .select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n  const ticked = () => {\n    /* eslint-disable @typescript-eslint/no-use-before-define */\n    updateLinks()\n    updateNodes()\n    /* eslint-enable @typescript-eslint/no-use-before-define */\n  }\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\"charge\", d3.forceManyBody().strength(settings.strength))\n    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n    .force(\"link\", d3.forceLink().links(links))\n    .on(\"tick\", ticked)\n\n  const dragstarted = (event: CustomDragEvent, d: Node) => {\n    if (!event.active) simulation.alphaTarget(0.3).restart()\n    d.fx = d.x\n    d.fy = d.y\n  }\n\n  const dragged = (event: CustomDragEvent, d: Node) => {\n    d.fx = event.x\n    d.fy = event.y\n  }\n\n  const dragended = (event: CustomDragEvent, d: Node) => {\n    if (!event.active) simulation.alphaTarget(0)\n    d.fx = null\n    d.fy = null\n  }\n\n  const updateLinks = () => {\n    const linksEls = svg\n      .selectAll<SVGPathElement, Data[\"links\"]>(`.${styles.linkCurved}`)\n      .data(links)\n\n    linksEls\n      .enter()\n      .append<SVGPathElement>(\"path\")\n      .merge(linksEls)\n      .attr(\"d\", (d) => {\n        const dx = d.target.x - d.source.x\n        const dy = d.target.y - d.source.y\n        const dr = Math.sqrt(dx * dx + dy * dy) * 1.3\n\n        return `M${d.source.x},${d.source.y}A${dr},${dr} 0 0,1 ${d.target.x},${d.target.y}`\n      })\n      .attr(\"class\", styles.linkCurved)\n\n    linksEls.exit().remove()\n  }\n\n  const updateNodes = () => {\n    const nodesEls = svg\n      .selectAll<SVGCircleElement, Data[\"nodes\"]>(\"circle\")\n      .data(nodes)\n    const textsEls = svg\n      .selectAll<SVGTextElement, Data[\"nodes\"]>(\"text\")\n      .data(nodes)\n\n    nodesEls\n      .enter()\n      .append(\"circle\")\n      .merge(nodesEls)\n      .attr(\"cx\", (d) => d.x)\n      .attr(\"cy\", (d) => d.y)\n      .attr(\"r\", () => settings.circleRadius)\n      .attr(\"fill\", \"black\")\n      .each(function () {\n        d3.select<SVGCircleElement, Data[\"nodes\"][0]>(this)\n          .on(\"mouseover\", (_ev, d) => {\n            d3.select(`#node-text-${d.index}`).style(\"opacity\", 1)\n          })\n          .on(\"mouseleave\", (_ev, d) => {\n            d3.select(`#node-text-${d.index}`).style(\n              \"opacity\",\n              settings.defaultTextOpacity\n            )\n          })\n      })\n      .call(\n        d3\n          .drag<SVGCircleElement, Data[\"nodes\"][0]>()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended)\n      )\n\n    textsEls\n      .enter()\n      .append(\"text\")\n      .merge(textsEls)\n      .text((d) => d.name)\n      .attr(\"x\", (d) => d.x)\n      .attr(\"y\", (d) => d.y)\n      .attr(\"dy\", () => settings.textDY)\n      .attr(\"id\", (d) => `node-text-${d.index}`)\n      .style(\"opacity\", settings.defaultTextOpacity)\n\n    nodesEls.exit().remove()\n    textsEls.exit().remove()\n  }\n\n  svg\n    .selectAll(`.${styles.linkCurved}`)\n    .data(links)\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"class\", styles.linkCurved)\n    .attr(\"marker-end\", \"url(#end)\")\n    .attr(\"id\", (_d, i) => `link-${i}`)\n}\n\nconst main = async () => {\n  const data = await fetchData()\n\n  renderGraph({\n    data,\n    rootElId: \"chart\",\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/force/force\"\n\nconst Force = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Force\n"],"sourceRoot":""}