{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/timeline/timeline.module.css","webpack://demos/./src/demos/timeline/timeline.ts","webpack://demos/./src/pages/d3js/timeline.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","bandMinMaxLabel","interval","instant","margin","height","parseDate","dateString","date","timeParse","format","year","isNaN","Number","replace","Date","setUTCFullYear","toYear","getUTCFullYear","toString","Math","abs","Timeline","rootElId","rootEl","document","getElementById","classList","add","outerWidth","getBoundingClientRect","width","bandY","bandNum","dataContent","components","bands","svg","select","text","append","attr","style","id","deviation","slope","filter","feMerge","filterBlackOpacity","on","selectAll","styles","chart","data","timelineItems","today","tracks","items","timeOrder","compareAscending","item1","item2","result","start","end","compareDescending","forEach","item","getTime","sort","track","i","_i","_ref","length","nTracks","minDate","minD3","d","maxDate","maxD3","xAxis","bandName","band","axis","axisBottom","xScale","tickSize","tickFormat","y","h","redraw","call","parts","push","createTooltip","$","tooltip","sizeFactor","x","w","trackOffset","trackHeight","min","itemHeight","instantWidth","scaleTime","domain","range","yScale","yearsScale","g","enter","label","intervals","instants","addActions","actions","action","maxLetters","substr","part","labels","labelTop","labelDefs","_min","max","bandLabels","brush","targetNames","brushX","selectionScale","e","newDomain","selection","component","csv","ROOT_PATH","dataset","pageContext","links","main","scripts"],"mappings":"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","file":"component---src-pages-d-3-js-timeline-tsx-0d08532db41d04720f91.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var timelineChart = \"timeline-module--timelineChart--3qWN8\";\nexport var axis = \"timeline-module--axis--2Kd6K\";\nexport var band = \"timeline-module--band--1PQ93\";\nexport var bandLabel = \"timeline-module--bandLabel--EEttd\";\nexport var bandMinMaxLabel = \"timeline-module--bandMinMaxLabel--3JvSy\";\nexport var bandMidLabel = \"timeline-module--bandMidLabel--3TTUb\";\nexport var chart = \"timeline-module--chart--2GJYA\";\nexport var interval = \"timeline-module--interval--3ADVQ\";\nexport var instant = \"timeline-module--instant--1w4uA\";\nexport var instantLabel = \"timeline-module--instantLabel--2X-Rh\";\nexport var intervalLabel = \"timeline-module--intervalLabel--eyMIb\";","import {\n  Selection,\n  axisBottom,\n  brushX,\n  csv,\n  max as maxD3,\n  min as minD3,\n  scaleTime,\n  select,\n  selectAll,\n  timeParse,\n} from \"d3\"\n\nimport * as styles from \"./timeline.module.css\"\n\ntype DataItem = {\n  end: Date\n  instant: boolean\n  label: string\n  start: Date\n  track: number\n}\n\ntype RedrawComp = {\n  redraw?: () => void\n}\n\nconst fetchData = () =>\n  (csv(`${ROOT_PATH}data/d3js/timeline/data.csv`) as unknown) as Promise<\n    DataItem[]\n  >\n\nconst margin = {\n  bottom: 0,\n  left: 20,\n  right: 20,\n  top: 60,\n}\n\ntype Action = [string, () => void]\n\ntype Band = RedrawComp & {\n  addActions: (a: Action[]) => void\n  g: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  h: number\n  id: string\n  instantWidth: number\n  itemHeight: number\n  parts: RedrawComp[]\n  trackHeight: number\n  trackOffset: number\n  w: number\n  x: number\n  xScale: any\n  y: number\n  yScale: any\n  yearsScale: any\n}\n\nconst outerHeight = 700\nconst height = outerHeight - margin.top - margin.bottom\nconst bandGap = 25\n\nconst parseDate = function (dateString: string) {\n  const format = timeParse(\"%Y-%m-%d\")\n\n  let date = format(dateString)\n\n  if (date !== null) {\n    return date\n  }\n\n  const year = isNaN(Number(dateString))\n    ? -dateString.replace(/[^0-9]/g, \"\")\n    : +dateString\n\n  if (year < 0 || year > 99) {\n    date = new Date(year, 6, 1)\n  } else if (year === 0) {\n    date = new Date(-1, 6, 1)\n  } else {\n    date = new Date(year, 6, 1)\n    date.setUTCFullYear(year)\n  }\n\n  return date\n}\n\nconst toYear = (date: Date) => {\n  const bcString = \" BC\"\n  const year = date.getUTCFullYear()\n\n  if (year >= 0) {\n    return year.toString()\n  }\n\n  return bcString + Math.abs(year)\n}\n\nconst filterBlackOpacity = (\n  id: string,\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>,\n  deviation: number,\n  slope: number\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nclass Timeline {\n  private readonly chart: Selection<SVGGElement, unknown, HTMLElement, unknown>\n\n  private bandY: number\n  private bandNum: number\n  private dataContent: {\n    items?: DataItem[]\n    maxDate?: Date\n    minDate?: Date\n    nTracks?: number\n  }\n\n  private readonly components: RedrawComp[]\n  private bands: { [k: string]: Band }\n  private readonly width: number\n\n  public constructor({ rootElId }: { rootElId: string }) {\n    const rootEl = document.getElementById(rootElId) as HTMLElement\n\n    rootEl.classList.add(styles.timelineChart)\n\n    const { width: outerWidth } = rootEl.getBoundingClientRect()\n\n    this.width = outerWidth - margin.left - margin.right\n\n    this.bandY = 0\n    this.bandNum = 0\n\n    this.dataContent = {}\n    this.components = []\n    this.bands = {}\n\n    const svg = select(`#${rootElId}`)\n      .text(\"\")\n      .append(\"svg\")\n      .attr(\"height\", outerHeight + margin.top + margin.bottom)\n      .attr(\"width\", outerWidth + margin.left + margin.right)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", \"chart-title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(${outerWidth / 2},-20)`)\n      .text(\"Philosophers through History\")\n      .style(\"font-weight\", \"bold\")\n\n    filterBlackOpacity(\"intervals\", svg, 1, 0.2)\n\n    svg\n      .append(\"clipPath\")\n      .attr(\"id\", \"chart-area\")\n      .append(\"rect\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", height)\n\n    svg.on(\"mouseup\", () =>\n      selectAll(`.${styles.interval} rect`).style(\n        \"filter\",\n        \"url(#drop-shadow-intervals)\"\n      )\n    )\n\n    this.chart = svg\n      .append(\"g\")\n      .attr(\"class\", styles.chart)\n      .attr(\"clip-path\", \"url(#chart-area)\")\n  }\n\n  public data(timelineItems: DataItem[]) {\n    const today = new Date()\n\n    const tracks: Date[] = []\n\n    const yearMillis = 31622400000\n    const instantOffset = 100 * yearMillis\n\n    this.dataContent.items = timelineItems\n\n    const compareAscending = function (item1: any, item2: any) {\n      let result = item1.start - item2.start\n\n      if (result < 0) {\n        return -1\n      }\n\n      if (result > 0) {\n        return 1\n      }\n\n      result = item2.end - item1.end\n\n      if (result < 0) {\n        return -1\n      }\n\n      if (result > 0) {\n        return 1\n      }\n\n      return 0\n    }\n\n    const compareDescending = function (item1: any, item2: any) {\n      let result = item1.start - item2.start\n\n      if (result < 0) {\n        return 1\n      }\n\n      if (result > 0) {\n        return -1\n      }\n\n      result = item2.end - item1.end\n\n      if (result < 0) {\n        return 1\n      }\n\n      if (result > 0) {\n        return -1\n      }\n\n      return 0\n    }\n\n    const calculateTracks = (\n      items: any,\n      sortOrderInitial: string,\n      timeOrderInitial: string\n    ) => {\n      const sortOrder = sortOrderInitial || \"descending\"\n      const timeOrder = timeOrderInitial || \"backward\"\n\n      const sortBackward = () =>\n        items.forEach((item: any) => {\n          let track = 0\n\n          for (\n            let i = 0, _i = 0, { length: _ref } = tracks;\n            0 <= _ref ? _i < _ref : _i > _ref;\n            i = 0 <= _ref ? ++_i : --_i\n          ) {\n            if (item.end < tracks[i]) {\n              break\n            }\n\n            track++\n          }\n\n          item.track = track\n\n          tracks[track] = item.start\n        })\n\n      const sortForward = function () {\n        return items.forEach((item: any) => {\n          let track = 0\n\n          for (\n            let i = 0, _i = 0, { length: _ref } = tracks;\n            0 <= _ref ? _i < _ref : _i > _ref;\n            i = 0 <= _ref ? ++_i : --_i\n          ) {\n            if (item.start > tracks[i]) {\n              break\n            }\n\n            track++\n          }\n\n          item.track = track\n\n          tracks[track] = item.end\n        })\n      }\n\n      if (sortOrder === \"ascending\") {\n        this.dataContent.items!.sort(compareAscending)\n      } else {\n        this.dataContent.items!.sort(compareDescending)\n      }\n\n      if (timeOrder === \"forward\") {\n        return sortForward()\n      }\n\n      return sortBackward()\n    }\n\n    this.dataContent.items.forEach((item: any) => {\n      item.start = parseDate(item.start)\n\n      if (item.end === \"\") {\n        item.end = new Date(item.start.getTime() + instantOffset)\n        item.instant = true\n      } else {\n        item.end = parseDate(item.end)\n        item.instant = false\n      }\n\n      if (item.end > today) {\n        item.end = today\n      }\n    })\n\n    calculateTracks(this.dataContent.items, \"descending\", \"backward\")\n\n    this.dataContent.nTracks = tracks.length\n    this.dataContent.minDate = minD3(this.dataContent.items, (d) => d.start)\n    this.dataContent.maxDate = maxD3(\n      this.dataContent.items,\n      (d: DataItem) => d.end\n    )\n\n    return this\n  }\n\n  public xAxis(bandName: string) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n\n    const axis = axisBottom<Date>(band.xScale)\n      .tickSize(6)\n      .tickFormat((d: Date) => toYear(d))\n\n    const xAxis: RedrawComp &\n      Selection<SVGGElement, unknown, HTMLElement, unknown> = this.chart\n      .append(\"g\")\n      .attr(\"class\", styles.axis)\n      .attr(\"transform\", `translate(0,${band.y + band.h})`)\n\n    xAxis.redraw = function () {\n      xAxis.call(axis)\n    }\n\n    band.parts.push(xAxis)\n    this.components.push(xAxis)\n\n    return this\n  }\n\n  public createTooltip() {\n    $(`.part.${styles.instant}, .part.${styles.interval}`).tooltip({\n      track: true,\n    })\n\n    return this\n  }\n\n  public band(bandName: string, sizeFactor: number) {\n    const band: Partial<Band> = {}\n\n    band.id = `band${this.bandNum}`\n    band.x = 0\n    band.y = this.bandY\n    band.w = this.width\n    band.h = height * (sizeFactor || 1)\n    band.trackOffset = 0\n    band.trackHeight = Math.min(\n      (band.h - band.trackOffset) / this.dataContent.nTracks!,\n      20\n    )\n    band.itemHeight = band.trackHeight * 0.7\n    band.parts = []\n    band.instantWidth = 100\n    band.xScale = scaleTime()\n      .domain([this.dataContent.minDate!, this.dataContent.maxDate!])\n      .range([0, band.w])\n\n    band.yScale = (track: any) => band.trackOffset! + track * band.trackHeight!\n\n    band.yearsScale =\n      this.dataContent.maxDate!.getUTCFullYear() -\n      this.dataContent.minDate!.getUTCFullYear()\n    band.g = this.chart\n      .append(\"g\")\n      .attr(\"id\", band.id)\n      .attr(\"transform\", `translate(0,${band.y})`)\n    band.g\n      .append(\"rect\")\n      .attr(\"class\", styles.band)\n      .attr(\"width\", band.w)\n      .attr(\"height\", band.h)\n\n    const items = band.g\n      .selectAll(\"g\")\n      .data<DataItem>(this.dataContent.items!)\n      .enter()\n      .append<SVGSVGElement>(\"svg\")\n      .attr(\"y\", (d: DataItem) => band.yScale(d.track))\n      .attr(\"height\", band.itemHeight)\n      .attr(\"title\", (d: DataItem) => {\n        if (d.instant) {\n          return `${d.label}: ${toYear(d.start)}`\n        }\n\n        return `${d.label}: ${toYear(d.start)} - ${toYear(d.end)}`\n      })\n      .attr(\"class\", (d: DataItem) => {\n        if (d.instant) {\n          return `part ${styles.instant}`\n        }\n\n        return `part ${styles.interval}`\n      })\n\n    const intervals = select(`#band${this.bandNum}`).selectAll(\n      `.${styles.interval}`\n    )\n\n    intervals\n      .append(\"rect\")\n      .attr(\"height\", \"80%\")\n      .attr(\"width\", \"80%\")\n      .attr(\"x\", \"1px\")\n      .attr(\"y\", \".5px\")\n      .style(\"filter\", \"url(#drop-shadow-intervals)\")\n\n    intervals\n      .append(\"text\")\n      .attr(\"class\", styles.intervalLabel)\n      .attr(\"x\", 3)\n      .attr(\"y\", 9.5)\n\n    const instants = select(`#band${this.bandNum}`).selectAll(\n      `.${styles.instant}`\n    )\n\n    instants\n      .append(\"circle\")\n      .attr(\"cx\", band.itemHeight / 2)\n      .attr(\"cy\", band.itemHeight / 2)\n      .attr(\"r\", 5)\n    instants\n      .append(\"text\")\n      .attr(\"class\", styles.instantLabel)\n      .attr(\"x\", 15)\n      .attr(\"y\", 10)\n\n    band.addActions = function (actions: Action[]) {\n      actions.forEach((action) => items.on(action[0], action[1]))\n    }\n\n    band.redraw = function () {\n      items\n        .attr(\"x\", (d: DataItem) => band.xScale(d.start))\n        .attr(\n          \"width\",\n          (d: DataItem) => band.xScale(d.end) - band.xScale(d.start)\n        )\n        .select(\"text\")\n        .text((d: DataItem) => {\n          const scale = band.xScale(d.end) - band.xScale(d.start)\n          const maxLetters = scale / 9\n\n          if (d.label.length > maxLetters) {\n            return `${d.label.substr(0, maxLetters - 1)}..`\n          }\n\n          return d.label\n        })\n\n      band.parts!.forEach((part) => part.redraw!())\n    }\n\n    this.bands[bandName] = band as Band\n    this.components.push(band)\n    this.bandY += band.h + bandGap\n    this.bandNum += 1\n\n    return this\n  }\n\n  public labels(bandName: string) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n    const labelWidth = 46\n    const labelHeight = 20\n    const labelTop = band.y + band.h - 10\n    const yText = 15\n    const labelDefs = [\n      [\n        \"start\",\n        styles.bandMinMaxLabel,\n        0,\n        4,\n        function (min: Date) {\n          return toYear(min)\n        },\n        \"Start of the selected interval\",\n        band.x + 30,\n        labelTop,\n      ],\n      [\n        \"end\",\n        styles.bandMinMaxLabel,\n        band.w - labelWidth,\n        band.w - 4,\n        function (_min: Date, max: Date) {\n          return toYear(max)\n        },\n        \"End of the selected interval\",\n        band.x + band.w - 152,\n        labelTop,\n      ],\n      [\n        \"middle\",\n        styles.bandMidLabel,\n        (band.w - labelWidth) / 2,\n        band.w / 2,\n        function (min: Date, max: Date) {\n          const result = max.getUTCFullYear() - min.getUTCFullYear()\n\n          return result\n        },\n        \"Length of the selected interval\",\n        band.x + band.w / 2 - 75,\n        labelTop,\n      ],\n    ]\n    const bandLabels = this.chart\n      .append(\"g\")\n      .attr(\"id\", `${bandName}Labels`)\n      .attr(\"transform\", `translate(0,${band.y + band.h + 1})`)\n      .selectAll(`#${bandName}Labels`)\n      .data(labelDefs)\n      .enter()\n      .append(\"g\")\n\n    bandLabels\n      .append(\"rect\")\n      .attr(\"class\", styles.bandLabel)\n      .attr(\"x\", (d: any) => d[2])\n      .attr(\"width\", labelWidth)\n      .attr(\"height\", labelHeight)\n      .style(\"opacity\", 1)\n\n    const labels: RedrawComp &\n      Selection<SVGTextElement, any, SVGGElement, unknown> = bandLabels\n      .append(\"text\")\n      .attr(\"class\", (d: any) => d[1])\n      .attr(\"id\", (d: any) => d[0])\n      .attr(\"x\", (d: any) => d[3])\n      .attr(\"y\", yText)\n      .attr(\"text-anchor\", (d: any) => d[0])\n\n    labels.redraw = function () {\n      const min = band.xScale.domain()[0]\n      const max = band.xScale.domain()[1]\n\n      return labels.text((d: any) => d[4](min, max))\n    }\n\n    band.parts.push(labels)\n    this.components.push(labels)\n\n    return this\n  }\n\n  public brush(bandName: string, targetNames: string[]) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n    const brush = brushX()\n\n    const selectionScale = scaleTime()\n      .domain([0, 1000])\n      .range([\n        this.dataContent.minDate!.getTime(),\n        this.dataContent.maxDate!.getTime(),\n      ])\n\n    brush.on(\"brush\", (e) => {\n      let newDomain = band.xScale.domain()\n\n      if (e.selection) {\n        newDomain = [\n          selectionScale(e.selection[0]),\n          selectionScale(e.selection[1]),\n        ]\n      }\n\n      selectAll(`.${styles.interval} rect`).style(\"filter\", \"none\")\n\n      targetNames.forEach((d: any) => {\n        this.bands[d].xScale.domain(newDomain)\n\n        this.bands[d].redraw!()\n      })\n    })\n\n    const xBrush = band.g\n      .append(\"svg\")\n      .attr(\"class\", `x`)\n      .call(brush as any)\n\n    xBrush\n      .selectAll(\"rect\")\n      .attr(\"y\", 1)\n      .attr(\"height\", band.h - 1)\n\n    return this\n  }\n\n  public redraw() {\n    this.components.forEach((component: RedrawComp) => component.redraw!())\n\n    return this\n  }\n}\n\nconst main = async () => {\n  const dataset = await fetchData()\n\n  new Timeline({ rootElId: \"chart\" })\n    .data(dataset)\n    .band(\"mainBand\", 0.82)\n    .band(\"naviBand\", 0.08)\n    .xAxis(\"mainBand\")\n    .xAxis(\"naviBand\")\n    .labels(\"mainBand\")\n    .labels(\"naviBand\")\n    .brush(\"naviBand\", [\"mainBand\"])\n    .redraw()\n    .createTooltip()\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/timeline/timeline\"\n\nconst Timeline = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Timeline\n"],"sourceRoot":""}