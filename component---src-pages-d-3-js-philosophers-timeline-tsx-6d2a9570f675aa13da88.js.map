{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/philosophers-timeline/philosophers-timeline-chart.ts","webpack://demos/./src/demos/philosophers-timeline/philosophers-timeline.module.css","webpack://demos/./src/demos/philosophers-timeline/philosophers-timeline-chart-data.ts","webpack://demos/./src/demos/philosophers-timeline/philosophers-timeline.ts","webpack://demos/./src/pages/d3js/philosophers-timeline.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","SortOrder","TimeOrder","bandMinMaxLabel","interval","instant","margin","height","toYear","date","year","getUTCFullYear","toString","Math","abs","Timeline","chartConfig","rootEl","document","getElementById","rootElId","classList","add","outerWidth","getBoundingClientRect","width","bandY","bandNum","dataContent","components","bands","svg","select","text","append","attr","style","deviation","id","slope","filter","feMerge","filterBlackOpacity","on","selectAll","styles","chart","addChartData","timelineItems","tracks","chartItems","sortOrderInitial","timeOrderInitial","sortOrder","timeOrder","sortFn","Descending","Backward","Forward","getSortFn","sort","forEach","chartItem","trackIndex","length","getItemLimitRight","track","getItemLimitLeft","nTracks","minDate","minD3","maxDate","maxD3","xAxis","bandName","band","axis","axisBottom","xScale","tickSize","tickFormat","axisTick","y","h","redraw","call","parts","push","createTooltip","$","tooltip","addBand","sizeFactor","x","w","trackOffset","trackHeight","min","itemHeight","instantWidth","scaleTime","domain","range","yScale","g","timeBandElements","data","enter","getItemTitle","intervals","instants","addActions","actions","action","maxLetters","getItemText","part","labels","labelTop","labelDefs","className","getText","left","textAnchor","textLeft","top","max","bandLabels","label","addBrush","targetNames","brush","brushX","selectionScale","getTime","brushEvent","newDomain","selection","targetName","component","parseDate","dateString","timeParse","format","isNaN","Number","replace","Date","setUTCFullYear","fetchData","csv","ROOT_PATH","timeBandItems","today","timeBandItem","start","end","timeBandItemA","timeBandItemB","factor","Ascending","startDiff","substr","timelineData","pageContext","links","main","scripts"],"mappings":"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","file":"component---src-pages-d-3-js-philosophers-timeline-tsx-6d2a9570f675aa13da88.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import {\n  ScaleTime,\n  Selection,\n  axisBottom,\n  brushX,\n  max as maxD3,\n  min as minD3,\n  scaleTime,\n  select,\n  selectAll,\n} from \"d3\"\n\nimport * as styles from \"./philosophers-timeline.module.css\"\n\nexport enum SortOrder {\n  Ascending = \"ascending\",\n  Descending = \"descending\",\n}\n\nenum TimeOrder {\n  Backward = \"backward\",\n  Forward = \"forward\",\n}\n\ntype RedrawComp = {\n  redraw?: () => void\n}\n\nconst margin = {\n  bottom: 0,\n  left: 20,\n  right: 20,\n  top: 60,\n}\n\ntype Action = [string, () => void]\n\ntype Band = RedrawComp & {\n  addActions: (actions: Action[]) => void\n  g: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  h: number\n  id: string\n  instantWidth: number\n  itemHeight: number\n  parts: RedrawComp[]\n  trackHeight: number\n  trackOffset: number\n  w: number\n  x: number\n  xScale: ScaleTime<number, number, number>\n  y: number\n  yScale: (track: number) => number\n}\n\nconst outerHeight = 700\nconst height = outerHeight - margin.top - margin.bottom\nconst bandGap = 25\n\nconst toYear = (date: Date) => {\n  const bcString = \" BC\"\n  const year = date.getUTCFullYear()\n\n  if (year >= 0) {\n    return year.toString()\n  }\n\n  return bcString + Math.abs(year)\n}\n\nconst filterBlackOpacity = ({\n  deviation,\n  id,\n  slope,\n  svg,\n}: {\n  deviation: number\n  id: string\n  slope: number\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>\n}) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\ntype ChartDataBase = {\n  instant: boolean\n  track: number\n}\n\nexport type ChartConfig<ChartData extends ChartDataBase> = {\n  getItemLimitLeft: (chartItem: ChartData) => Date\n  getItemLimitRight: (chartItem: ChartData) => Date\n  getItemText: (o: { chartItem: ChartData; maxLetters: number }) => string\n  getItemTitle: (chartItem: ChartData) => string\n  getSortFn: (\n    sortOrder: SortOrder\n  ) => (itemA: ChartData, itemB: ChartData) => number\n  rootElId: string\n}\n\nexport class Timeline<ChartData extends ChartDataBase> {\n  private readonly chart: Selection<SVGGElement, unknown, HTMLElement, unknown>\n\n  private bandY: number\n  private bandNum: number\n  private dataContent: {\n    chartItems?: ChartData[]\n    maxDate?: Date\n    minDate?: Date\n    nTracks?: number\n  }\n\n  private readonly components: RedrawComp[]\n  private bands: { [k: string]: Band }\n  private readonly width: number\n  private readonly chartConfig: ChartConfig<ChartData>\n\n  public constructor(chartConfig: ChartConfig<ChartData>) {\n    this.chartConfig = chartConfig\n\n    const rootEl = document.getElementById(chartConfig.rootElId) as HTMLElement\n\n    rootEl.classList.add(styles.timelineChart)\n\n    const { width: outerWidth } = rootEl.getBoundingClientRect()\n\n    this.width = outerWidth - margin.left - margin.right\n\n    this.bandY = 0\n    this.bandNum = 0\n\n    this.dataContent = {}\n    this.components = []\n    this.bands = {}\n\n    const svg = select(`#${chartConfig.rootElId}`)\n      .text(\"\")\n      .append(\"svg\")\n      .attr(\"height\", outerHeight + margin.top + margin.bottom)\n      .attr(\"width\", outerWidth + margin.left + margin.right)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", \"chart-title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(${outerWidth / 2},-20)`)\n      .text(\"Philosophers through History\")\n      .style(\"font-weight\", \"bold\")\n\n    filterBlackOpacity({ deviation: 1, id: \"intervals\", slope: 0.2, svg })\n\n    svg\n      .append(\"clipPath\")\n      .attr(\"id\", \"chart-area\")\n      .append(\"rect\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", height)\n\n    svg.on(\"mouseup\", () =>\n      selectAll(`.${styles.interval} rect`).style(\n        \"filter\",\n        \"url(#drop-shadow-intervals)\"\n      )\n    )\n\n    this.chart = svg\n      .append(\"g\")\n      .attr(\"class\", styles.chart)\n      .attr(\"clip-path\", \"url(#chart-area)\")\n  }\n\n  public addChartData(timelineItems: ChartData[]) {\n    const tracks: Date[] = []\n\n    this.dataContent.chartItems = timelineItems\n\n    const calculateTracks = ({\n      chartItems,\n      sortOrderInitial,\n      timeOrderInitial,\n    }: {\n      chartItems: ChartData[]\n      sortOrderInitial?: SortOrder\n      timeOrderInitial?: TimeOrder\n    }) => {\n      const sortOrder = sortOrderInitial ?? SortOrder.Descending\n      const timeOrder = timeOrderInitial ?? TimeOrder.Forward\n\n      const sortBackward = () => {\n        chartItems.forEach((chartItem) => {\n          let trackIndex = 0\n\n          for (trackIndex = 0; trackIndex < tracks.length; trackIndex += 1) {\n            if (\n              this.chartConfig.getItemLimitRight(chartItem) < tracks[trackIndex]\n            ) {\n              break\n            }\n          }\n\n          chartItem.track = trackIndex\n          tracks[trackIndex] = this.chartConfig.getItemLimitLeft(chartItem)\n        })\n      }\n\n      const sortForward = () => {\n        chartItems.forEach((chartItem) => {\n          let trackIndex = 0\n\n          for (trackIndex = 0; trackIndex < tracks.length; trackIndex += 1) {\n            if (\n              this.chartConfig.getItemLimitLeft(chartItem) > tracks[trackIndex]\n            ) {\n              break\n            }\n          }\n\n          chartItem.track = trackIndex\n\n          tracks[trackIndex] = this.chartConfig.getItemLimitRight(chartItem)\n        })\n      }\n\n      const sortFn = this.chartConfig.getSortFn(sortOrder)\n\n      this.dataContent.chartItems!.sort(sortFn)\n\n      if (timeOrder === TimeOrder.Forward) {\n        sortForward()\n\n        return\n      }\n\n      sortBackward()\n    }\n\n    calculateTracks({\n      chartItems: this.dataContent.chartItems,\n      sortOrderInitial: SortOrder.Descending,\n      timeOrderInitial: TimeOrder.Backward,\n    })\n\n    this.dataContent.nTracks = tracks.length\n    this.dataContent.minDate = minD3(\n      this.dataContent.chartItems,\n      this.chartConfig.getItemLimitLeft\n    )\n    this.dataContent.maxDate = maxD3(\n      this.dataContent.chartItems,\n      this.chartConfig.getItemLimitRight\n    )\n\n    return this\n  }\n\n  public xAxis(bandName: string) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n\n    const axis = axisBottom<Date>(band.xScale)\n      .tickSize(6)\n      .tickFormat((axisTick) => toYear(axisTick))\n\n    const xAxis: RedrawComp &\n      Selection<SVGGElement, unknown, HTMLElement, unknown> = this.chart\n      .append(\"g\")\n      .attr(\"class\", styles.axis)\n      .attr(\"transform\", `translate(0,${band.y + band.h})`)\n\n    xAxis.redraw = function () {\n      xAxis.call(axis)\n    }\n\n    band.parts.push(xAxis)\n    this.components.push(xAxis)\n\n    return this\n  }\n\n  public createTooltip() {\n    $(`.part.${styles.instant}, .part.${styles.interval}`).tooltip({\n      track: true,\n    })\n\n    return this\n  }\n\n  public addBand({\n    bandName,\n    sizeFactor,\n  }: {\n    bandName: string\n    sizeFactor: number\n  }) {\n    const band: Partial<Band> = {}\n\n    band.id = `band${this.bandNum}`\n    band.x = 0\n    band.y = this.bandY\n    band.w = this.width\n    band.h = height * (sizeFactor || 1)\n    band.trackOffset = 0\n    band.trackHeight = Math.min(\n      (band.h - band.trackOffset) / this.dataContent.nTracks!,\n      20\n    )\n    band.itemHeight = band.trackHeight * 0.7\n    band.parts = []\n    band.instantWidth = 100\n    band.xScale = scaleTime()\n      .domain([this.dataContent.minDate!, this.dataContent.maxDate!])\n      .range([0, band.w])\n\n    band.yScale = (track: number) =>\n      band.trackOffset! + track * band.trackHeight!\n\n    band.g = this.chart\n      .append(\"g\")\n      .attr(\"id\", band.id)\n      .attr(\"transform\", `translate(0,${band.y})`)\n    band.g\n      .append(\"rect\")\n      .attr(\"class\", styles.band)\n      .attr(\"width\", band.w)\n      .attr(\"height\", band.h)\n\n    const timeBandElements = band.g\n      .selectAll(\"g\")\n      .data<ChartData>(this.dataContent.chartItems!)\n      .enter()\n      .append<SVGSVGElement>(\"svg\")\n      .attr(\"y\", (chartItem) => band.yScale!(chartItem.track))\n      .attr(\"height\", band.itemHeight)\n      .attr(\"title\", this.chartConfig.getItemTitle)\n      .attr(\n        \"class\",\n        (chartItem) =>\n          `part ${chartItem.instant ? styles.instant : styles.interval}`\n      )\n\n    const intervals = select(`#band${this.bandNum}`).selectAll(\n      `.${styles.interval}`\n    )\n\n    intervals\n      .append(\"rect\")\n      .attr(\"height\", \"80%\")\n      .attr(\"width\", \"80%\")\n      .attr(\"x\", \"1px\")\n      .attr(\"y\", \".5px\")\n      .style(\"filter\", \"url(#drop-shadow-intervals)\")\n\n    intervals\n      .append(\"text\")\n      .attr(\"class\", styles.intervalLabel)\n      .attr(\"x\", 3)\n      .attr(\"y\", 9.5)\n\n    const instants = select(`#band${this.bandNum}`).selectAll(\n      `.${styles.instant}`\n    )\n\n    instants\n      .append(\"circle\")\n      .attr(\"cx\", band.itemHeight / 2)\n      .attr(\"cy\", band.itemHeight / 2)\n      .attr(\"r\", 5)\n    instants\n      .append(\"text\")\n      .attr(\"class\", styles.instantLabel)\n      .attr(\"x\", 15)\n      .attr(\"y\", 10)\n\n    band.addActions = (actions: Action[]) => {\n      actions.forEach((action) => timeBandElements.on(action[0], action[1]))\n    }\n\n    const {\n      chartConfig: { getItemLimitLeft, getItemLimitRight },\n    } = this\n\n    band.redraw = () => {\n      timeBandElements\n        .attr(\"x\", (chartItem: ChartData) =>\n          band.xScale!(getItemLimitLeft(chartItem))\n        )\n        .attr(\n          \"width\",\n          (chartItem: ChartData) =>\n            band.xScale!(getItemLimitRight(chartItem)) -\n            band.xScale!(getItemLimitLeft(chartItem))\n        )\n        .select(\"text\")\n        .text((chartItem: ChartData) => {\n          const scale =\n            band.xScale!(getItemLimitRight(chartItem)) -\n            band.xScale!(getItemLimitLeft(chartItem))\n          const maxLetters = scale / 9\n\n          return this.chartConfig.getItemText({ chartItem, maxLetters })\n        })\n\n      band.parts!.forEach((part) => part.redraw!())\n    }\n\n    this.bands[bandName] = band as Band\n    this.components.push(band)\n    this.bandY += band.h + bandGap\n    this.bandNum += 1\n\n    return this\n  }\n\n  public labels(bandName: string) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n    const labelWidth = 46\n    const labelHeight = 20\n    const labelTop = band.y + band.h - 10\n    const yText = 15\n\n    type LabelDef = {\n      className: string\n      getText: (min: Date, max: Date) => string\n      id: string\n      left: number\n      textAnchor: string\n      textLeft: number\n      top: number\n    }\n\n    const labelDefs: LabelDef[] = [\n      {\n        className: styles.bandMinMaxLabel,\n        getText: (min: Date) => toYear(min),\n        id: \"Start of the selected interval\",\n        left: 0,\n        textAnchor: \"start\",\n        textLeft: 4,\n        top: labelTop,\n      },\n      {\n        className: styles.bandMinMaxLabel,\n        getText: (...[, max]: [unknown, Date]) => toYear(max),\n        id: \"End of the selected interval\",\n        left: band.w - labelWidth,\n        textAnchor: \"end\",\n        textLeft: band.w - 4,\n        top: labelTop,\n      },\n      {\n        className: styles.bandMidLabel,\n        getText: (...[min, max]: [Date, Date]) =>\n          (max.getUTCFullYear() - min.getUTCFullYear()).toString(),\n        id: \"Length of the selected interval\",\n        left: (band.w - labelWidth) / 2,\n        textAnchor: \"middle\",\n        textLeft: band.w / 2,\n        top: labelTop,\n      },\n    ]\n\n    const bandLabels = this.chart\n      .append(\"g\")\n      .attr(\"id\", `${bandName}Labels`)\n      .attr(\"transform\", `translate(0,${band.y + band.h + 1})`)\n      .selectAll(`#${bandName}Labels`)\n      .data(labelDefs)\n      .enter()\n      .append(\"g\")\n\n    bandLabels\n      .append(\"rect\")\n      .attr(\"class\", styles.bandLabel)\n      .attr(\"x\", (label) => label.left)\n      .attr(\"width\", labelWidth)\n      .attr(\"height\", labelHeight)\n      .style(\"opacity\", 1)\n\n    const labels: RedrawComp &\n      Selection<SVGTextElement, LabelDef, SVGGElement, unknown> = bandLabels\n      .append(\"text\")\n      .attr(\"class\", (label) => label.className)\n      .attr(\"id\", (label) => label.id)\n      .attr(\"x\", (label) => label.textLeft)\n      .attr(\"y\", yText)\n      .attr(\"text-anchor\", (label) => label.textAnchor)\n\n    labels.redraw = () => {\n      const min = band.xScale.domain()[0]\n      const max = band.xScale.domain()[1]\n\n      labels.text((label) => label.getText(min, max))\n    }\n\n    band.parts.push(labels)\n    this.components.push(labels)\n\n    return this\n  }\n\n  public addBrush({\n    bandName,\n    targetNames,\n  }: {\n    bandName: string\n    targetNames: string[]\n  }) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n    const brush = brushX()\n\n    const selectionScale = scaleTime<number, Date>()\n      .domain([0, 1000])\n      .range([\n        this.dataContent.minDate!.getTime(),\n        this.dataContent.maxDate!.getTime(),\n      ])\n\n    brush.on(\"brush\", (brushEvent) => {\n      let newDomain = band.xScale.domain()\n\n      if (brushEvent.selection) {\n        newDomain = [\n          selectionScale(brushEvent.selection[0]),\n          selectionScale(brushEvent.selection[1]),\n        ]\n      }\n\n      selectAll(`.${styles.interval} rect`).style(\"filter\", \"none\")\n\n      targetNames.forEach((targetName) => {\n        this.bands[targetName].xScale.domain(newDomain)\n\n        this.bands[targetName].redraw!()\n      })\n    })\n\n    const xBrush = band.g\n      .append(\"svg\")\n      .attr(\"class\", `x`)\n      .call(brush as any) // eslint-disable-line @typescript-eslint/no-explicit-any\n\n    xBrush\n      .selectAll(\"rect\")\n      .attr(\"y\", 1)\n      .attr(\"height\", band.h - 1)\n\n    return this\n  }\n\n  public redraw() {\n    this.components.forEach((component: RedrawComp) => component.redraw!())\n\n    return this\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var timelineChart = \"philosophers-timeline-module--timelineChart--2vXPB\";\nexport var axis = \"philosophers-timeline-module--axis--3nDTl\";\nexport var band = \"philosophers-timeline-module--band--cUNtF\";\nexport var bandLabel = \"philosophers-timeline-module--bandLabel--218cX\";\nexport var bandMinMaxLabel = \"philosophers-timeline-module--bandMinMaxLabel--1aIei\";\nexport var bandMidLabel = \"philosophers-timeline-module--bandMidLabel--1ALtF\";\nexport var chart = \"philosophers-timeline-module--chart--1QZ4E\";\nexport var interval = \"philosophers-timeline-module--interval--10Q_Z\";\nexport var instant = \"philosophers-timeline-module--instant--1iLWE\";\nexport var instantLabel = \"philosophers-timeline-module--instantLabel--2lT3Y\";\nexport var intervalLabel = \"philosophers-timeline-module--intervalLabel--2Ir_I\";","import { csv, timeParse } from \"d3\"\n\nimport { ChartConfig, SortOrder } from \"./philosophers-timeline-chart\"\n\nexport type TimeBandItem = {\n  end: Date\n  instant: boolean\n  label: string\n  start: Date\n  track: number\n}\n\nconst toYear = (date: Date) => {\n  const bcString = \" BC\"\n  const year = date.getUTCFullYear()\n\n  if (year >= 0) {\n    return year.toString()\n  }\n\n  return bcString + Math.abs(year)\n}\n\nconst parseDate = function (dateString: string) {\n  const format = timeParse(\"%Y-%m-%d\")\n\n  let date = format(dateString)\n\n  if (date !== null) {\n    return date\n  }\n\n  const year = isNaN(Number(dateString))\n    ? -dateString.replace(/[^0-9]/g, \"\")\n    : +dateString\n\n  if (year < 0 || year > 99) {\n    date = new Date(year, 6, 1)\n  } else if (year === 0) {\n    date = new Date(-1, 6, 1)\n  } else {\n    date = new Date(year, 6, 1)\n    date.setUTCFullYear(year)\n  }\n\n  return date\n}\n\nconst yearMillis = 31622400000\n\nexport const fetchData = async (): Promise<TimeBandItem[]> => {\n  const timeBandItems = ((await csv(\n    `${ROOT_PATH}data/d3js/philosophers-timeline/data.csv`\n  )) as unknown) as TimeBandItem[]\n  const today = new Date()\n  const instantOffset = 100 * yearMillis\n\n  timeBandItems.forEach((timeBandItem) => {\n    timeBandItem.start = parseDate(timeBandItem.start.toString())\n\n    if ((timeBandItem.end as unknown) === \"\") {\n      timeBandItem.end = new Date(timeBandItem.start.getTime() + instantOffset)\n      timeBandItem.instant = true\n    } else {\n      timeBandItem.end = parseDate(timeBandItem.end.toString())\n      timeBandItem.instant = false\n    }\n\n    if (timeBandItem.end > today) {\n      timeBandItem.end = today\n    }\n  })\n\n  return timeBandItems\n}\n\ntype Config = ChartConfig<TimeBandItem>\n\nconst getItemLimitLeft = (timeBandItem: TimeBandItem) => timeBandItem.start\nconst getItemLimitRight = (timeBandItem: TimeBandItem) => timeBandItem.end\n\nconst getSortFn = (sortOrder: SortOrder) => (\n  ...[timeBandItemA, timeBandItemB]: [TimeBandItem, TimeBandItem]\n) => {\n  const factor = sortOrder === SortOrder.Ascending ? 1 : -1\n  const startDiff = Number(timeBandItemA.start) - Number(timeBandItemB.start)\n\n  if (startDiff !== 0) {\n    return startDiff * factor\n  }\n\n  return (Number(timeBandItemB.end) - Number(timeBandItemA.end)) * factor\n}\n\nconst getItemText = ({\n  chartItem: timeBandItem,\n  maxLetters,\n}: {\n  chartItem: TimeBandItem\n  maxLetters: number\n}): string => {\n  if (timeBandItem.label.length > maxLetters) {\n    return `${timeBandItem.label.substr(0, maxLetters - 1)}..`\n  }\n\n  return timeBandItem.label\n}\n\nconst getItemTitle = (timeBandItem: TimeBandItem): string => {\n  if (timeBandItem.instant) {\n    return `${timeBandItem.label}: ${toYear(timeBandItem.start)}`\n  }\n\n  return `${timeBandItem.label}: ${toYear(timeBandItem.start)} - ${toYear(\n    timeBandItem.end\n  )}`\n}\n\nexport const getChartConfig = (): Config => ({\n  getItemLimitLeft,\n  getItemLimitRight,\n  getItemText,\n  getItemTitle,\n  getSortFn,\n  rootElId: \"chart\",\n})\n","import { Timeline } from \"./philosophers-timeline-chart\"\nimport {\n  TimeBandItem,\n  fetchData,\n  getChartConfig,\n} from \"./philosophers-timeline-chart-data\"\n\nconst main = async () => {\n  const timelineData = await fetchData()\n  const chartConfig = getChartConfig()\n\n  new Timeline<TimeBandItem>(chartConfig)\n    .addChartData(timelineData)\n    .addBand({ bandName: \"mainBand\", sizeFactor: 0.82 })\n    .addBand({ bandName: \"naviBand\", sizeFactor: 0.08 })\n    .xAxis(\"mainBand\")\n    .xAxis(\"naviBand\")\n    .labels(\"mainBand\")\n    .labels(\"naviBand\")\n    .addBrush({ bandName: \"naviBand\", targetNames: [\"mainBand\"] })\n    .redraw()\n    .createTooltip()\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/philosophers-timeline/philosophers-timeline\"\n\nconst PhilosophersTimeline = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default PhilosophersTimeline\n"],"sourceRoot":""}