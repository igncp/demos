{"version":3,"file":"component---src-pages-d-3-js-concentric-circles-tsx-78f82786b8cb0f429360.js","mappings":"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","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/common.ts","webpack://demos/./src/demos/concentric-circles/circles-chart.ts","webpack://demos/./src/demos/concentric-circles/concentric-circles-config.ts","webpack://demos/./src/demos/concentric-circles/concentric-circles.ts","webpack://demos/./src/pages/d3js/concentric-circles.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","type DocName = string\ntype DocLink = string\n\ntype Meta = {\n  description: string\n}\n\ntype DemoBase = {\n  dataFiles: string[]\n  docs: Array<[DocName, DocLink]>\n  isCompleted: boolean\n  name: string\n  notes: string[]\n  sources: string[]\n  summary: string[]\n}\n\ntype DemoFile = {\n  content: string\n  filePath: string\n}\n\ntype DemoInfo = DemoBase & {\n  category: string\n  files: {\n    demoCSS: DemoFile[]\n    demoTS: DemoFile[]\n    page: {\n      content: string\n      type: string\n    }\n  }\n  key: string\n}\n\ntype DemoSummary = {\n  category: string\n  key: string\n  name: DemoBase[\"name\"]\n  route: string\n}\n\ntype IndexPageProps = {\n  pageContext: {\n    groupedDemos: DemoSummary[][]\n    meta: Meta\n    numberPerGroup: number\n  }\n}\n\ntype DemoPageProps = {\n  pageContext: {\n    demoInfo: DemoInfo\n    meta: Meta\n  }\n}\n\nenum SPECIAL_DEMO_KEYS {\n  STORYBOOK = \"storybook\",\n  TESTING = \"testing\",\n}\n\nconst JQUERYUI = {\n  SCRIPT: \"/vendors/jquery-ui/jquery-ui.min.js\",\n  STYLE: \"/vendors/jquery-ui/themes/base/jquery-ui.min.css\",\n}\n\nexport {\n  DemoBase,\n  DemoInfo,\n  DemoPageProps,\n  DemoSummary,\n  IndexPageProps,\n  JQUERYUI,\n  Meta,\n  SPECIAL_DEMO_KEYS,\n}\n","import { Selection, extent, max, range, scaleLinear, select } from \"d3\"\nimport { v1 as uuidv1 } from \"uuid\"\n\nconst colours = [\"#7c7cc9\", \"#52d552\", \"#337233\", \"#323247\"]\n\nconst margin = {\n  bottom: 20,\n  left: 20,\n  right: 20,\n  top: 20,\n}\nconst strokeWidth = \"2px\"\n\nconst addFilter = <ChartData>(\n  svg: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs.append(\"filter\")\n\n  filter.attr(\"id\", \"drop-shadow\")\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", 9)\n  filter.append(\"feOffset\").attr(\"dx\", 5).attr(\"dy\", 5)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", \".3\")\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\ntype ChartConfig<ChartData> = Readonly<{\n  chartDescription: string\n  getCircleId: (circle: ChartData) => string\n  getCircleTitle: (circle: ChartData) => string\n  getCircleValue: (circle: ChartData) => number\n  getCirclesData: () => ChartData[]\n  rootElId: string\n}>\n\ntype ChartElements<ChartData> = Readonly<{\n  descriptionSel: Selection<SVGTextElement, ChartData, HTMLElement, unknown>\n  gSel: Selection<SVGGElement, ChartData, HTMLElement, unknown>\n  svgSel: Selection<SVGSVGElement, ChartData, HTMLElement, unknown>\n}>\n\nclass CirclesChart<ChartData> {\n  private readonly config: ChartConfig<ChartData>\n  private readonly elements: ChartElements<ChartData>\n  private readonly circleClass: string\n\n  private constructor(config: ChartConfig<ChartData>) {\n    this.config = config\n\n    const svgSel = select<HTMLElement, ChartData>(`#${config.rootElId}`).append(\n      \"svg\"\n    )\n    const gSel = svgSel.append(\"g\")\n    const descriptionSel = gSel\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"width\", \"20px\")\n\n    this.circleClass = `name-circle-${uuidv1().slice(0, 6)}`\n\n    this.elements = {\n      descriptionSel,\n      gSel,\n      svgSel,\n    }\n\n    addFilter<ChartData>(gSel)\n\n    this.render()\n\n    window.addEventListener(\"resize\", this.handleResize)\n  }\n\n  public static renderChart<ChartData>(config: ChartConfig<ChartData>) {\n    return new CirclesChart(config)\n  }\n\n  public teardown() {\n    window.removeEventListener(\"resize\", this.handleResize)\n  }\n\n  public refresh() {\n    this.render()\n  }\n\n  private render() {\n    const {\n      config: {\n        chartDescription,\n        getCircleId,\n        getCircleTitle,\n        getCircleValue,\n        getCirclesData,\n        rootElId,\n      },\n      elements,\n    } = this\n\n    const circlesData = getCirclesData()\n\n    const colorScale = scaleLinear()\n      .domain(extent(circlesData, getCircleValue) as [number, number])\n      .range([0, 1])\n\n    const heatmapColour = scaleLinear<string>()\n      .domain(range(0, 1, 1.0 / colours.length))\n      .range(colours)\n\n    const colorize = (circle: ChartData) => {\n      const circleValue = getCircleValue(circle)\n      const colorNormalized = colorScale(circleValue)\n\n      return heatmapColour(colorNormalized)\n    }\n\n    const dataMax = max(circlesData, getCircleValue) as number\n\n    const rootEl = document.getElementById(rootElId) as HTMLElement\n    const { width: elWidth } = rootEl.getBoundingClientRect()\n\n    const width = elWidth - margin.left - margin.right\n    const height = max(circlesData, getCircleValue)! * 2.5\n\n    elements.svgSel\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.left + margin.right)\n\n    const groupUpdates = elements.gSel\n      .selectAll<SVGGElement, ChartData>(\".circle-group\")\n      .data(circlesData, getCircleId)\n\n    groupUpdates\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"circle-group\")\n      .append(\"circle\")\n      .attr(\"class\", this.circleClass)\n\n    groupUpdates.exit().remove()\n\n    elements.gSel\n      .selectAll<SVGCircleElement, ChartData>(`.${this.circleClass}`)\n      .attr(\"cx\", width / 2)\n      .attr(\"cy\", height / 2)\n      .attr(\"title\", getCircleTitle)\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", colorize)\n      .style(\"stroke-width\", strokeWidth)\n      .style(\"filter\", (circle) =>\n        getCircleValue(circle) > dataMax / 2.5 ? \"url(#drop-shadow)\" : \"\"\n      )\n      .on(\"mouseenter\", function onMouseOver() {\n        select(this).style(\"stroke\", \"#D88021\").style(\"stroke-width\", \"10px\")\n      })\n      .on(\"mouseleave\", function onMouseLeave() {\n        select<SVGCircleElement, ChartData>(this)\n          .style(\"stroke\", colorize)\n          .style(\"stroke-width\", strokeWidth)\n      })\n      .attr(\"r\", (...[, circleIndex]) => `${circleIndex / 5}px`)\n\n    $(`.${this.circleClass}`).tooltip({\n      track: true,\n    })\n\n    elements.descriptionSel\n      .text(chartDescription)\n      .attr(\"transform\", `translate(${width / 2},${height - 10})`)\n  }\n\n  private readonly handleResize = () => {\n    this.render()\n  }\n}\n\nexport { CirclesChart, ChartConfig }\n","import { csv } from \"d3\"\n\nimport { ChartConfig } from \"./circles-chart\"\n\nconst CONTAINER_ID = \"chart\"\nconst VALUES_SLIDER_ID = \"year-slider\"\n\ntype NamesMetric = {\n  count: number\n  name: string\n  year: string\n}\n\ntype NamesMetrics = NamesMetric[]\n\ntype State = {\n  percentage: number\n}\n\nconst fetchData = async (): Promise<NamesMetrics> => {\n  const response = (await csv(\n    `${ROOT_PATH}data/d3js/concentric-circles/data.csv`\n  )) as unknown as NamesMetrics\n\n  return response.map((nameItem) => ({\n    ...nameItem,\n    count: +nameItem.count,\n  }))\n}\n\ntype Config = ChartConfig<NamesMetric>\n\nconst getCircleValue: Config[\"getCircleValue\"] = (circle) => circle.count\nconst getCircleId: Config[\"getCircleId\"] = (circle) => circle.name\n\nconst getCircleTitle: Config[\"getCircleTitle\"] = (circle) =>\n  `${circle.name}: ${circle.count}`\n\nconst chartDescription =\n  \"Circles radius are proportional to order in the ranking\"\n\nconst getChartConfig = ({\n  namesMetrics,\n  state,\n}: {\n  namesMetrics: NamesMetrics\n  state: State\n}): Config => ({\n  chartDescription,\n  getCircleId,\n  getCircleTitle,\n  getCircleValue,\n  getCirclesData: () => {\n    const addedNames = new Set()\n\n    return namesMetrics\n      .sort((...[namesObjA, namesObjB]) => namesObjB.count - namesObjA.count)\n      .filter((nameObj) => {\n        if (addedNames.has(nameObj.name)) {\n          return false\n        }\n\n        addedNames.add(nameObj.name)\n\n        return true\n      })\n      .filter(\n        (...[, nameObjIndex, nameObjArr]) =>\n          (100 * nameObjIndex) / nameObjArr.length <= state.percentage\n      )\n      .reverse()\n  },\n  rootElId: CONTAINER_ID,\n})\n\nexport { CONTAINER_ID, State, VALUES_SLIDER_ID, fetchData, getChartConfig }\n","import { CirclesChart } from \"./circles-chart\"\nimport {\n  CONTAINER_ID,\n  State,\n  VALUES_SLIDER_ID,\n  fetchData,\n  getChartConfig,\n} from \"./concentric-circles-config\"\n\nconst main = async () => {\n  const namesMetrics = await fetchData()\n  const defaultPercentage = 100\n  const state: State = {\n    percentage: defaultPercentage,\n  }\n\n  const chartConfig = getChartConfig({\n    namesMetrics,\n    state,\n  })\n\n  const chart = CirclesChart.renderChart(chartConfig)\n\n  $(`#${VALUES_SLIDER_ID}`).slider({\n    change: (...[, { value: percentageValue }]) => {\n      state.percentage = percentageValue as number\n      chart.refresh()\n    },\n    max: 100,\n    min: 0,\n    value: defaultPercentage, // eslint-disable-line id-denylist\n  })\n}\n\nexport { CONTAINER_ID, VALUES_SLIDER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps, JQUERYUI } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, {\n  CONTAINER_ID,\n  VALUES_SLIDER_ID,\n} from \"@/demos/concentric-circles/concentric-circles\"\n\nconst ConcentricCircles = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[JQUERYUI.STYLE]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[JQUERYUI.SCRIPT]}\n  >\n    <div style={{ marginBottom: 20 }}>\n      <p>Values</p>\n      <div id={VALUES_SLIDER_ID} />\n    </div>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default ConcentricCircles\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","SPECIAL_DEMO_KEYS","JQUERYUI","SCRIPT","STYLE","colours","margin","CirclesChart","config","handleResize","render","this","svgSel","select","rootElId","append","gSel","descriptionSel","attr","circleClass","uuidv1","slice","elements","svg","filter","feMerge","addFilter","window","addEventListener","renderChart","teardown","removeEventListener","refresh","chartDescription","getCircleId","getCircleTitle","getCircleValue","getCirclesData","circlesData","colorScale","scaleLinear","domain","extent","range","heatmapColour","colorize","circle","circleValue","colorNormalized","dataMax","max","width","document","getElementById","getBoundingClientRect","height","groupUpdates","selectAll","data","enter","exit","remove","style","on","circleIndex","$","tooltip","track","text","CONTAINER_ID","VALUES_SLIDER_ID","fetchData","csv","ROOT_PATH","response","map","nameItem","count","name","getChartConfig","namesMetrics","state","addedNames","Set","sort","namesObjA","namesObjB","nameObj","has","add","nameObjIndex","nameObjArr","percentage","reverse","main","chartConfig","chart","slider","change","percentageValue","value","min","pageContext","links","scripts","marginBottom","id","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","apply","err"],"sourceRoot":""}