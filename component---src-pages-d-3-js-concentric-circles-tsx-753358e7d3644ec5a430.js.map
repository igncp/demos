{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/concentric-circles/concentric-circles.ts","webpack://demos/./src/pages/d3js/concentric-circles.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchData","d3","ROOT_PATH","data","colours","margin","renderChart","rootElId","c","domain","d","count","range","heatmapColour","length","colorize","colorNormalized","width","document","getElementById","getBoundingClientRect","height","svg","append","attr","filter","feMerge","addFilter","circles","selectAll","name","enter","rScale","exponent","dataMax","style","on","$","tooltip","track","text","addDescription","demoInfo","pageContext","links","main","scripts","id"],"mappings":"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","file":"component---src-pages-d-3-js-concentric-circles-tsx-753358e7d3644ec5a430.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as d3 from \"d3\"\n\ntype Data = Array<{\n  count: string\n  name: string\n  sex: string\n  year: string\n}>\ntype SVG = d3.Selection<SVGGElement, unknown, HTMLElement, unknown>\n\nconst fetchData = async (): Promise<Data> => {\n  const data = await d3.csv(`${ROOT_PATH}data/d3js/concentric-circles/data.csv`)\n\n  return (data as unknown) as Data\n}\n\nconst colours = [\"#7C7CC9\", \"#52D552\", \"#337233\", \"#323247\"]\n\nconst margin = {\n  bottom: 20,\n  left: 20,\n  right: 20,\n  top: 20,\n}\nconst strokeWidth = \"2px\"\n\nconst addFilter = (svg: SVG) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs.append(\"filter\")\n\n  filter.attr(\"id\", \"drop-shadow\")\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", 9)\n  filter.append(\"feOffset\").attr(\"dx\", 5).attr(\"dy\", 5)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", \".3\")\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\ntype AddDescription = (o: { svg: SVG; height: number; width: number }) => void\n\nconst addDescription: AddDescription = ({ svg, height, width }) => {\n  svg\n    .append(\"text\")\n    .text(\n      \"Circles radius are proportional to the count of times the name appears\"\n    )\n    .attr(\"transform\", `translate(${width / 2},${height - 10})`)\n    .attr(\"width\", \"20px\")\n}\n\ntype RenderChart = (o: { data: Data; rootElId: string }) => void\n\nconst renderChart: RenderChart = ({ data, rootElId }) => {\n  const c = d3\n    .scaleLinear()\n    .domain(d3.extent(data, (d) => +d.count) as [number, number])\n    .range([0, 1])\n\n  const heatmapColour = d3\n    .scaleLinear()\n    .domain(d3.range(0, 1, 1.0 / colours.length))\n    .range(colours as any)\n\n  const colorize = (d: Data[number]) => {\n    const colorNormalized = c(+d.count)\n\n    return heatmapColour(colorNormalized)\n  }\n\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n  const { width: elWidth } = rootEl.getBoundingClientRect()\n\n  const width = elWidth - margin.left - margin.right\n  const height = (d3.max(data, (d) => +d.count) as number) * 2.5\n\n  const svg: SVG = d3\n    .select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.left + margin.right)\n    .append(\"g\")\n\n  addFilter(svg)\n\n  const circleGroup = svg\n    .selectAll(\"g\")\n    .data(data, (d: any) => (d as Data[number]).name)\n    .enter()\n    .append(\"g\")\n\n  const circles = circleGroup.append(\"svg:circle\")\n  const rScale = d3\n    .scalePow()\n    .exponent(0.9)\n    .range([5, 300])\n    .domain(d3.extent(data, (d) => +d.count) as [number, number])\n\n  const getTitle = (d: Data[number]) => `${d.name}: ${d.count}`\n  const dataMax = d3.max(data, (d) => +d.count) as number\n\n  circles\n    .attr(\"cx\", width / 2)\n    .attr(\"cy\", height / 2)\n    .attr(\"r\", (d) => rScale(+d.count))\n    .attr(\"class\", \"name-circle\")\n    .attr(\"title\", getTitle)\n    .style(\"fill\", \"#fff\")\n    .style(\"stroke\", (d) => colorize(d))\n    .style(\"stroke-width\", strokeWidth)\n    .style(\"filter\", (d) => {\n      if (+d.count > dataMax / 2.5) {\n        return \"url(#drop-shadow)\"\n      }\n\n      return \"\"\n    })\n    .on(\"mouseover\", function () {\n      d3.select(this).style(\"stroke\", \"#D88021\").style(\"stroke-width\", \"10px\")\n    })\n    .on(\"mouseleave\", function () {\n      d3.select(this)\n        .style(\"stroke\", (d: any) => colorize(d))\n        .style(\"stroke-width\", strokeWidth)\n    })\n\n  $(\".name-circle\").tooltip({\n    track: true,\n  })\n\n  addDescription({\n    height,\n    svg,\n    width,\n  })\n}\n\nconst main = async () => {\n  const data = await fetchData()\n\n  renderChart({\n    data,\n    rootElId: \"chart\",\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/concentric-circles/concentric-circles\"\n\nconst ConcentricCircles = ({ pageContext: { demoInfo } }: DemoPageProps) => (\n  <Demo\n    demoInfo={demoInfo}\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default ConcentricCircles\n"],"sourceRoot":""}