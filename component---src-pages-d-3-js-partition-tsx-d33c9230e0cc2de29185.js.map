{"version":3,"file":"component---src-pages-d-3-js-partition-tsx-d33c9230e0cc2de29185.js","mappings":"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","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/demos/partition/ui-constants.ts","webpack://demos/./src/demos/partition/partition-chart.ts","webpack://demos/./src/demos/partition/partition-controls.ts","webpack://demos/./src/demos/partition/partition-chart-config.ts","webpack://demos/./src/demos/partition/partition.ts","webpack://demos/./src/demos/partition/partition-page.module.css","webpack://demos/./src/pages/d3js/partition.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","const CONTAINER_ID = \"chart\"\nconst TYPE_FORM = \"type-form\"\nconst COLOR_METHOD = \"color-method\"\nconst TRANSITION_DURATION = 2000\n\nexport { CONTAINER_ID, TYPE_FORM, TRANSITION_DURATION, COLOR_METHOD }\n","import {\n  D3DragEvent,\n  HierarchyRectangularNode,\n  ScaleOrdinal,\n  Selection,\n  arc as arcD3,\n  drag as dragD3,\n  easeExpInOut,\n  hierarchy,\n  interpolate,\n  partition as partitionD3,\n  scaleOrdinal,\n  schemePastel1,\n  schemePastel2,\n  select,\n} from \"d3\"\nimport $ from \"jquery\"\nimport \"jquery-ui/themes/base/all.css\"\nimport { v1 as uuid } from \"uuid\"\n\nimport { TRANSITION_DURATION } from \"./ui-constants\"\n\nif (typeof window !== \"undefined\") {\n  require(\"jquery-ui/ui/widgets/tooltip\")\n}\n\ntype Node<NodeData> = NodeData & {\n  children?: Array<Node<NodeData>>\n}\n\ntype HierarchyNode<ChartData> = HierarchyRectangularNode<Node<ChartData>>\n\nconst height = 700\nconst hoverColor = \"#de7c03\"\nconst easeFn = easeExpInOut\n\nconst extractTweenObj = <ChartData>(node?: HierarchyNode<ChartData>) => ({\n  depth: node?.depth ?? 0,\n  x0: node?.x0 ?? 0,\n  x1: node?.x1 ?? 0,\n  y0: node?.y0 ?? 0,\n  y1: node?.y1 ?? 0,\n})\n\ntype ChartConfig<ChartData> = {\n  getColorOptions: (opts: {\n    depths: number[]\n    nodes: Array<Node<ChartData>>\n  }) => number[]\n  getHierarchySum: (node: Node<ChartData>) => number\n  getNodeColorOption: (opts: { depth: number; node: Node<ChartData> }) => number\n  getNodeId: (node: Node<ChartData>) => number\n  getNodeLabel: (node: Node<ChartData>) => string\n  getNodeTitle: (options: {\n    nodeData: Node<ChartData>\n    valueNum?: number\n  }) => string\n  rootData: Node<ChartData>\n  rootElId: string\n}\n\nconst getInterpolatorFn =\n  <ChartData>({\n    fn,\n    getNodeId,\n    initialData,\n    isText,\n  }: {\n    fn: (node: HierarchyNode<ChartData>) => string | null\n    getNodeId: ChartConfig<ChartData>[\"getNodeId\"]\n    initialData: Array<HierarchyNode<ChartData> | undefined>\n    isText: boolean\n  }) =>\n  (finalNode: HierarchyNode<ChartData>) => {\n    const initialNode = initialData.find(\n      (node) => node && getNodeId(node.data) === getNodeId(finalNode.data)\n    )\n\n    const finalTween = extractTweenObj(finalNode)\n    const initialTween = extractTweenObj(initialNode)\n\n    const initialTweenUpdated = (() => {\n      if (finalTween.x0 === finalTween.x1) {\n        return finalTween\n      }\n\n      if (isText && finalNode.depth === 0) {\n        return finalTween\n      }\n\n      return {\n        ...initialTween,\n        y0: finalTween.y0,\n        y1: finalTween.y1,\n      }\n    })()\n\n    const interpolateFn = interpolate(initialTweenUpdated, finalTween)\n\n    return (t: number) => {\n      const transitientState = interpolateFn(t)\n\n      return fn(transitientState as HierarchyNode<ChartData>)!\n    }\n  }\n\ntype ChartElements = {\n  svg: Selection<SVGSVGElement, unknown, HTMLElement, unknown>\n  svgDrag: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  svgG: Selection<SVGGElement, unknown, HTMLElement, unknown>\n}\n\nclass PartitionChart<ChartData> {\n  private readonly config: ChartConfig<ChartData>\n  private readonly elements: ChartElements\n  private readonly colorScale: ScaleOrdinal<number, string>\n  private readonly selectors: {\n    path: string\n    text: string\n  }\n\n  private readonly state: {\n    descendants: Array<HierarchyNode<ChartData>>\n    drag: { x: number; y: number }\n    isClearingSelection: boolean\n    rootNode: Node<ChartData> | null\n  }\n\n  public constructor(config: ChartConfig<ChartData>) {\n    this.config = config\n\n    const { rootElId } = config\n\n    const svg = select(`#${rootElId}`).append(\"svg\").text(\"\")\n    const svgDrag = svg.append(\"g\")\n    const svgG = svgDrag.append(\"g\")\n\n    this.state = {\n      descendants: [],\n      drag: { x: 0, y: 0 },\n      isClearingSelection: false,\n      rootNode: null,\n    }\n\n    this.selectors = {\n      path: `path-${uuid().slice(0, 6)}`,\n      text: `text-${uuid().slice(0, 6)}`,\n    }\n\n    this.state.descendants = this.getDataHierarchy()\n\n    this.colorScale = scaleOrdinal<number, string>(\n      schemePastel1.concat(schemePastel2)\n    )\n\n    this.elements = {\n      svg,\n      svgDrag,\n      svgG,\n    }\n\n    this.setupDrag()\n\n    window.addEventListener(\"resize\", this.handleResize)\n  }\n\n  public update() {\n    this.state.descendants = this.getDataHierarchy()\n\n    this.renderDescendants()\n  }\n\n  public render() {\n    const { width } = this.getDimensions()\n    const {\n      elements: { svg, svgG },\n    } = this\n\n    svg.attr(\"width\", width).attr(\"height\", height)\n    svgG.attr(\"transform\", `translate(${width / 2},${height * 0.52})`)\n\n    this.renderDescendants()\n  }\n\n  private getDimensions() {\n    const {\n      config: { rootElId },\n    } = this\n    const { width } = (\n      document.getElementById(rootElId) as HTMLElement\n    ).getBoundingClientRect()\n    const chartWidth = Math.max(width, 700)\n    const radius = Math.min(chartWidth, height) / 2\n\n    return {\n      chartWidth,\n      radius,\n      width,\n    }\n  }\n\n  private getDataHierarchy() {\n    const {\n      config: { getHierarchySum, rootData },\n      state: { rootNode },\n    } = this\n    const { radius } = this.getDimensions()\n\n    const cloneRecursive = <T>(node: Node<T>): Node<T> => ({\n      ...node,\n      ...(\"children\" in node && {\n        children: node.children!.map(cloneRecursive),\n      }),\n    })\n\n    const newNode = rootNode\n      ? cloneRecursive(rootNode)\n      : cloneRecursive(rootData)\n\n    const partition = partitionD3<Node<ChartData>>().size([2 * Math.PI, radius])\n    const newHierarchy = hierarchy(newNode).sum(getHierarchySum)\n    const hierarchyResult = partition(newHierarchy)\n\n    return hierarchyResult.descendants()\n  }\n\n  private setupDrag() {\n    const {\n      elements: { svg, svgDrag },\n    } = this\n\n    const handler = (\n      dragEvent: D3DragEvent<SVGSVGElement, unknown, unknown>\n    ) => {\n      this.state.drag.x += dragEvent.dx\n      this.state.drag.y += dragEvent.dy\n\n      svgDrag.attr(\n        \"transform\",\n        `translate(${this.state.drag.x},${this.state.drag.y})`\n      )\n    }\n\n    const dragBehavior = dragD3<SVGSVGElement, unknown>().on(\"drag\", handler)\n\n    svg\n      .style(\"cursor\", \"move\")\n      .call(dragBehavior)\n      .on(\"drag\", handler)\n      .on(\"wheel\", null)\n  }\n\n  private renderDescendants() {\n    const {\n      color,\n      config: { getColorOptions, getNodeId, getNodeLabel, getNodeTitle },\n      elements: { svgG },\n      selectors,\n      state: { descendants: usedDescendants },\n    } = this\n\n    const depths = new Set<number>()\n\n    this.state.descendants.forEach((node) => {\n      depths.add(node.depth)\n    })\n\n    this.colorScale.domain(\n      getColorOptions({\n        depths: Array.from(depths),\n        nodes: this.state.descendants.map((node) => node.data),\n      })\n    )\n\n    const arc = arcD3<HierarchyNode<ChartData>>()\n      .startAngle((node) => node.x0)\n      .endAngle((node) => node.x1)\n      .innerRadius((node) => node.y0)\n      .outerRadius((node) => node.y1)\n      .padAngle(0.01)\n\n    const textsTransform = (node: HierarchyNode<ChartData>) => {\n      if (!node.depth) {\n        return \"\"\n      }\n\n      const centroid = arc.centroid({\n        ...node,\n        x0: node.x0 + (node.x0 > Math.PI ? -1 : 1) * 0.05,\n      })\n      const rotationDeg = (() => {\n        const rotation =\n          90 + ((node.x0 + (node.x1 - node.x0) / 2) * 180) / Math.PI\n\n        return rotation > 90 && rotation < 270 ? rotation - 180 : rotation\n      })()\n\n      return [\n        `rotate(${rotationDeg},${centroid[0]},${centroid[1]})`,\n        `translate(${centroid[0]},${centroid[1]})`,\n      ].join(\" \")\n    }\n\n    const pathSel = svgG.selectAll<SVGPathElement, HierarchyNode<ChartData>>(\n      \"path\"\n    )\n    const pathInitialData = pathSel.data()\n\n    const path = pathSel.data(\n      usedDescendants,\n      (node) => `path-${getNodeId(node.data)}`\n    )\n\n    const usedDuration = this.state.isClearingSelection\n      ? 0\n      : TRANSITION_DURATION\n\n    this.state.isClearingSelection = false\n\n    const getShouldHighlightNode = (node: HierarchyNode<ChartData>) =>\n      node.depth !== 0 || this.state.rootNode\n\n    type CommonSelection<ElementType extends SVGElement> = Selection<\n      ElementType,\n      HierarchyNode<ChartData>,\n      SVGGElement,\n      unknown\n    >\n\n    const cursorFn = <ElementType extends SVGElement>(\n      selection: CommonSelection<ElementType>\n    ) => {\n      selection.style(\"cursor\", (node) =>\n        getShouldHighlightNode(node) ? \"pointer\" : \"move\"\n      )\n    }\n\n    const pathCommon = (selection: CommonSelection<SVGPathElement>) => {\n      selection\n        .attr(\"data-index\", (...[, nodeIndex]) => nodeIndex)\n        .style(\"fill\", color)\n        .call(cursorFn)\n    }\n\n    const pathEnter = path\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", selectors.path)\n      .style(\"stroke\", \"#000\")\n      .style(\"stroke-width\", \"2px\")\n      .style(\"stroke-dasharray\", \"1,3\")\n      .attr(\"d\", arc)\n      .call(pathCommon)\n\n    path.exit().remove()\n\n    path\n      .call(pathCommon)\n      .transition()\n      .duration(usedDuration)\n      .ease(easeFn)\n      .attrTween(\n        \"d\",\n        getInterpolatorFn({\n          fn: arc,\n          getNodeId,\n          initialData: pathInitialData,\n          isText: false,\n        })\n      )\n\n    const initialTextsSel = svgG.selectAll<\n      SVGTextElement,\n      HierarchyNode<ChartData>\n    >(\"text\")\n    const textsInitialData = initialTextsSel.data()\n\n    const initialTexts = initialTextsSel.data(\n      usedDescendants,\n      (node) => `text-${getNodeId(node.data)}`\n    )\n\n    initialTexts.exit().remove()\n\n    const opacityFn = (...[node]: [HierarchyNode<ChartData>, number]) => {\n      const arcLength = Math.abs(node.x0 - node.x1) * node.y1\n\n      // this number is obtained empirically\n      if (arcLength < 25) {\n        return 0\n      }\n\n      const isAlmostVertical = Math.abs((node.x0 + node.x1) / 2 - Math.PI) < 0.2\n\n      return isAlmostVertical && node.depth !== 0 ? 0 : 1\n    }\n\n    const textCommon = (selection: CommonSelection<SVGTextElement>) => {\n      selection\n        .text((node: HierarchyNode<ChartData>) => {\n          const label = getNodeLabel(node.data)\n          const limit = 9\n\n          return label.length > limit ? `${label.slice(0, limit)}...` : label\n        })\n        .attr(\"data-index\", (...[, nodeIndex]) => nodeIndex)\n        .call(cursorFn)\n    }\n\n    const textsEnter = initialTexts\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", selectors.text)\n      .style(\"fill\", \"#333\")\n      .style(\"cursor\", \"default\")\n      .style(\"font\", \"bold 12px Arial\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", textsTransform)\n      .style(\"opacity\", opacityFn)\n      .call(textCommon)\n\n    initialTexts\n      .call(textCommon)\n      .transition(\"movement\")\n      .duration(usedDuration)\n      .ease(easeFn)\n      .attrTween(\n        \"transform\",\n        getInterpolatorFn({\n          fn: textsTransform,\n          getNodeId,\n          initialData: textsInitialData,\n          isText: true,\n        })\n      )\n\n    initialTexts\n      .transition(\"opacity\")\n      .duration(usedDuration)\n      .ease(easeFn)\n      .style(\"opacity\", opacityFn)\n\n    const updatedGroups = [pathEnter, textsEnter]\n\n    updatedGroups.forEach((set) => {\n      set.on(\"mouseover\", function onMouseOver(...[, node]) {\n        const nodeIndex = select(this).attr(\"data-index\")\n\n        if (getShouldHighlightNode(node)) {\n          select(`path[data-index=\"${nodeIndex}\"]`).style(\"fill\", hoverColor)\n          select(`text[data-index=\"${nodeIndex}\"]`).style(\"fill\", \"white\")\n        }\n      })\n\n      set.on(\"mouseout\", function onMouseOut() {\n        const nodeIndex = select(this).attr(\"data-index\")\n\n        select<SVGPathElement, HierarchyNode<ChartData>>(\n          `path[data-index=\"${nodeIndex}\"]`\n        ).style(\"fill\", color)\n        select(`text[data-index=\"${nodeIndex}\"]`).style(\"fill\", \"#000\")\n      })\n\n      set.on(\"click\", (...[, node]) => {\n        if (\n          this.state.rootNode &&\n          getNodeId(this.state.rootNode) === getNodeId(node.data)\n        ) {\n          this.state.rootNode = null\n          this.state.isClearingSelection = true\n        } else {\n          this.state.rootNode = node.data\n        }\n\n        this.state.descendants = this.getDataHierarchy()\n        this.renderDescendants()\n      })\n\n      set.attr(\"title\", (node) =>\n        getNodeTitle({\n          nodeData: node.data,\n          valueNum: node.value,\n        })\n      )\n    })\n\n    $(`.${selectors.path}`).tooltip({\n      track: true,\n    })\n\n    $(`.${selectors.text}`).tooltip({\n      track: true,\n    })\n  }\n\n  private readonly color = (node: HierarchyNode<ChartData>) => {\n    const {\n      colorScale,\n      config: { getNodeColorOption },\n    } = this\n\n    const nodeOption = getNodeColorOption({\n      depth: node.depth,\n      node: node.data,\n    })\n\n    return colorScale(nodeOption)\n  }\n\n  private readonly handleResize = () => {\n    this.render()\n  }\n}\n\nexport { ChartConfig, Node, PartitionChart }\n","import { COLOR_METHOD, TYPE_FORM } from \"./ui-constants\"\n\nenum PartitionType {\n  count = \"count\",\n  size = \"size\",\n}\n\nenum ColorMethod {\n  depth = \"depth\",\n  id = \"id\",\n}\n\ntype FormState = {\n  colorMethod: ColorMethod\n  partitionType: PartitionType\n}\n\nconst colorMethodToLabel: { [key in ColorMethod]: string } = {\n  [ColorMethod.depth]: \"Node depth\",\n  [ColorMethod.id]: \"Node ID\",\n}\n\nconst setupControls = () => {\n  const formState: FormState = {\n    colorMethod: ColorMethod.id,\n    partitionType: PartitionType.count,\n  }\n\n  const formEl = document.getElementById(TYPE_FORM) as HTMLFormElement\n  const selectEl = document.getElementById(COLOR_METHOD) as HTMLSelectElement\n\n  Object.values(ColorMethod).forEach((...[colorValue]) => {\n    const option = document.createElement(\"option\")\n\n    option.setAttribute(\"value\", colorValue)\n    option.innerHTML = colorMethodToLabel[colorValue]\n\n    selectEl.appendChild(option)\n  })\n\n  // eslint-disable-next-line id-denylist\n  selectEl.value = formState.colorMethod\n\n  const getCurrentSelectedRadio = (): PartitionType => {\n    const selectedRadio = Array.from(\n      formEl.elements as unknown as HTMLInputElement[]\n    ).find((formElement: HTMLInputElement) => formElement.checked)\n\n    return selectedRadio!.value as PartitionType\n  }\n\n  const getCurrentSelectedOption = () => selectEl.value as ColorMethod\n\n  let handler = () => {}\n\n  formEl.addEventListener(\"change\", () => {\n    formState.partitionType = getCurrentSelectedRadio()\n    formState.colorMethod = getCurrentSelectedOption()\n\n    handler()\n  })\n\n  const onStateChangeHandler = (newHandler: () => void) => {\n    handler = newHandler\n  }\n\n  return {\n    formState,\n    onStateChangeHandler,\n  }\n}\n\nexport { ColorMethod, FormState, PartitionType, setupControls }\n","import { json } from \"d3\"\n\nimport { ChartConfig, Node } from \"./partition-chart\"\nimport { ColorMethod, FormState, PartitionType } from \"./partition-controls\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\ntype DataBase = {\n  name: string\n  size?: number\n}\n\ntype DataNodeBase = Node<DataBase>\n\ntype DataNode = Node<\n  DataBase & {\n    id: number\n  }\n>\n\nconst fetchData = async (): Promise<DataNode> => {\n  const apiResult = (await json(\n    `${ROOT_PATH}data/d3js/partition/flare.json`\n  )) as DataNodeBase\n\n  let currentId = 0\n\n  const recursiveFn = (node: DataNodeBase): DataNode => {\n    currentId += 1\n\n    const id = currentId\n\n    const children = \"children\" in node ? node.children!.map(recursiveFn) : null\n\n    return {\n      ...node,\n      ...(children && {\n        children,\n      }),\n      id,\n    } as DataNode\n  }\n\n  return recursiveFn(apiResult)\n}\n\ntype Config = ChartConfig<DataNode>\n\nconst getNodeLabel: Config[\"getNodeLabel\"] = (node) => node.name\nconst getNodeTitle: Config[\"getNodeTitle\"] = ({ nodeData, valueNum }) =>\n  `Name: \"${nodeData.name}\"\\nSize: ${\n    typeof nodeData.size === \"number\"\n      ? nodeData.size.toLocaleString(\"en-GB\")\n      : \"-\"\n  }\\nValue: ${\n    typeof valueNum === \"number\" ? valueNum.toLocaleString(\"en-GB\") : \"-\"\n  }`\nconst getNodeId: Config[\"getNodeId\"] = (node) => node.id\n\nconst getChartConfig = ({\n  rootData,\n  state,\n}: {\n  rootData: DataNode\n  state: FormState\n}): Config => {\n  const allIds = new Set<number>()\n\n  const getIdsRecursive = (node: DataNode) => {\n    const { id } = node\n\n    allIds.add(id)\n\n    if (\"children\" in node) {\n      node.children?.forEach(getIdsRecursive)\n    }\n  }\n\n  getIdsRecursive(rootData)\n\n  const getHierarchySum: Config[\"getHierarchySum\"] = (node) =>\n    state.partitionType === PartitionType.count ? 1 : node.size ?? 0\n\n  const getColorOptions: Config[\"getColorOptions\"] = ({ depths }) =>\n    state.colorMethod === ColorMethod.depth ? depths : Array.from(allIds)\n\n  const getNodeColorOption: Config[\"getNodeColorOption\"] = ({ depth, node }) =>\n    state.colorMethod === ColorMethod.depth ? depth : node.id\n\n  return {\n    getColorOptions,\n    getHierarchySum,\n    getNodeColorOption,\n    getNodeId,\n    getNodeLabel,\n    getNodeTitle,\n    rootData,\n    rootElId: CONTAINER_ID,\n  }\n}\n\nexport { fetchData, getChartConfig }\n","import { PartitionChart } from \"./partition-chart\"\nimport { fetchData, getChartConfig } from \"./partition-chart-config\"\nimport { setupControls } from \"./partition-controls\"\nimport { COLOR_METHOD, CONTAINER_ID, TYPE_FORM } from \"./ui-constants\"\n\nconst main = async () => {\n  const { formState, onStateChangeHandler } = setupControls()\n\n  const rootData = await fetchData()\n\n  const chartConfig = getChartConfig({\n    rootData,\n    state: formState,\n  })\n\n  const chart = new PartitionChart(chartConfig)\n\n  chart.render()\n\n  onStateChangeHandler(() => {\n    chart.update()\n  })\n}\n\nexport { CONTAINER_ID, TYPE_FORM, COLOR_METHOD }\n\nexport default main\n","// extracted by mini-css-extract-plugin\nexport var colorSelect = \"partition-page-module--colorSelect--4faaa\";\nexport var form = \"partition-page-module--form--e20ba\";\nexport var label = \"partition-page-module--label--4f05c\";","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, {\n  COLOR_METHOD,\n  CONTAINER_ID,\n  TYPE_FORM,\n} from \"@/demos/partition/partition\"\nimport * as styles from \"@/demos/partition/partition-page.module.css\"\n\nconst Partition = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form className={styles.form} id={TYPE_FORM}>\n      <span>Color Method: </span>\n      <select\n        className={`form-select ${styles.colorSelect}`}\n        id={COLOR_METHOD}\n      />\n      <label className={styles.label}>\n        <input\n          className=\"form-check-inpu\"\n          name=\"mode\"\n          type=\"radio\"\n          value=\"size\"\n        />{\" \"}\n        Size\n      </label>\n      <label className={styles.label}>\n        <input defaultChecked name=\"mode\" type=\"radio\" value=\"count\" /> Count\n      </label>\n    </form>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Partition\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","CONTAINER_ID","TYPE_FORM","COLOR_METHOD","window","require","PartitionType","ColorMethod","hoverColor","easeFn","easeExpInOut","extractTweenObj","depth","x0","x1","y0","y1","getInterpolatorFn","fn","getNodeId","initialData","isText","finalNode","initialNode","find","data","finalTween","initialTween","initialTweenUpdated","interpolateFn","interpolate","t","transitientState","PartitionChart","config","color","colorScale","getNodeColorOption","handleResize","render","this","rootElId","svg","select","append","text","svgDrag","svgG","state","descendants","drag","x","y","isClearingSelection","rootNode","selectors","path","slice","getDataHierarchy","scaleOrdinal","schemePastel1","schemePastel2","elements","setupDrag","addEventListener","update","renderDescendants","width","getDimensions","attr","document","getElementById","getBoundingClientRect","chartWidth","Math","max","radius","min","getHierarchySum","rootData","cloneRecursive","children","map","newNode","partitionD3","size","PI","partition","hierarchy","sum","handler","dragEvent","dx","dy","dragBehavior","dragD3","on","style","call","getColorOptions","getNodeLabel","getNodeTitle","usedDescendants","depths","Set","forEach","add","domain","from","nodes","arc","arcD3","startAngle","endAngle","innerRadius","outerRadius","padAngle","textsTransform","rotation","centroid","join","pathSel","selectAll","pathInitialData","usedDuration","getShouldHighlightNode","cursorFn","selection","pathCommon","nodeIndex","pathEnter","enter","exit","remove","transition","duration","ease","attrTween","initialTextsSel","textsInitialData","initialTexts","opacityFn","arcLength","abs","isAlmostVertical","textCommon","label","textsEnter","set","nodeData","valueNum","value","$","tooltip","track","colorMethodToLabel","id","setupControls","formState","colorMethod","partitionType","count","formEl","selectEl","Object","values","colorValue","option","createElement","setAttribute","innerHTML","appendChild","formElement","checked","onStateChangeHandler","newHandler","fetchData","json","ROOT_PATH","apiResult","currentId","recursiveFn","name","toLocaleString","getChartConfig","allIds","getIdsRecursive","main","chartConfig","chart","pageContext","className","styles","type","defaultChecked"],"sourceRoot":""}