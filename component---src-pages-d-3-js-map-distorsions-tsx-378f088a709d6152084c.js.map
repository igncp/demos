{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/map-distorsions/map-distorsions.ts","webpack://demos/./src/demos/map-distorsions/map-distorsions.module.css","webpack://demos/./src/pages/d3js/map-distorsions.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","DimensionName","background","foreground","axis","title","inactive","active","margin","height","colors","texts","tooltipText","projectionItem","valuesWithDimension","Acc40","Scale","Areal","Angular","map","dimensionName","Number","toFixed","name","join","renderChart","data","rootElId","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","dimensions","scale","scalePoint","range","type","String","scaleLinear","scaleSqrt","svg","select","append","attr","text","style","x","domain","d","line","lineD3","defined","isNaN","dimension","selectAll","enter","id","deviation","slope","filter","filterColor","c","colorScale","sortedData","slice","sort","nameA","nameB","colorFn","length","p","forEach","dimItem","extent","draw","allPoints","styles","each","dimensionItem","yAxis","axisLeft","call","_d","projectionIndex","moveToFront","parentNode","appendChild","projection","projectionItemIndex","on","_e","overProjection","classed","otherProjection","$","tooltip","track","tsv","ROOT_PATH","pageContext","links","main","scripts"],"mappings":"mGAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O,oHCePC,E,2DC5CMC,EAAa,4CACbC,EAAa,4CACbC,EAAO,sCACPC,EAAQ,uCAERC,EAAW,0CACXC,EAAS,wCDoBdC,EACI,GADJA,EAEE,IAFFA,EAGG,GAHHA,EAIC,GAEDC,EAAS,IAAMD,EAAaA,EAG5BE,EAAS,CAAC,UAAW,UAAW,UAAW,WAE3CC,EAEF,4F,SAKCV,K,sBAAAA,E,kBAAAA,E,cAAAA,E,eAAAA,M,KAOL,IAAMW,EAAc,SAAUC,GAC5B,IAMMC,EANkB,CACtBb,EAAcc,MACdd,EAAce,MACdf,EAAcgB,MACdhB,EAAciB,SAE4BC,KAC1C,SAACC,GAAD,OACKC,OAAOR,EAAeO,IAAgBE,QAAQ,GADnD,KAC0DF,EAD1D,OAIF,OAAUP,EAAeU,KAAzB,KAAkCT,EAAoBU,KAAK,OAuDvDC,EAA2B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClCC,EAASC,SAASC,eAAeH,GAEvCC,EAAOG,UAAUC,IC1Hc,sDD4H/B,IAAMC,EACJL,EAAOM,wBAAwBD,MAAQzB,EAAcA,EAEjD2B,EAA0B,CAC9B,CACEZ,KAAM,OACNa,OAAOC,WAAaC,MAAM,CAAC,EAAG7B,IAC9B8B,KAAMC,QAER,CACEjB,KAAMtB,EAAcc,MACpBqB,OAAOK,WAAcH,MAAM,CAAC,EAAG7B,IAC/B8B,KAAMlB,QAER,CACEE,KAAMtB,EAAce,MACpBoB,OAAOK,WAAcH,MAAM,CAAC7B,EAAQ,IACpC8B,KAAMlB,QAER,CACEE,KAAMtB,EAAcgB,MACpBmB,OAAOM,WAAYJ,MAAM,CAAC7B,EAAQ,IAClC8B,KAAMlB,QAER,CACEE,KAAMtB,EAAciB,QACpBkB,OAAOK,WAAcH,MAAM,CAAC7B,EAAQ,IACpC8B,KAAMlB,SAIJsB,GAAMC,QAAO,IAAIjB,GACpBkB,OAAO,OACPC,KAAK,SAAUrC,EAASD,EAAaA,GACrCsC,KAAK,QAASb,EAAQzB,EAAcA,GACpCqC,OAAO,KACPC,KAAK,YALI,aAKsBtC,EALtB,IAKqCA,EALrC,KAOZmC,EACGE,OAAO,QACPC,KAAK,QAAS,eACdA,KAAK,cAAe,UACpBA,KAAK,YAJR,aAIkCb,EAAQ,EAJ1C,SAKGc,KAAKpC,GACLqC,MAAM,cAAe,QAExB,IAAMC,GAAIZ,WACPa,OAAOf,EAAWhB,KAAI,SAACgC,GAAD,OAAOA,EAAE5B,SAC/Be,MAAM,CAAC,EAAGL,IAEPmB,GAAOC,WAASC,SAAQ,SAACH,GAAD,OAAQI,MAAMJ,EAAE,OAExCK,EAAYb,EACfc,UAAU,cACV/B,KAAKS,GACLuB,QACAb,OAAO,KACPC,KAAK,QAAS,aACdA,KAAK,aAAa,SAACK,GAAD,mBAAoBF,EAAEE,EAAE5B,MAAxB,QA7GH,SAClBoC,EACAhB,EACAiB,EACAC,GAEA,IACMC,EADOnB,EAAIE,OAAO,QACJA,OAAO,UAAUC,KAAK,KAA3B,eAAgDa,GAE/DG,EACGjB,OAAO,YACPC,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,KAAM,iBACXA,KAAK,SAAU,UAElBgB,EACGjB,OAAO,kBACPC,KAAK,KAAM,UACXA,KAAK,SAAU,WACfA,KAAK,eAAgBc,GAExBE,EACGjB,OAAO,WACPC,KAAK,KAAM,iBACXA,KAAK,MAAO,WACZA,KAAK,OAAQ,UAEhBgB,EACGjB,OAAO,uBACPA,OAAO,WACPC,KAAK,QAASe,GACdf,KAAK,OAAQ,UA+EhBiB,CAAY,QAASpB,EAAK,EAAG,IAE7B,IA9E2CO,EACrCc,EACAC,EA4EAC,EAA+BxC,EAClCyC,MAAM,GACNC,MAAK,cAAuC,IAA9BC,EAA6B,EAAnC9C,KAAuB+C,EAAY,EAAlB/C,KACxB,OAAI8C,IAAUC,EACL,EAGFD,EAAQC,GAAS,EAAI,KAG1BC,GAxFqCrB,EAwFf,CAAC,EAAGgB,EAAWM,OAAS,GAvF9CR,GAAIvB,WAAcS,OAAOA,GAAQZ,MAAM,CAAC,EAAG,IAC3C2B,GAAaxB,WAChBS,QAAOZ,SAAM,EAAG,EAAG,EAAM5B,EAAO8D,SAChClC,MAAM5B,GAEF,SAAU+D,GACf,OAAOR,EAAWD,EAAES,MAmFtBtC,EAAWuC,SAAQ,SAACC,GAAD,OACjBA,EAAQvC,MAAMc,OACZyB,EAAQpC,OAASlB,QACbuD,SACEV,GACA,SAACf,GAAD,OAAwBA,EAAEwB,EAAQpD,SAEpC2C,EACG/C,KAAI,SAACgC,GAAD,OAAuBA,EAAEwB,EAAQpD,SACrC6C,WAIX,IAAMS,EAAO,SAAChE,GACZ,IAAMiE,EAAqC3C,EAAWhB,KAAI,SAACwD,GAAD,MAAa,CACrE1B,EAAE0B,EAAQpD,MACVoD,EAAQvC,MAAMvB,EAAe8D,EAAQpD,WAGvC,OAAO6B,EAAK0B,IAGdnC,EACGE,OAAO,KACPC,KAAK,QAASiC,GACdtB,UAAU,QACV/B,KAAqBwC,GACrBR,QACAb,OAAO,QACPC,KAAK,IAAK+B,GACV/B,KAAK,QAASlC,GAEjB+B,EACGE,OAAO,KACPC,KAAK,QAASiC,GACdtB,UAAU,QACV/B,KAAKwC,GACLR,QACAb,OAAO,QACPC,KAAK,IAAK+B,GACV/B,KAAK,aAAclC,GAEtB4C,EACGX,OAAO,KACPC,KAAK,QAASiC,GACdC,MAAK,SAAUC,GACd,IAAMC,GAAQC,SAASF,EAAc7C,OAErC,OAAOQ,QAAOjD,MAAMyF,KAAKF,MAE1BrC,OAAO,QACPC,KAAK,QAASiC,GACdjC,KAAK,cAAe,UACpBA,KAAK,KAzNU,GA0NfC,MAAK,SAACkC,GAAD,OAAmBA,EAAc1D,QAEzCoB,EACGC,OADH,IACcmC,GACXtB,UAFH,aAEsDsB,EAFtD,KAGGjC,KAAK,QC5PS,wCD6PdpB,KAAKwC,GAAY,SAACrD,GAAD,OAAoCA,EAAeU,QACpEyB,MAAM,QAAQ,SAACqC,EAAIC,GAAL,OAAyBf,EAAQe,MAElD,IAAMC,EAAc,WACP5F,KAAK6F,WAEbC,YAAY9F,OAGX+F,EAAa/C,EAAIc,UAAJ,IACbsB,EADa,UACQA,EADR,UACmCA,EADnC,SA6BnBpC,EACGc,UADH,IACiBsB,EADjB,SAEG/B,MAAM,SAAU,2BAChBA,MAAM,UAAU,SAACqC,EAAIM,GAAL,OAA6BpB,EAAQoB,MAExDD,EAAWE,GAAG,aA9BI,SAACC,EAAaC,GAC9BnD,EAAIc,UAAJ,IAAkBsB,EAAlB,SAA4C/B,MAAM,SAAU,QAC5DL,EAAIoD,QAAQhB,GAAe,GAC3BW,EAAWK,QACThB,GACA,SAACiB,GAAD,OACEA,EAAgBzE,OAASuE,EAAevE,QAG5CmE,EACG5B,QACC,SAACkC,GAAD,OACEA,EAAgBzE,OAASuE,EAAevE,QAE3CyD,KAAKO,MAgB4BK,GAAG,YAbxB,WACfjD,EACGc,UADH,IACiBsB,EADjB,SAEG/B,MAAM,SAAU,2BACnBL,EAAIoD,QAAQhB,GAAe,GAC3BW,EAAWK,QAAQhB,GAAiB,MAUtCkB,EAAE,IAAIlB,EAAL,WAAiCA,EAAjC,SAA2DmB,QAAQ,CAClEC,OAAO,KAWX,EAPU,mCAAG,qGA7RVC,SAAOC,6CA6RG,OACL3E,EADK,OAEM,QAEjBD,EAAY,CAAEC,OAAMC,SAFH,UAFN,2CAAH,qDElSV,EAXuB,SAAC,GAAD,IAAG2E,EAAH,EAAGA,YAAH,OACrB,gBAAC,IAAD,CACEC,MAAO,CAAC,oDACRC,KAAMA,EACNF,YAAaA,EACbG,QAAS,CAAC,wCAEV,uBAAK9C,GAAG","file":"component---src-pages-d-3-js-map-distorsions-tsx-378f088a709d6152084c.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import {\n  Selection,\n  axisLeft,\n  extent,\n  line as lineD3,\n  range,\n  scaleLinear,\n  scalePoint,\n  scaleSqrt,\n  select,\n  tsv,\n} from \"d3\"\n\nimport * as styles from \"./map-distorsions.module.css\"\n\ntype ProjectionItem = {\n  \"Acc. 40ยบ 150%\": string\n  Angular: string\n  Areal: string\n  Scale: string\n  name: string\n}\n\nconst fetchData = () =>\n  (tsv(`${ROOT_PATH}data/d3js/map-distorsions/data.tsv`) as unknown) as Promise<\n    ProjectionItem[]\n  >\n\nconst margin = {\n  bottom: 20,\n  left: 200,\n  right: 40,\n  top: 90,\n}\nconst height = 750 - margin.top - margin.bottom\nconst axisYOffset = -9\n\nconst colors = [\"#7C7CC9\", \"#429742\", \"#63BD28\", \"#D14141\"]\n\nconst texts = {\n  title:\n    \"Comparison of 41 map projections by four different types of distortion. Lower is better.\",\n}\n\ntype RenderChart = (o: { data: ProjectionItem[]; rootElId: string }) => void\n\nenum DimensionName {\n  Acc40 = \"Acc. 40ยบ 150%\",\n  Angular = \"Angular\",\n  Areal = \"Areal\",\n  Scale = \"Scale\",\n}\n\nconst tooltipText = function (projectionItem: ProjectionItem) {\n  const dimensionsNames = [\n    DimensionName.Acc40,\n    DimensionName.Scale,\n    DimensionName.Areal,\n    DimensionName.Angular,\n  ] as Array<keyof ProjectionItem>\n  const valuesWithDimension = dimensionsNames.map(\n    (dimensionName) =>\n      `${Number(projectionItem[dimensionName]).toFixed(2)} (${dimensionName})`\n  )\n\n  return `${projectionItem.name}: ${valuesWithDimension.join(\", \")}`\n}\n\ntype Dimension = {\n  name: DimensionName | \"name\"\n  scale: any\n  type: any\n}\n\nconst filterColor = (\n  id: string,\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>,\n  deviation: number,\n  slope: number\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs.append(\"filter\").attr(\"id\", `drop-shadow-${id}`)\n\n  filter\n    .append(\"feOffset\")\n    .attr(\"dx\", 0.5)\n    .attr(\"dy\", 0.5)\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"result\", \"offOut\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"offOut\")\n    .attr(\"result\", \"blurOut\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter\n    .append(\"feBlend\")\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"in2\", \"blurOut\")\n    .attr(\"mode\", \"normal\")\n\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n}\n\nconst colorsScale = <P extends number = any>(domain: [number, number]) => {\n  const c = scaleLinear().domain(domain).range([0, 1])\n  const colorScale = scaleLinear<string>()\n    .domain(range(0, 1, 1.0 / colors.length))\n    .range(colors)\n\n  return function (p: P) {\n    return colorScale(c(p))\n  }\n}\n\nconst renderChart: RenderChart = ({ data, rootElId }) => {\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.mapDistorsionsChart)\n\n  const width =\n    rootEl.getBoundingClientRect().width - margin.left - margin.right\n\n  const dimensions: Dimension[] = [\n    {\n      name: \"name\",\n      scale: scalePoint().range([0, height]),\n      type: String,\n    },\n    {\n      name: DimensionName.Acc40,\n      scale: scaleLinear().range([0, height]),\n      type: Number,\n    },\n    {\n      name: DimensionName.Scale,\n      scale: scaleLinear().range([height, 0]),\n      type: Number,\n    },\n    {\n      name: DimensionName.Areal,\n      scale: scaleSqrt().range([height, 0]),\n      type: Number,\n    },\n    {\n      name: DimensionName.Angular,\n      scale: scaleLinear().range([height, 0]),\n      type: Number,\n    },\n  ]\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .attr(\"width\", width + margin.left + margin.right)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  svg\n    .append(\"text\")\n    .attr(\"class\", \"chart-title\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", `translate(${width / 2},-60)`)\n    .text(texts.title)\n    .style(\"font-weight\", \"bold\")\n\n  const x = scalePoint()\n    .domain(dimensions.map((d) => d.name))\n    .range([0, width])\n\n  const line = lineD3().defined((d) => !isNaN(d[1]))\n\n  const dimension = svg\n    .selectAll(\".dimension\")\n    .data(dimensions)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", (d) => `translate(${x(d.name)})`)\n\n  filterColor(\"lines\", svg, 2, 0.4)\n\n  const sortedData: ProjectionItem[] = data\n    .slice(0)\n    .sort(({ name: nameA }, { name: nameB }) => {\n      if (nameA === nameB) {\n        return 0\n      }\n\n      return nameA < nameB ? -1 : 1\n    })\n\n  const colorFn = colorsScale([0, sortedData.length - 1])\n\n  dimensions.forEach((dimItem: Dimension) =>\n    dimItem.scale.domain(\n      dimItem.type === Number\n        ? extent(\n            sortedData,\n            (d: ProjectionItem) => +d[dimItem.name as keyof ProjectionItem]\n          )\n        : sortedData\n            .map((d: ProjectionItem) => d[dimItem.name as keyof ProjectionItem])\n            .sort()\n    )\n  )\n\n  const draw = (projectionItem: ProjectionItem) => {\n    const allPoints: Array<[number, number]> = dimensions.map((dimItem) => [\n      x(dimItem.name) as number,\n      dimItem.scale(projectionItem[dimItem.name as keyof ProjectionItem]),\n    ])\n\n    return line(allPoints)\n  }\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", styles.background)\n    .selectAll(\"path\")\n    .data<ProjectionItem>(sortedData)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", draw)\n    .attr(\"title\", tooltipText)\n\n  svg\n    .append(\"g\")\n    .attr(\"class\", styles.foreground)\n    .selectAll(\"path\")\n    .data(sortedData)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", draw)\n    .attr(\"data-title\", tooltipText)\n\n  dimension\n    .append(\"g\")\n    .attr(\"class\", styles.axis)\n    .each(function (dimensionItem: Dimension) {\n      const yAxis = axisLeft(dimensionItem.scale)\n\n      return select(this).call(yAxis)\n    })\n    .append(\"text\")\n    .attr(\"class\", styles.title)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"y\", axisYOffset)\n    .text((dimensionItem) => dimensionItem.name)\n\n  svg\n    .select(`.${styles.axis}`)\n    .selectAll<SVGElement, ProjectionItem>(`text:not(.${styles.title})`)\n    .attr(\"class\", styles.label)\n    .data(sortedData, (projectionItem: ProjectionItem) => projectionItem.name)\n    .style(\"fill\", (_d, projectionIndex) => colorFn(projectionIndex))\n\n  const moveToFront = function (this: SVGElement) {\n    const el = this.parentNode as HTMLElement\n\n    el.appendChild(this)\n  }\n\n  const projection = svg.selectAll<SVGElement, ProjectionItem>(\n    `.${styles.axis} text,.${styles.background} path,.${styles.foreground} path`\n  )\n\n  const mouseover = (_e: unknown, overProjection: ProjectionItem) => {\n    svg.selectAll(`.${styles.foreground} path`).style(\"filter\", \"none\")\n    svg.classed(styles.active, true)\n    projection.classed(\n      styles.inactive,\n      (otherProjection: ProjectionItem) =>\n        otherProjection.name !== overProjection.name\n    )\n\n    projection\n      .filter(\n        (otherProjection: ProjectionItem) =>\n          otherProjection.name === overProjection.name\n      )\n      .each(moveToFront)\n  }\n\n  const mouseout = () => {\n    svg\n      .selectAll(`.${styles.foreground} path`)\n      .style(\"filter\", \"url(#drop-shadow-lines)\")\n    svg.classed(styles.active, false)\n    projection.classed(styles.inactive, false)\n  }\n\n  svg\n    .selectAll(`.${styles.foreground} path`)\n    .style(\"filter\", \"url(#drop-shadow-lines)\")\n    .style(\"stroke\", (_d, projectionItemIndex) => colorFn(projectionItemIndex))\n\n  projection.on(\"mouseover\", mouseover).on(\"mouseout\", mouseout)\n\n  $(`.${styles.background} path, .${styles.foreground} path`).tooltip({\n    track: true,\n  })\n}\n\nconst main = async () => {\n  const data = await fetchData()\n  const rootElId = \"chart\"\n\n  renderChart({ data, rootElId })\n}\n\nexport default main\n","// extracted by mini-css-extract-plugin\nexport var mapDistorsionsChart = \"map-distorsions-module--mapDistorsionsChart--mUvvP\";\nexport var background = \"map-distorsions-module--background--3HsKv\";\nexport var foreground = \"map-distorsions-module--foreground--2rO1Q\";\nexport var axis = \"map-distorsions-module--axis--2ai88\";\nexport var title = \"map-distorsions-module--title--2_Wji\";\nexport var label = \"map-distorsions-module--label--1aIb-\";\nexport var inactive = \"map-distorsions-module--inactive--1UynL\";\nexport var active = \"map-distorsions-module--active--iDjhn\";","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/map-distorsions/map-distorsions\"\n\nconst MapDistorsions = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default MapDistorsions\n"],"sourceRoot":""}