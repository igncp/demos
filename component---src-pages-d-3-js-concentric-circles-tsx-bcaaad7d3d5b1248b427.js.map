{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/concentric-circles/concentric-circles.ts","webpack://demos/./src/pages/d3js/concentric-circles.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchData","csv","ROOT_PATH","response","colours","margin","renderChart","namesMetrics","rootElId","c","scaleLinear","domain","extent","namesMetric","count","range","heatmapColour","length","colorize","colorNormalized","width","document","getElementById","getBoundingClientRect","height","max","svg","select","append","attr","filter","feMerge","addFilter","circles","selectAll","data","name","enter","rScale","scalePow","exponent","dataMax","style","on","$","tooltip","track","text","addDescription","pageContext","links","main","scripts","id"],"mappings":"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","file":"component---src-pages-d-3-js-concentric-circles-tsx-bcaaad7d3d5b1248b427.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import {\n  Selection,\n  csv,\n  extent,\n  max,\n  range,\n  scaleLinear,\n  scalePow,\n  select,\n} from \"d3\"\n\ntype NamesMetric = {\n  count: string\n  name: string\n  sex: string\n  year: string\n}\ntype NamesMetrics = NamesMetric[]\ntype SVG = Selection<SVGGElement, unknown, HTMLElement, unknown>\n\nconst fetchData = async (): Promise<NamesMetrics> => {\n  const response = await csv(\n    `${ROOT_PATH}data/d3js/concentric-circles/data.csv`\n  )\n\n  return (response as unknown) as NamesMetrics\n}\n\nconst colours = [\"#7C7CC9\", \"#52D552\", \"#337233\", \"#323247\"]\n\nconst margin = {\n  bottom: 20,\n  left: 20,\n  right: 20,\n  top: 20,\n}\nconst strokeWidth = \"2px\"\n\nconst addFilter = (svg: SVG) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs.append(\"filter\")\n\n  filter.attr(\"id\", \"drop-shadow\")\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", 9)\n  filter.append(\"feOffset\").attr(\"dx\", 5).attr(\"dy\", 5)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", \".3\")\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\ntype AddDescription = (o: { height: number; svg: SVG; width: number }) => void\n\nconst addDescription: AddDescription = ({ height, svg, width }) => {\n  svg\n    .append(\"text\")\n    .text(\n      \"Circles radius are proportional to the count of times the name appears\"\n    )\n    .attr(\"transform\", `translate(${width / 2},${height - 10})`)\n    .attr(\"width\", \"20px\")\n}\n\ntype RenderChart = (o: { namesMetrics: NamesMetrics; rootElId: string }) => void\n\nconst renderChart: RenderChart = ({ namesMetrics, rootElId }) => {\n  const c = scaleLinear()\n    .domain(\n      extent(namesMetrics, (namesMetric) => +namesMetric.count) as [\n        number,\n        number\n      ]\n    )\n    .range([0, 1])\n\n  const heatmapColour = scaleLinear<string>()\n    .domain(range(0, 1, 1.0 / colours.length))\n    .range(colours)\n\n  const colorize = (namesMetric: NamesMetric) => {\n    const colorNormalized = c(+namesMetric.count)\n\n    return heatmapColour(colorNormalized)\n  }\n\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n  const { width: elWidth } = rootEl.getBoundingClientRect()\n\n  const width = elWidth - margin.left - margin.right\n  const height =\n    (max(namesMetrics, (namesMetric) => +namesMetric.count) as number) * 2.5\n\n  const svg: SVG = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.left + margin.right)\n    .append(\"g\")\n\n  addFilter(svg)\n\n  const circleGroup = svg\n    .selectAll<SVGGElement, NamesMetric>(\"g\")\n    .data(namesMetrics, (namesMetric: NamesMetric) => namesMetric.name)\n    .enter()\n    .append(\"g\")\n\n  const circles = circleGroup.append<SVGCircleElement>(\"svg:circle\")\n  const rScale = scalePow()\n    .exponent(0.9)\n    .range([5, 300])\n    .domain(\n      extent(namesMetrics, (namesMetric) => +namesMetric.count) as [\n        number,\n        number\n      ]\n    )\n\n  const getTitle = (namesMetric: NamesMetrics[number]) =>\n    `${namesMetric.name}: ${namesMetric.count}`\n  const dataMax = max(\n    namesMetrics,\n    (namesMetric) => +namesMetric.count\n  ) as number\n\n  circles\n    .attr(\"cx\", width / 2)\n    .attr(\"cy\", height / 2)\n    .attr(\"r\", (namesMetric) => rScale(+namesMetric.count))\n    .attr(\"class\", \"name-circle\")\n    .attr(\"title\", getTitle)\n    .style(\"fill\", \"#fff\")\n    .style(\"stroke\", (namesMetric) => colorize(namesMetric))\n    .style(\"stroke-width\", strokeWidth)\n    .style(\"filter\", (namesMetric) => {\n      if (+namesMetric.count > dataMax / 2.5) {\n        return \"url(#drop-shadow)\"\n      }\n\n      return \"\"\n    })\n    .on(\"mouseover\", function () {\n      select(this).style(\"stroke\", \"#D88021\").style(\"stroke-width\", \"10px\")\n    })\n    .on(\"mouseleave\", function () {\n      select<SVGCircleElement, NamesMetric>(this)\n        .style(\"stroke\", (namesMetric) => colorize(namesMetric))\n        .style(\"stroke-width\", strokeWidth)\n    })\n\n  $(\".name-circle\").tooltip({\n    track: true,\n  })\n\n  addDescription({\n    height,\n    svg,\n    width,\n  })\n}\n\nconst main = async () => {\n  const namesMetrics = await fetchData()\n\n  renderChart({\n    namesMetrics,\n    rootElId: \"chart\",\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/concentric-circles/concentric-circles\"\n\nconst ConcentricCircles = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default ConcentricCircles\n"],"sourceRoot":""}