{"version":3,"file":"component---src-pages-d-3-js-chord-tsx-e6b72629b8fe4ea05240.js","mappings":"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","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/common.ts","webpack://demos/./src/demos/chord/chord-chart-config.ts","webpack://demos/./src/demos/chord/chord-data-model.ts","webpack://demos/./src/demos/chord/chord.module.css","webpack://demos/./src/demos/chord/n-chord-chart.ts","webpack://demos/./src/demos/chord/chord.ts","webpack://demos/./src/pages/d3js/chord.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","type DocName = string\ntype DocLink = string\n\ntype Meta = {\n  description: string\n}\n\ntype DemoBase = {\n  dataFiles: string[]\n  docs: Array<[DocName, DocLink]>\n  isCompleted: boolean\n  name: string\n  notes: string[]\n  sources: string[]\n  summary: string[]\n}\n\ntype DemoFile = {\n  content: string\n  filePath: string\n}\n\ntype DemoInfo = DemoBase & {\n  category: string\n  files: {\n    demoCSS: DemoFile[]\n    demoTS: DemoFile[]\n    page: {\n      content: string\n      type: string\n    }\n  }\n  key: string\n}\n\ntype DemoSummary = {\n  category: string\n  key: string\n  name: DemoBase[\"name\"]\n  route: string\n}\n\ntype IndexPageProps = {\n  pageContext: {\n    groupedDemos: DemoSummary[][]\n    meta: Meta\n    numberPerGroup: number\n  }\n}\n\ntype DemoPageProps = {\n  pageContext: {\n    demoInfo: DemoInfo\n    meta: Meta\n  }\n}\n\nenum SPECIAL_DEMO_KEYS {\n  STORYBOOK = \"storybook\",\n  TESTING = \"testing\",\n}\n\nconst JQUERYUI = {\n  SCRIPT: \"/vendors/jquery-ui/jquery-ui.min.js\",\n  STYLE: \"/vendors/jquery-ui/themes/base/jquery-ui.min.css\",\n}\n\nexport {\n  DemoBase,\n  DemoInfo,\n  DemoPageProps,\n  DemoSummary,\n  IndexPageProps,\n  JQUERYUI,\n  Meta,\n  SPECIAL_DEMO_KEYS,\n}\n","import { format } from \"d3\"\n\nimport { FinancialData, FinancialMatrix } from \"./chord-data-model\"\nimport { ChartConfig } from \"./n-chord-chart\"\n\nconst CONTAINER_ID = \"chart\"\nconst UPDATE_BUTTON_ID = \"update\"\n\nconst getChartConfig = (financialData: FinancialData): ChartConfig => {\n  const debits = financialData.getDebits()\n  const credits = financialData.getCredits()\n  const countriesList = financialData.getCountriesList()\n\n  const formatCurrencyNum = format(\",.3r\")\n\n  const formatCurrency = (currencyValue: number) =>\n    `$${formatCurrencyNum(currencyValue)}B.`\n\n  const getRibbonTitle: ChartConfig[\"getRibbonTitle\"] = ({\n    chartIndex,\n    sourceIndex,\n    sourceValue,\n    targetIndex,\n  }) => {\n    const { [sourceIndex]: sourceData, [targetIndex]: targetData } =\n      countriesList\n\n    const names = [targetData.name, sourceData.name]\n\n    if (chartIndex) {\n      names.reverse()\n    }\n\n    return `${names[0]} owes ${names[1]} ${formatCurrency(sourceValue)}`\n  }\n\n  const getGroupTitle: ChartConfig[\"getGroupTitle\"] = ({\n    chartIndex,\n    chordGroup,\n  }) =>\n    `${countriesList[chordGroup.index].name} ${\n      chartIndex ? \"owes\" : \"is owed\"\n    } ${formatCurrency(chordGroup.value)}`\n\n  const groupItems = countriesList.map((country) => ({\n    id: country.id,\n    label: country.name,\n  }))\n\n  const extractChordMatrix = (row: FinancialMatrix[0]) =>\n    row.map((cell) => (cell ? +cell.amount : 0))\n\n  const chordLeft = debits.map(extractChordMatrix)\n  const chordRight = credits.map(extractChordMatrix)\n\n  return {\n    chords: [chordLeft, chordRight],\n    chordsTitles: [\"Debits\", \"Credits\"],\n    getGroupTitle,\n    getRibbonTitle,\n    groupItems,\n    rootElId: CONTAINER_ID,\n  }\n}\n\nexport { CONTAINER_ID, UPDATE_BUTTON_ID, getChartConfig }\n","import { csv } from \"d3\"\n\ntype CSVDataItem = {\n  amount: string\n  creditor: string\n  debtor: string\n  risk: string\n}\n\ntype Country = {\n  id: number\n  name: string\n}\n\ntype Creditor = Country\ntype Debtor = Country & { risk: string }\n\ntype CSVParsedItem = {\n  amount: string\n  creditor: Creditor\n  debtor: Debtor\n  risk: string\n}\n\ntype FinancialMatrix = Array<Array<CSVParsedItem | null>>\n\nclass FinancialData {\n  private readonly credits: FinancialMatrix\n  private readonly debits: FinancialMatrix\n  private readonly countriesList: Country[]\n\n  private constructor({\n    countriesList,\n    credits,\n    debits,\n  }: {\n    countriesList: Country[]\n    credits: FinancialMatrix\n    debits: FinancialMatrix\n  }) {\n    this.credits = credits\n    this.debits = debits\n    this.countriesList = countriesList\n  }\n\n  public static async fetchAndCreate(): Promise<FinancialData> {\n    const originalCSVItems = (await csv(\n      `${ROOT_PATH}data/d3js/chord/data.csv`\n    )) as CSVDataItem[]\n\n    const countriesList: Country[] = []\n    const countries: Record<string, Country> = {}\n    const debits: FinancialMatrix = []\n    const credits: FinancialMatrix = []\n\n    let id = 0\n\n    const country = (countryName: string): Country => {\n      if (!(countryName in countries)) {\n        countries[countryName] = {\n          id,\n          name: countryName,\n        }\n\n        id += 1\n      }\n\n      return countries[countryName]\n    }\n\n    const parsedList: CSVParsedItem[] = originalCSVItems.map(\n      (originalCSVItem) => ({\n        ...originalCSVItem,\n        creditor: country(originalCSVItem.creditor),\n        debtor: {\n          ...country(originalCSVItem.debtor),\n          risk: originalCSVItem.risk,\n        },\n      })\n    )\n\n    Array.from({ length: id }).forEach((...[, sourceIndex]) => {\n      debits[sourceIndex] = []\n      credits[sourceIndex] = []\n\n      Array.from({ length: id }).forEach((...[, targetIndex]) => {\n        debits[sourceIndex][targetIndex] = null\n        credits[sourceIndex][targetIndex] = null\n      })\n    })\n\n    parsedList.forEach((financialItem) => {\n      debits[financialItem.creditor.id][financialItem.debtor.id] = financialItem\n      credits[financialItem.debtor.id][financialItem.creditor.id] =\n        financialItem\n\n      countriesList[financialItem.creditor.id] = financialItem.creditor\n      countriesList[financialItem.debtor.id] = financialItem.debtor\n    })\n\n    return new FinancialData({\n      countriesList,\n      credits,\n      debits,\n    })\n  }\n\n  public getCredits() {\n    return this.credits\n  }\n\n  public getDebits() {\n    return this.debits\n  }\n\n  public getCountriesList() {\n    return this.countriesList\n  }\n}\n\nexport { FinancialData, FinancialMatrix }\n","// extracted by mini-css-extract-plugin\nexport var chartTitle = \"chord-module--chartTitle--83bf6\";\nexport var chord = \"chord-module--chord--0b73b\";\nexport var group = \"chord-module--group--e9eeb\";\nexport var groupLabel = \"chord-module--groupLabel--fba6c\";","import {\n  BaseType,\n  Chord,\n  ChordGroup,\n  ScaleOrdinal,\n  Selection,\n  arc as arcD3,\n  chord,\n  descending,\n  interpolate,\n  rgb,\n  ribbon as ribbonD3,\n  scaleOrdinal,\n  schemePastel2,\n  select,\n} from \"d3\"\nimport { v1 as uuidv1 } from \"uuid\"\n\nimport * as styles from \"./chord.module.css\"\n\nconst getRibbonKey = (ribbonNode: Chord) =>\n  `${ribbonNode.source.index}_${ribbonNode.target.index}`\n\nconst getChordGroupKey = (chordGroup: ChordGroup) => chordGroup.index\n\nconst addDropShadowFilter = <SVGData>({\n  charts,\n  deviation,\n  name,\n  slope,\n}: {\n  charts: Selection<SVGGElement, SVGData, BaseType, unknown>\n  deviation: number\n  name: string\n  slope: number\n}) => {\n  const defs = charts.append(\"defs\")\n  const filter = defs.append(\"filter\").attr(\"id\", name)\n\n  filter\n    .append(\"feOffset\")\n    .attr(\"dx\", 0.5)\n    .attr(\"dy\", 0.5)\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"result\", \"offOut\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"offOut\")\n    .attr(\"result\", \"blurOut\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter\n    .append(\"feBlend\")\n    .attr(\"in\", \"SourceGraphic\")\n    .attr(\"in2\", \"blurOut\")\n    .attr(\"mode\", \"normal\")\n\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n}\n\nconst margin = {\n  bottom: 20,\n  top: 50,\n}\n\ntype GroupItem = {\n  id: number\n  label: string\n}\ntype ChordMatrix = number[][]\n\ntype ChartConfig = {\n  chords: ChordMatrix[]\n  chordsTitles: string[]\n  getGroupTitle: (options: {\n    chartIndex: number\n    chordGroup: ChordGroup\n  }) => string\n  getRibbonTitle: (options: {\n    chartIndex: number\n    sourceIndex: number\n    sourceValue: number\n    targetIndex: number\n    targetValue: number\n  }) => string\n  groupItems: GroupItem[]\n  rootElId: string\n}\n\ntype ChartElements = Readonly<{\n  charts: Selection<SVGGElement, ChordMatrix, BaseType, unknown>\n  chartsDivs: Selection<HTMLDivElement, ChordMatrix, BaseType, unknown>\n  chartsSVGs: Selection<SVGSVGElement, ChordMatrix, BaseType, unknown>\n  root: Selection<BaseType, unknown, HTMLElement, unknown>\n}>\n\ninterface BaseChart {\n  refresh: () => void\n  tearDown: () => void\n}\n\nclass NChordChart implements BaseChart {\n  private readonly config: ChartConfig\n  private readonly dropShadowGroupsId: string\n  private readonly ribbonItemClass: string\n  private readonly chordGroupClass: string\n  private readonly elements: ChartElements\n  private readonly colorScale: ScaleOrdinal<number, string>\n\n  private constructor(chartConfig: ChartConfig) {\n    this.config = chartConfig\n\n    const {\n      config: { chords, rootElId },\n    } = this\n\n    this.dropShadowGroupsId = `drop-shadow-groups-${uuidv1().slice(0, 6)}`\n    this.ribbonItemClass = `ribbon-item-${uuidv1().slice(0, 6)}`\n    this.chordGroupClass = `chord-group-${uuidv1().slice(0, 6)}`\n\n    const root = select(`#${rootElId}`)\n      .style(\"width\", \"100%\")\n      .style(\"justify-content\", \"space-evenly\")\n\n    root.selectAll(\"div\").data(chords).enter().append(\"div\")\n\n    const chartsDivs = root.selectAll<HTMLDivElement, ChordMatrix>(\"div\")\n    const chartsSVGs = chartsDivs.append(\"svg\")\n    const charts = chartsSVGs.append(\"g\")\n\n    this.elements = {\n      charts,\n      chartsDivs,\n      chartsSVGs,\n      root,\n    }\n\n    charts.each((...[, chartIndex]) => {\n      const chart = charts.filter(\n        (...[, chartIndexInner]) => chartIndex === chartIndexInner\n      )\n      const {\n        chordsTitles: { [chartIndex]: label },\n      } = chartConfig\n\n      chart\n        .append(\"text\")\n        .text(label)\n        .attr(\"class\", styles.chartTitle)\n        .attr(\"text-anchor\", \"middle\")\n    })\n\n    addDropShadowFilter({\n      charts,\n      deviation: 3,\n      name: this.dropShadowGroupsId,\n      slope: 0.5,\n    })\n\n    this.colorScale = scaleOrdinal<number, string>(schemePastel2)\n\n    this.render()\n\n    window.addEventListener(\"resize\", this.handleWindowResize)\n  }\n\n  public static renderChart(chartConfig: ChartConfig) {\n    return new NChordChart(chartConfig)\n  }\n\n  public tearDown() {\n    window.removeEventListener(\"resize\", this.handleWindowResize)\n  }\n\n  public refresh() {\n    this.render(true)\n  }\n\n  private render(withAnimation?: boolean) {\n    const {\n      colorScale,\n      config: { chords, getGroupTitle, getRibbonTitle, groupItems, rootElId },\n    } = this\n\n    const animationDuration = withAnimation ? 1000 : 0\n    const rootEl = document.getElementById(rootElId) as HTMLElement\n    const { width: fullWidth } = rootEl.getBoundingClientRect()\n    const width = fullWidth / chords.length - 20\n    const isSmallDevice = fullWidth < 768\n    const height = isSmallDevice ? fullWidth : width\n    const {\n      elements: { charts, chartsDivs, chartsSVGs, root },\n    } = this\n\n    const outerRadius =\n      Math.min(width, height) / (isSmallDevice ? 1 : chords.length) -\n      (isSmallDevice ? 0 : 20)\n    const innerRadius = outerRadius - 20\n\n    const chordGroupArc = arcD3<ChordGroup>()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius)\n\n    root\n      .style(\"display\", isSmallDevice ? \"flex\" : \"inline-flex\")\n      .style(\"flex-direction\", isSmallDevice ? \"column\" : \"row\")\n\n    chartsDivs\n      .attr(\"width\", isSmallDevice ? fullWidth : width)\n      .style(\"height\", `${height + margin.top + margin.bottom}px`)\n\n    chartsSVGs\n      .attr(\"width\", isSmallDevice ? fullWidth : width)\n      .attr(\"height\", height + margin.top + margin.bottom)\n\n    charts.attr(\n      \"transform\",\n      isSmallDevice\n        ? `translate(${fullWidth / 2},${height / 2 + margin.top})`\n        : `translate(${width / 2},${height / 2 + margin.top})`\n    )\n\n    charts.each((...[, chartIndex]) => {\n      const chart = charts.filter(\n        (...[, chartIndexInner]) => chartIndex === chartIndexInner\n      )\n\n      chart\n        .select(`.${styles.chartTitle}`)\n        .attr(\"transform\", `translate(0,${(-1 * height) / 2 - 0})`)\n    })\n\n    const { chordGroupClass, dropShadowGroupsId, ribbonItemClass } = this\n\n    charts.each(function renderSingleChart(...[numberMatrix, chartIndex]) {\n      const chartSel = select(this)\n\n      const chordData = chord().sortChords(descending)(numberMatrix)\n\n      const ribbonPath = ribbonD3<Chord, Chord>().radius(innerRadius)\n\n      const initialRibbonsData = chartSel\n        .selectAll<SVGPathElement, Chord>(`.${styles.chord}`)\n        .data()\n        .reduce<{ [k: string]: Chord | undefined }>((...[acc, ribbonNode]) => {\n          acc[getRibbonKey(ribbonNode)] = ribbonNode\n\n          return acc\n        }, {})\n\n      const chordUpdated = chartSel\n        .selectAll(`.${styles.chord}`)\n        .data(chordData, (...[, ribbonIndex]) => ribbonIndex)\n\n      chordUpdated\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", `${styles.chord} ${ribbonItemClass}`)\n      chordUpdated.exit().remove()\n\n      chartSel\n        .selectAll<SVGPathElement, Chord>(`path.${styles.chord}`)\n        .style(\"fill\", (chordItem) => colorScale(chordItem.target.index))\n        .style(\"stroke\", (ribbonItem) => {\n          const originalColor = colorScale(ribbonItem.target.index)\n          const newColor = rgb(originalColor).darker()\n\n          return newColor.formatHex()\n        })\n        .style(\"stroke-width\", 2)\n        .attr(\"title\", (ribbonItem) =>\n          getRibbonTitle({\n            chartIndex,\n            sourceIndex: ribbonItem.source.index,\n            sourceValue: ribbonItem.source.value,\n            targetIndex: ribbonItem.target.index,\n            targetValue: ribbonItem.source.value,\n          })\n        )\n        .transition()\n        .duration(animationDuration)\n        .attrTween(\"d\", (finalRibbon) => {\n          const { [getRibbonKey(finalRibbon)]: initialRibbon } =\n            initialRibbonsData\n          const interpolateFn = interpolate(\n            initialRibbon ?? finalRibbon,\n            finalRibbon\n          )\n\n          return (time) => {\n            const interpolatedRibbon = interpolateFn(time)\n\n            return ribbonPath(interpolatedRibbon)!\n          }\n        })\n\n      const newGroupsSel = chartSel\n        .selectAll<SVGGElement, ChordGroup>(`.${styles.group}`)\n        .data(chordData.groups, getChordGroupKey)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", styles.group)\n\n      newGroupsSel.append(\"path\").attr(\"class\", chordGroupClass)\n      newGroupsSel\n        .append(\"text\")\n        .attr(\"class\", \"group-text\")\n        .attr(\"x\", 6)\n        .attr(\"dy\", 15)\n        .append(\"textPath\")\n        .attr(\n          \"xlink:href\",\n          (chordGroup) => `#group${chordGroup.index}-${chartIndex}`\n        )\n        .attr(\"class\", styles.groupLabel)\n        .text((chordGroup) => groupItems[chordGroup.index].label)\n\n      const initialGroupsData = chartSel.selectAll(`.${chordGroupClass}`).data()\n      const groupsSel = chartSel.selectAll(`.${styles.group}`)\n\n      groupsSel\n        .selectAll<SVGPathElement, ChordGroup>(`.${chordGroupClass}`)\n        .data(chordData.groups, getChordGroupKey)\n        .style(\"fill\", (chordGroup) => colorScale(chordGroup.index))\n        .attr(\"id\", (chordGroup) => `group${chordGroup.index}-${chartIndex}`)\n        .style(\"filter\", () => `url(#${dropShadowGroupsId})`)\n        .attr(\"title\", (chordGroup) =>\n          getGroupTitle({\n            chartIndex,\n            chordGroup,\n          })\n        )\n        .transition()\n        .duration(animationDuration)\n        .attrTween(\"d\", (finalGroup) => {\n          const { [finalGroup.index]: initialGroup } = initialGroupsData\n          const interpolateFn = interpolate(initialGroup, finalGroup)\n\n          return (t) => chordGroupArc(interpolateFn(t))!\n        })\n\n      groupsSel\n        .selectAll<SVGTextElement, ChordGroup>(\".group-text\")\n        .selectAll<SVGTextPathElement, ChordGroup>(\"textPath\")\n        .data(chordData.groups, getChordGroupKey)\n        .transition()\n        .duration(animationDuration)\n        .style(\"opacity\", (chordGroup) =>\n          Math.abs(chordGroup.startAngle - chordGroup.endAngle) > 0.4 ? 1 : 0\n        )\n      ;[ribbonItemClass, chordGroupClass].forEach((className) => {\n        $(`.${className}`).tooltip({\n          track: true,\n        })\n      })\n    })\n  }\n\n  private readonly handleWindowResize = () => {\n    this.render()\n  }\n}\n\nexport { NChordChart, ChartConfig }\n","import {\n  CONTAINER_ID,\n  UPDATE_BUTTON_ID,\n  getChartConfig,\n} from \"./chord-chart-config\"\nimport { FinancialData } from \"./chord-data-model\"\nimport { NChordChart } from \"./n-chord-chart\"\n\nconst main = async () => {\n  const financialData = await FinancialData.fetchAndCreate()\n  const chartConfig = getChartConfig(financialData)\n\n  const chordChart = NChordChart.renderChart(chartConfig)\n  const buttonEl = document.getElementById(UPDATE_BUTTON_ID)!\n\n  buttonEl.addEventListener(\"click\", () => {\n    chartConfig.chords.forEach((chordMatrix) => {\n      chordMatrix.forEach((...[chordRow, chordRowIndex]) => {\n        chordRow.forEach((...[, chordCellIndex]) => {\n          // Avoid creating a self-referencing ribbon\n          if (chordRowIndex === chordCellIndex) {\n            return\n          }\n\n          const shouldUpdate = Math.random() < 0.1\n\n          if (shouldUpdate) {\n            chordRow[chordCellIndex] = Math.max(\n              0,\n              Math.floor(Math.random() * 100) - 20\n            )\n          }\n        })\n      })\n    })\n    chordChart.refresh()\n  })\n}\n\nexport { CONTAINER_ID, UPDATE_BUTTON_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps, JQUERYUI } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID, UPDATE_BUTTON_ID } from \"@/demos/chord/chord\"\n\nconst Chord = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[JQUERYUI.STYLE]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[JQUERYUI.SCRIPT]}\n  >\n    <form style={{ marginBottom: 20 }}>\n      <button className=\"btn btn-info\" id={UPDATE_BUTTON_ID} type=\"button\">\n        Update Random Value\n      </button>\n    </form>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Chord\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","SPECIAL_DEMO_KEYS","JQUERYUI","SCRIPT","STYLE","CONTAINER_ID","UPDATE_BUTTON_ID","getChartConfig","financialData","debits","getDebits","credits","getCredits","countriesList","getCountriesList","formatCurrencyNum","format","formatCurrency","currencyValue","groupItems","map","country","id","label","name","extractChordMatrix","row","cell","amount","chords","chordsTitles","getGroupTitle","chartIndex","chordGroup","index","value","getRibbonTitle","sourceIndex","sourceValue","targetIndex","sourceData","names","reverse","rootElId","FinancialData","this","fetchAndCreate","csv","ROOT_PATH","originalCSVItems","countries","countryName","parsedList","originalCSVItem","creditor","debtor","risk","from","forEach","financialItem","chartTitle","chord","group","groupLabel","getRibbonKey","ribbonNode","source","target","getChordGroupKey","margin","NChordChart","chartConfig","handleWindowResize","render","config","dropShadowGroupsId","uuidv1","slice","ribbonItemClass","chordGroupClass","root","select","style","selectAll","data","enter","append","chartsDivs","chartsSVGs","charts","elements","each","chart","filter","chartIndexInner","text","attr","styles","deviation","slope","addDropShadowFilter","colorScale","scaleOrdinal","schemePastel2","window","addEventListener","renderChart","tearDown","removeEventListener","refresh","withAnimation","animationDuration","fullWidth","document","getElementById","getBoundingClientRect","width","isSmallDevice","height","outerRadius","Math","min","innerRadius","chordGroupArc","arcD3","numberMatrix","chartSel","chordData","sortChords","descending","ribbonPath","ribbonD3","radius","initialRibbonsData","reduce","acc","chordUpdated","ribbonIndex","exit","remove","chordItem","ribbonItem","originalColor","rgb","darker","formatHex","targetValue","transition","duration","attrTween","finalRibbon","initialRibbon","interpolateFn","interpolate","time","interpolatedRibbon","newGroupsSel","groups","initialGroupsData","groupsSel","finalGroup","initialGroup","t","abs","startAngle","endAngle","className","$","tooltip","track","main","chordChart","chordMatrix","chordRow","chordRowIndex","chordCellIndex","shouldUpdate","max","floor","pageContext","links","scripts","marginBottom","type","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","apply","err"],"sourceRoot":""}