{"version":3,"file":"component---src-pages-d-3-js-fish-eye-tsx-12566d4c1b8dc9593c52.js","mappings":"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","sources":["webpack://demos/./src/demos/_utils/fish-eye.ts","webpack://demos/./src/demos/fish-eye/fish-eye.module.css","webpack://demos/./src/demos/fish-eye/fish-eye-chart.ts","webpack://demos/./src/demos/fish-eye/fish-eye-config.ts","webpack://demos/./src/demos/fish-eye/fish-eye.ts","webpack://demos/./src/pages/d3js/fish-eye.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { AxisScale, ScaleLinear, extent, scaleLinear } from \"d3\"\n\ntype ScaleFn = typeof scaleLinear\ntype Scale = ScaleLinear<number, number>\n\nconst d3Rebind = <\n  MethodArgs extends any[], // eslint-disable-line @typescript-eslint/no-explicit-any\n  Method extends string,\n  Source extends { [k in Method]: (...args: MethodArgs) => Source },\n  Target\n>({\n  method,\n  source,\n  target,\n}: {\n  method: Method\n  source: Source\n  target: Target\n}) =>\n  function boundMethod(...args: MethodArgs) {\n    const methodResult = source[method](...args)\n\n    return methodResult === source ? target : methodResult\n  }\n\nconst fishEyeScale = ({\n  distortion: initialDistortion,\n  focus: initialFocus,\n  scale,\n}: {\n  distortion: number\n  focus: number\n  scale: Scale\n}) => {\n  let distortion = initialDistortion\n  let focus = initialFocus\n\n  function fisheye(scaleArgs: Parameters<Scale>[0]) {\n    const x = scale(scaleArgs)\n    const left = x < focus\n    const [min, max] = extent<number>(scale.range()) as [number, number]\n    let m = left ? focus - min : max - focus\n\n    if (m === 0) {\n      m = max - min\n    }\n\n    return (\n      ((left ? -1 : 1) * m * (distortion + 1)) /\n        (distortion + m / Math.abs(x - focus)) +\n      focus\n    )\n  }\n\n  type FisheyeFn = {\n    (newValue: number): typeof fisheye\n    (): number\n  }\n\n  const createFisheyeFn = (cb: (newValue: number) => void): FisheyeFn =>\n    ((newValue?: number) => {\n      if (typeof newValue === \"undefined\") {\n        return distortion\n      }\n\n      cb(newValue)\n\n      return fisheye\n    }) as FisheyeFn\n\n  fisheye.distortion = createFisheyeFn((newDistortion) => {\n    distortion = +newDistortion\n  })\n\n  fisheye.focus = createFisheyeFn((newFocus) => {\n    focus = +newFocus\n  })\n\n  fisheye.copy = function fisheyeCopy() {\n    return fishEyeScale({\n      distortion,\n      focus,\n      scale: scale.copy(),\n    })\n  }\n\n  fisheye.nice = scale.nice\n  fisheye.ticks = scale.ticks\n  fisheye.tickFormat = scale.tickFormat\n\n  fisheye.domain = d3Rebind({\n    method: \"domain\",\n    source: scale,\n    target: fisheye,\n  })\n\n  fisheye.range = d3Rebind({\n    method: \"range\",\n    source: scale,\n    target: fisheye,\n  })\n\n  return fisheye\n}\n\nconst fisheye = {\n  scale(scaleType: ScaleFn) {\n    return fishEyeScale({\n      distortion: 3,\n      focus: 0,\n      scale: scaleType(),\n    })\n  },\n}\n\nexport type FishEyeScale = AxisScale<number> &\n  ReturnType<typeof fisheye.scale> &\n  Scale\n\nexport default fisheye\n","// extracted by mini-css-extract-plugin\nexport var fishEyeChart = \"fish-eye-module--fishEyeChart--20e7a\";\nexport var axis = \"fish-eye-module--axis--33d9a\";\nexport var background = \"fish-eye-module--background--ac9ea\";\nexport var chartTitle = \"fish-eye-module--chartTitle--a1de9\";\nexport var pointer = \"fish-eye-module--pointer--15827\";","import {\n  Axis,\n  AxisScale,\n  ScaleOrdinal,\n  ScalePower,\n  Selection,\n  axisBottom,\n  axisLeft,\n  format,\n  pointer as pointerD3,\n  scaleLinear,\n  scaleLog,\n  scaleOrdinal,\n  scaleSqrt,\n  schemePastel2,\n  select,\n} from \"d3\"\n\nimport d3Fisheye, { FishEyeScale } from \"@/demos/_utils/fish-eye\"\n\nimport * as styles from \"./fish-eye.module.css\"\n\nconst margin = {\n  bottom: 70,\n  left: 70,\n  right: 50,\n  top: 80,\n}\nconst LEFT_OFFSET_SMALL_DEVICE = 20\nconst height = 700 - margin.top - margin.bottom\n\ntype FishEyeChartOpts<ChartData> = Readonly<{\n  chartItems: ChartData[]\n  colorDomain: string[]\n  getCircleTitle: (chartItem: ChartData) => string\n  getColorValue: (chartItem: ChartData) => string\n  getRadiusValue: (chartItem: ChartData) => number\n  getXValue: (chartItem: ChartData) => number\n  getYValue: (chartItem: ChartData) => number\n  rootElId: string\n  titles: {\n    long: string\n    short: string\n  }\n  xAxisLabel: string\n  yAxisLabel: string\n}>\n\nclass FishEyeChart<ChartData> {\n  private readonly config: FishEyeChartOpts<ChartData>\n\n  private width = 0\n\n  private dom!: {\n    dot?: Selection<SVGCircleElement, ChartData, SVGGElement, unknown>\n    pointer?: Selection<SVGTextElement, unknown, HTMLElement, unknown>\n    svg: Selection<SVGSVGElement, unknown, HTMLElement, unknown>\n    svgG: Selection<SVGGElement, unknown, HTMLElement, unknown>\n    xAxis?: Axis<number>\n    yAxis?: Axis<number>\n  }\n\n  private vars!: {\n    colorScale: ScaleOrdinal<string, string>\n    focused: boolean\n    radiusScale: ScalePower<number, number>\n    xScale: FishEyeScale\n    yScale: FishEyeScale\n  }\n\n  public constructor(chartConfig: FishEyeChartOpts<ChartData>) {\n    this.config = chartConfig\n\n    this.setupRootEl()\n    this.setVars()\n    this.setDom()\n\n    this.setChartTitle()\n    this.setBackground()\n    this.setPointer()\n    this.setAxis()\n    this.setLabels()\n    this.setDots()\n    this.setTitles()\n    this.updateDimensions()\n    this.bindMousemove()\n    this.bindMouseLeave()\n    this.bindClick()\n    this.bindResize()\n\n    this.setZoom({\n      animationDuration: 0,\n      distortion: 0,\n      focus: [0, 0],\n    })\n  }\n\n  private static isTouchDevice() {\n    return (\n      \"ontouchstart\" in window ||\n      navigator.maxTouchPoints > 0 ||\n      (navigator as any).msMaxTouchPoints > 0 // eslint-disable-line @typescript-eslint/no-explicit-any\n    )\n  }\n\n  public refresh() {\n    this.updateDimensions(1000)\n  }\n\n  private setupRootEl() {\n    const rootEl = document.getElementById(this.config.rootElId) as HTMLElement\n\n    rootEl.classList.add(styles.fishEyeChart)\n\n    this.width =\n      rootEl.getBoundingClientRect().width - margin.left - margin.right\n  }\n\n  private isSmallDevice() {\n    return this.width < 500\n  }\n\n  private setDom() {\n    const svg = select(`#${this.config.rootElId}`).append(\"svg\")\n    const svgG = svg.append(\"g\")\n\n    this.dom = {\n      svg,\n      svgG,\n    }\n  }\n\n  private setChartTitle() {\n    this.dom.svgG\n      .append(\"text\")\n      .attr(\"class\", styles.chartTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-weight\", \"bold\")\n  }\n\n  private setVars() {\n    const colorScale = scaleOrdinal<string>()\n      .domain(this.config.colorDomain)\n      .range(schemePastel2)\n\n    const radiusScale = scaleSqrt().domain([0, 5e8]).range([5, 60])\n    const xScale = d3Fisheye\n      .scale(scaleLog)\n      .domain([200, 1e5])\n      .range([0, this.width]) as FishEyeScale\n    const yScale = d3Fisheye\n      .scale(scaleLinear)\n      .domain([20, 90])\n      .range([height, 0]) as FishEyeScale\n\n    this.vars = {\n      colorScale,\n      focused: false,\n      radiusScale,\n      xScale,\n      yScale,\n    }\n  }\n\n  private setAxis() {\n    const formatFn = format(\",d\")\n\n    this.dom.xAxis = axisBottom(this.vars.xScale as AxisScale<number>)\n      .tickFormat((tickNumber) => {\n        if (tickNumber < 1000) {\n          return formatFn(tickNumber)\n        }\n\n        const reducedNum = Math.round(tickNumber / 1000)\n\n        return `${formatFn(reducedNum)}k`\n      })\n      .tickSize(-height)\n    this.dom.yAxis = axisLeft(this.vars.yScale as AxisScale<number>).tickSize(\n      -this.width\n    )\n    this.dom.svgG\n      .append(\"g\")\n      .attr(\"class\", `x ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(this.dom.xAxis)\n    this.dom.svgG\n      .append(\"g\")\n      .attr(\"class\", `y ${styles.axis}`)\n      .call(this.dom.yAxis)\n  }\n\n  private setBackground() {\n    return this.dom.svgG.append(\"rect\").attr(\"class\", styles.background)\n  }\n\n  private setLabels() {\n    this.dom.svgG\n      .append(\"text\")\n      .attr(\"class\", \"x label\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(this.config.xAxisLabel)\n\n    this.dom.svgG\n      .append(\"text\")\n      .attr(\"class\", \"y label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", -height / 2)\n      .attr(\"y\", -40)\n      .attr(\"dy\", \".75em\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(this.config.yAxisLabel)\n  }\n\n  private position(animationDuration: number) {\n    this.dom.svgG.attr(\n      \"transform\",\n      `translate(${\n        margin.left - (this.isSmallDevice() ? LEFT_OFFSET_SMALL_DEVICE : 0)\n      },${margin.top})`\n    )\n    this.dom\n      // Sort the circles by radius, so the largest circles appear below\n      .dot!.sort(\n        (...[chartItemA, chartItemB]) =>\n          this.config.getRadiusValue(chartItemB) -\n          this.config.getRadiusValue(chartItemA)\n      )\n      .transition()\n      .duration(animationDuration)\n      .attr(\"cx\", (chartItem) => {\n        const xValue = this.config.getXValue(chartItem)\n\n        return this.vars.xScale(xValue) as number\n      })\n      .attr(\"cy\", (chartItem) => {\n        const yValue = this.config.getYValue(chartItem)\n\n        return this.vars.yScale(yValue) as number\n      })\n      .attr(\"r\", (chartItem) => {\n        const radiusValue = this.config.getRadiusValue(chartItem)\n\n        return (\n          this.vars.radiusScale(radiusValue) / (this.isSmallDevice() ? 2 : 1)\n        )\n      })\n    this.dom.xAxis!.ticks(this.isSmallDevice() ? 2 : undefined)\n    this.dom.svgG\n      .select<SVGGElement>(`.x.${styles.axis}`)\n      .transition()\n      .duration(animationDuration)\n      .call(this.dom.xAxis!)\n    this.dom.svgG\n      .select<SVGGElement>(`.y.${styles.axis}`)\n      .transition()\n      .duration(animationDuration)\n      .call(this.dom.yAxis!)\n  }\n\n  private setDots() {\n    this.dom.dot = this.dom.svgG\n      .append(\"g\")\n      .attr(\"class\", \"dots\")\n      .selectAll(\".dot\")\n      .data<ChartData>(this.config.chartItems)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .style(\"fill\", (chartItem) => {\n        const colorValue = this.config.getColorValue(chartItem)\n\n        return this.vars.colorScale(colorValue)\n      })\n      .style(\"stroke\", \"black\")\n      .style('\"stroke-width\"', \"1px\")\n\n    this.position(0)\n  }\n\n  private setTitles() {\n    this.dom.dot!.append(\"title\").attr(\"class\", \"dot-title\")\n    this.updateTitles()\n  }\n\n  private setZoom({\n    animationDuration,\n    distortion,\n    focus,\n  }: {\n    animationDuration: number\n    distortion: number\n    focus: [number, number]\n  }) {\n    this.vars.xScale.distortion(distortion).focus(focus[0])\n    this.vars.yScale.distortion(distortion).focus(focus[1])\n    this.position(animationDuration)\n  }\n\n  private updateTitles() {\n    this.dom\n      .dot!.selectAll<SVGTitleElement, ChartData>(\".dot-title\")\n      .text((chartItem) => this.config.getCircleTitle(chartItem))\n\n    this.dom.svgG\n      .select<SVGTitleElement>(`.${styles.chartTitle}`)\n      .text(\n        this.isSmallDevice()\n          ? this.config.titles.short\n          : this.config.titles.long\n      )\n  }\n\n  private zoom({\n    animationDuration,\n    interactionEvent,\n  }: {\n    animationDuration: number\n    interactionEvent: Event\n  }) {\n    const focus = pointerD3(interactionEvent)\n\n    this.setZoom({\n      animationDuration,\n      distortion: 2.5,\n      focus,\n    })\n  }\n\n  private setPointer() {\n    this.dom.pointer = this.dom.svgG\n      .append(\"text\")\n      .text(\"+\")\n      .attr(\"class\", styles.pointer)\n  }\n\n  private bindMousemove() {\n    return this.dom.svgG.on(\"mousemove\", (interactionEvent) => {\n      if (FishEyeChart.isTouchDevice()) {\n        return\n      }\n\n      if (!this.vars.focused) {\n        this.zoom({\n          animationDuration: 0,\n          interactionEvent,\n        })\n      }\n    })\n  }\n\n  private bindMouseLeave() {\n    return this.dom.svgG.on(\"mouseleave\", () => {\n      if (!this.vars.focused) {\n        this.setZoom({\n          animationDuration: 1000,\n          distortion: 0,\n          focus: [0, 0],\n        })\n      }\n    })\n  }\n\n  private bindClick() {\n    this.dom.svgG.on(\"click\", (interactionEvent: Event) => {\n      const isTouchDevice = FishEyeChart.isTouchDevice()\n\n      if (!isTouchDevice) {\n        this.vars.focused = !this.vars.focused\n\n        if (this.vars.focused) {\n          const pointer = pointerD3(this)\n\n          this.dom\n            .pointer!.attr(\"x\", pointer[0])\n            .attr(\"y\", pointer[1])\n            .style(\"opacity\", 1)\n\n          return\n        }\n      }\n\n      this.dom.pointer!.style(\"opacity\", 0)\n\n      this.zoom({\n        animationDuration: isTouchDevice ? 1000 : 0,\n        interactionEvent,\n      })\n    })\n  }\n\n  private updateDimensions(animationDuration = 0) {\n    this.setupRootEl()\n\n    const isSmallDevice = this.isSmallDevice()\n    const widthOffset = isSmallDevice ? LEFT_OFFSET_SMALL_DEVICE : 0\n    const totalWidth = this.width + widthOffset\n\n    this.dom.svg\n      .attr(\"width\", this.width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    this.dom.svgG\n      .select(`.${styles.chartTitle}`)\n      .attr(\"transform\", `translate(${totalWidth / 2},-40)`)\n\n    this.dom.svgG\n      .select(`.${styles.background}`)\n      .attr(\"width\", this.width)\n      .attr(\"height\", height)\n\n    this.dom.svgG\n      .select(\".x.label\")\n      .attr(\"y\", height + 26)\n      .attr(\"x\", this.width / 2)\n\n    this.vars.xScale.range([0, totalWidth])\n    this.updateTitles()\n    this.position(animationDuration)\n  }\n\n  private bindResize() {\n    window.addEventListener(\"resize\", () => {\n      this.updateDimensions()\n    })\n  }\n}\n\nexport { FishEyeChart, FishEyeChartOpts }\n","import { json } from \"d3\"\n\nimport { FishEyeChartOpts } from \"./fish-eye-chart\"\n\nconst CONTAINER_ID = \"chart\"\nconst RANDOM_UPDATE_ID = \"random-update\"\n\ntype IncomeMetric = {\n  income: number\n  lifeExpectancy: number\n  name: string\n  population: number\n  region: string\n}\n\nconst fetchData = async () =>\n  json(`${ROOT_PATH}data/d3js/fish-eye/data.json`) as Promise<IncomeMetric[]>\n\ntype Opts = FishEyeChartOpts<IncomeMetric>\n\nconst getXValue: Opts[\"getXValue\"] = (incomeMetric) => incomeMetric.income\nconst getYValue: Opts[\"getYValue\"] = (incomeMetric) =>\n  incomeMetric.lifeExpectancy\nconst getRadiusValue: Opts[\"getRadiusValue\"] = (incomeMetric) =>\n  incomeMetric.population\nconst getColorValue: Opts[\"getColorValue\"] = (incomeMetric) =>\n  incomeMetric.region\n\nconst humanizeNumber = (initialN: number): string => {\n  let numStr = initialN.toFixed(0)\n\n  while (true) {\n    const numStrFormatted = numStr.replace(/(\\d)(\\d{3})($|,|\\.)/g, \"$1,$2$3\")\n\n    if (numStrFormatted === numStr) {\n      break\n    }\n\n    numStr = numStrFormatted\n  }\n\n  return numStr\n}\n\nconst getCircleTitle: Opts[\"getCircleTitle\"] = (incomeMetric) =>\n  `${incomeMetric.name}:\\n- Income: ${humanizeNumber(\n    incomeMetric.income\n  )} $/P.C.\\n` +\n  `- Population: ${humanizeNumber(incomeMetric.population)}\\n` +\n  `- Life expectancy: ${incomeMetric.lifeExpectancy} years`\n\nconst regions = [\n  \"Sub-Saharan Africa\",\n  \"South Asia\",\n  \"Middle East & North Africa\",\n  \"America\",\n  \"Europe & Central Asia\",\n  \"East Asia & Pacific\",\n]\n\nconst longTitle =\n  \"Income Per Capita vs \" +\n  \"Life Expectancy vs Population vs Region - 180 Countries\"\nconst shortTitle = \"Income Per Capita vs Life Expectancy\"\n\nconst xAxisLabel = \"income per capita, inflation-adjusted (dollars)\"\nconst yAxisLabel = \"life expectancy (years)\"\n\nconst getChartConfig = (incomeMetrics: IncomeMetric[]): Opts => ({\n  chartItems: incomeMetrics,\n  colorDomain: regions,\n  getCircleTitle,\n  getColorValue,\n  getRadiusValue,\n  getXValue,\n  getYValue,\n  rootElId: CONTAINER_ID,\n  titles: {\n    long: longTitle,\n    short: shortTitle,\n  },\n  xAxisLabel,\n  yAxisLabel,\n})\n\nexport { CONTAINER_ID, RANDOM_UPDATE_ID, fetchData, getChartConfig }\n","import { extent, scalePow } from \"d3\"\n\nimport { FishEyeChart } from \"./fish-eye-chart\"\nimport {\n  CONTAINER_ID,\n  RANDOM_UPDATE_ID,\n  fetchData,\n  getChartConfig,\n} from \"./fish-eye-config\"\n\nconst main = async () => {\n  const incomeMetrics = await fetchData()\n  const chartConfig = getChartConfig(incomeMetrics)\n\n  const chart = new FishEyeChart(chartConfig)\n\n  document.getElementById(RANDOM_UPDATE_ID)?.addEventListener(\"click\", () => {\n    const getCommonExtent = (\n      property: \"income\" | \"lifeExpectancy\" | \"population\"\n    ) =>\n      extent(chartConfig.chartItems, (chartItem) => chartItem[property]) as [\n        number,\n        number\n      ]\n\n    const populationExtent = getCommonExtent(\"population\")\n    const incomeExtent = getCommonExtent(\"income\")\n    const lifeExpectancyExtent = getCommonExtent(\"lifeExpectancy\")\n\n    const populationScale = scalePow().exponent(20).range(populationExtent)\n    const incomeScale = scalePow().exponent(5).range(incomeExtent)\n    const lifeExpectancyScale = scalePow()\n      .exponent(2)\n      .range(lifeExpectancyExtent)\n\n    chartConfig.chartItems.forEach((incomeMetric) => {\n      if (Math.random() < 0.1) {\n        incomeMetric.population = populationScale(Math.random())\n        incomeMetric.income = incomeScale(Math.random())\n        incomeMetric.lifeExpectancy = lifeExpectancyScale(Math.random())\n      }\n    })\n\n    chart.refresh()\n  })\n}\n\nexport { CONTAINER_ID, RANDOM_UPDATE_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID, RANDOM_UPDATE_ID } from \"@/demos/fish-eye/fish-eye\"\n\nconst FishEye = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div style={{ marginBottom: 20, textAlign: \"center\" }}>\n      <button className=\"btn btn-primary\" id={RANDOM_UPDATE_ID}>\n        Update random values\n      </button>\n    </div>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default FishEye\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["d3Rebind","method","source","target","methodResult","fishEyeScale","initialDistortion","distortion","initialFocus","focus","scale","fisheye","scaleArgs","x","left","extent","range","min","max","m","Math","abs","createFisheyeFn","cb","newValue","newDistortion","newFocus","copy","nice","ticks","tickFormat","domain","scaleType","axis","background","chartTitle","margin","height","FishEyeChart","chartConfig","width","this","config","setupRootEl","setVars","setDom","setChartTitle","setBackground","setPointer","setAxis","setLabels","setDots","setTitles","updateDimensions","bindMousemove","bindMouseLeave","bindClick","bindResize","setZoom","animationDuration","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","refresh","rootEl","document","getElementById","rootElId","classList","add","getBoundingClientRect","isSmallDevice","svg","select","append","svgG","dom","attr","styles","style","colorScale","scaleOrdinal","colorDomain","schemePastel2","radiusScale","scaleSqrt","xScale","d3Fisheye","scaleLog","yScale","scaleLinear","vars","focused","formatFn","format","xAxis","axisBottom","tickNumber","reducedNum","round","tickSize","yAxis","axisLeft","call","text","xAxisLabel","yAxisLabel","position","dot","sort","chartItemA","chartItemB","getRadiusValue","transition","duration","chartItem","xValue","getXValue","yValue","getYValue","radiusValue","undefined","selectAll","data","chartItems","enter","colorValue","getColorValue","updateTitles","getCircleTitle","titles","short","long","zoom","interactionEvent","pointerD3","pointer","on","widthOffset","totalWidth","addEventListener","CONTAINER_ID","RANDOM_UPDATE_ID","fetchData","json","ROOT_PATH","incomeMetric","income","lifeExpectancy","population","region","humanizeNumber","initialN","numStr","toFixed","numStrFormatted","replace","name","regions","getChartConfig","incomeMetrics","main","chart","getCommonExtent","property","populationExtent","incomeExtent","lifeExpectancyExtent","populationScale","scalePow","exponent","incomeScale","lifeExpectancyScale","forEach","random","pageContext","marginBottom","textAlign","className","id","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err"],"sourceRoot":""}