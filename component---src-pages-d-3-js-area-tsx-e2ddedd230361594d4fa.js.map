{"version":3,"file":"component---src-pages-d-3-js-area-tsx-e2ddedd230361594d4fa.js","mappings":"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","sources":["webpack://demos/./node_modules/uuid/dist/esm-browser/rng.js","webpack://demos/./node_modules/uuid/dist/esm-browser/regex.js","webpack://demos/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://demos/./node_modules/uuid/dist/esm-browser/validate.js","webpack://demos/./node_modules/uuid/dist/esm-browser/v1.js","webpack://demos/./src/demos/area/config-types.ts","webpack://demos/./src/demos/area/ui-constants.ts","webpack://demos/./src/demos/area/area-config.ts","webpack://demos/./src/demos/area/sources/income-item-model.ts","webpack://demos/./src/demos/area/sources/income-config.ts","webpack://demos/./src/demos/area/sources/nobel-prizes-config.ts","webpack://demos/./src/demos/area/area-controls.ts","webpack://demos/./src/demos/area/chart/area-chart.module.css","webpack://demos/./src/demos/area/chart/voronoi-group.ts","webpack://demos/./src/demos/area/chart/area-chart.ts","webpack://demos/./src/demos/area/area.ts","webpack://demos/./src/pages/d3js/area.tsx","webpack://demos/./src/demos/area/area-page.module.css"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import { ChartConfig } from \"./chart/area-chart\"\n\nexport type ConfigResult<ConfigData> = {\n  config: ChartConfig<ConfigData>\n  onUpdateRandomValue: () => void\n}\n\nexport enum DataSource {\n  INCOME = \"income\",\n  NOBEL_PRIZES = \"nobel-prizes\",\n}\n","const CONTAINER_ID = \"chart\"\nconst DATA_SOURCE_SELECT_ID = \"data-source-select\"\nconst TOGGLE_BUTTON_ID = \"toggle-voronoi\"\nconst UPDATE_BUTTON_ID = \"update-voronoi\"\n\nconst VORONOI_ITEM = \"data-voronoi-item\"\nconst HAS_VORONOI_ATTR = \"data-has-voronoi\"\n\nexport {\n  CONTAINER_ID,\n  DATA_SOURCE_SELECT_ID,\n  HAS_VORONOI_ATTR,\n  TOGGLE_BUTTON_ID,\n  UPDATE_BUTTON_ID,\n  VORONOI_ITEM,\n}\n","import { getIncomeConfig } from \"./sources/income-config\"\nimport { IncomeItem } from \"./sources/income-item-model\"\nimport {\n  NobelPrizeItem,\n  getNobelPrizesConfig,\n} from \"./sources/nobel-prizes-config\"\n\nenum DataSource {\n  INCOME = \"income\",\n  NOBEL_PRIZES = \"nobel-prizes\",\n}\n\nconst dataSourceToName: Record<DataSource, string> = {\n  [DataSource.INCOME]: \"Income\",\n  [DataSource.NOBEL_PRIZES]: \"Nobel Prizes (external API)\",\n}\n\ntype AppState = {\n  source: DataSource\n}\n\ntype GenericItem = IncomeItem | NobelPrizeItem\n\nconst createChartConfig = async (appState: AppState) => {\n  const [incomeResult, nobelPrizesResult] = await Promise.all([\n    getIncomeConfig(),\n    getNobelPrizesConfig(),\n  ])\n\n  const getResult = (source?: DataSource) => {\n    switch (source ?? appState.source) {\n      case DataSource.NOBEL_PRIZES:\n        return nobelPrizesResult\n      case DataSource.INCOME:\n        return incomeResult\n\n      default:\n        throw new Error(\"Unknown source\")\n    }\n  }\n\n  const getConfig = (source?: DataSource) => getResult(source).config\n\n  return {\n    config: {\n      getAreaPoints: () => getConfig().getAreaPoints(),\n      getChartTitle: () => getConfig().getChartTitle(),\n      getChartTitleShort: () => getConfig().getChartTitleShort(),\n      getItemId: (nodeItem: GenericItem) =>\n        // @ts-expect-error\n        getConfig(nodeItem.source).getItemId(nodeItem),\n      getItemTitle: (nodeItem: GenericItem) =>\n        // @ts-expect-error\n        getConfig(nodeItem.source).getItemTitle(nodeItem),\n      getItemXValue: (nodeItem: GenericItem) =>\n        // @ts-expect-error\n        getConfig(nodeItem.source).getItemXValue(nodeItem),\n      getItemYValue: (nodeItem: GenericItem) =>\n        // @ts-expect-error\n        getConfig(nodeItem.source).getItemYValue(nodeItem),\n      getRootElId: () => getConfig().getRootElId(),\n      getXAxisFormat: () => getConfig().getXAxisFormat(),\n      getYAxisFormat: () => getConfig().getYAxisFormat(),\n    },\n    onUpdateRandomValue: () => getResult().onUpdateRandomValue(),\n    updateSource: (source: DataSource) => {\n      appState.source = source\n    },\n  }\n}\n\nexport {\n  createChartConfig,\n  AppState,\n  DataSource,\n  dataSourceToName,\n  GenericItem,\n}\n","import { csv } from \"d3\"\n\nimport { DataSource } from \"../config-types\"\n\ntype IncomeItemBase = {\n  percent: number\n  year: number\n}\n\ntype IncomeItemData = Omit<IncomeItemBase, \"percent\"> & {\n  percentage: number\n  pointIndex: number\n}\n\nclass IncomeItem {\n  public source: DataSource.INCOME\n  private readonly incomeItemData: IncomeItemData\n\n  private constructor(incomeItemData: IncomeItemData) {\n    this.source = DataSource.INCOME\n    this.incomeItemData = incomeItemData\n    this.incomeItemData.percentage = Number(this.incomeItemData.percentage)\n  }\n\n  public static async fetchAndCreateCollection(): Promise<IncomeItem[]> {\n    const response = (await (csv(\n      `${ROOT_PATH}data/d3js/area/data.csv`\n    ) as unknown)) as IncomeItemBase[]\n\n    const incomeItemsData = response.map((...[point, pointIndex]) => ({\n      ...point,\n      percentage: point.percent,\n      pointIndex,\n    }))\n\n    return incomeItemsData.map(\n      (incomeItemData) => new IncomeItem(incomeItemData)\n    )\n  }\n\n  public getYear() {\n    return this.incomeItemData.year\n  }\n\n  public changePercentage(percentageChange: number) {\n    const valueWithLowerBound = Math.max(\n      this.incomeItemData.percentage + percentageChange,\n      0\n    )\n    const newValue = Math.min(100, valueWithLowerBound)\n\n    this.incomeItemData.percentage = newValue\n  }\n\n  public getNormalizedValue() {\n    return this.incomeItemData.percentage / 100\n  }\n\n  public getId() {\n    return this.incomeItemData.pointIndex\n  }\n\n  public getSummary(): string {\n    const { incomeItemData } = this\n\n    return `Year: ${\n      incomeItemData.year\n    }, Percentage: ${incomeItemData.percentage.toFixed(2)}%`\n  }\n}\n\nexport { IncomeItem }\n","import { format } from \"d3\"\n\nimport { ChartConfig } from \"../chart/area-chart\"\nimport { ConfigResult } from \"../config-types\"\nimport { CONTAINER_ID } from \"../ui-constants\"\n\nimport { IncomeItem } from \"./income-item-model\"\n\ntype Config = ChartConfig<IncomeItem>\n\nconst getItemXValue: Config[\"getItemXValue\"] = (incomeItem) =>\n  incomeItem.getYear()\nconst getItemYValue: Config[\"getItemYValue\"] = (incomeItem) =>\n  incomeItem.getNormalizedValue()\nconst getItemId: Config[\"getItemId\"] = (incomeItem) =>\n  `${incomeItem.source}-${incomeItem.getId()}`\nconst getItemTitle: Config[\"getItemTitle\"] = (incomeItem: IncomeItem) =>\n  incomeItem.getSummary()\nconst chartTitle = \"Share of top decile [aka top 10%] in national income\"\nconst chartTitleShort = chartTitle.replace(\" [aka top 10%]\", \"\")\n\ntype IncomeResult = ConfigResult<IncomeItem>\n\nconst getIncomeConfig = async (): Promise<IncomeResult> => {\n  const dataPoints = await IncomeItem.fetchAndCreateCollection()\n\n  const config = {\n    getAreaPoints: () => dataPoints,\n    getChartTitle: () => chartTitle,\n    getChartTitleShort: () => chartTitleShort,\n    getItemId,\n    getItemTitle,\n    getItemXValue,\n    getItemYValue,\n    getRootElId: () => CONTAINER_ID,\n    getXAxisFormat: () => format(\".0f\"),\n    getXAxisLabel: () => \"\",\n    getYAxisFormat: () => format(\".0%\"),\n    getYAxisLabel: () => \"\",\n  }\n\n  const onUpdateRandomValue = () => {\n    Array.from({ length: 50 }).forEach(() => {\n      const randomIndex = Math.floor(Math.random() * dataPoints.length)\n      const randomChange = Math.random() * 10 * (Math.random() > 0.5 ? 1 : -1)\n\n      dataPoints[randomIndex].changePercentage(randomChange)\n    })\n  }\n\n  return {\n    config,\n    onUpdateRandomValue,\n  }\n}\n\nexport { getIncomeConfig }\n","import { format, json } from \"d3\"\n\nimport { ChartConfig } from \"../chart/area-chart\"\nimport { ConfigResult, DataSource } from \"../config-types\"\nimport { CONTAINER_ID } from \"../ui-constants\"\n\ntype NobelPrizeResponse = {\n  laureates: Array<{\n    birth?: { date: string }\n    id: string\n    nobelPrizes?: Array<{ awardYear: string }>\n  }>\n}\ntype NobelPrizeItem = {\n  birthYear: number\n  id: number\n  prizeYear: number\n  source: DataSource.NOBEL_PRIZES\n}\n\ntype Config = ChartConfig<NobelPrizeItem>\n\nconst getItemXValue: Config[\"getItemXValue\"] = (laureate) => laureate.birthYear\nconst getItemYValue: Config[\"getItemYValue\"] = (laureate) => laureate.prizeYear\nconst getItemId: Config[\"getItemId\"] = (laureate) =>\n  `${laureate.source}-${laureate.id}`\nconst getItemTitle: Config[\"getItemTitle\"] = () => \"nobel-prizes\"\nconst chartTitleShort = \"Nobel Prizes (subset)\"\nconst chartTitle = `${chartTitleShort} year of birth (x) vs. year of award (y)`\n\ntype NobelPrizesResult = ConfigResult<NobelPrizeItem>\n\nconst getNobelPrizesConfig = async (): Promise<NobelPrizesResult> => {\n  const initialData = (await json(\n    \"https://api.nobelprize.org/2.1/laureates?limit=100\"\n  )) as NobelPrizeResponse\n\n  const birthYears = new Set<number>()\n\n  const dataPoints: NobelPrizeItem[] = initialData.laureates\n    .filter((laureate) => laureate.birth && laureate.nobelPrizes)\n    .map((laureate) => {\n      if (!laureate.nobelPrizes || !laureate.birth) {\n        return null\n      }\n\n      const birthYear = parseInt(laureate.birth.date.split(\"-\")[0], 10)\n\n      if (birthYears.has(birthYear)) {\n        return null\n      }\n\n      birthYears.add(birthYear)\n\n      const newItem: NobelPrizeItem = {\n        birthYear,\n        id: Number(laureate.id),\n        prizeYear: Number(laureate.nobelPrizes[0].awardYear),\n        source: DataSource.NOBEL_PRIZES,\n      }\n\n      return newItem\n    })\n    .filter((laureate) => !!laureate) as NobelPrizeItem[]\n\n  dataPoints.sort(\n    (...[laureateA, laureateB]) => laureateA.birthYear - laureateB.birthYear\n  )\n\n  const config = {\n    getAreaPoints: () => dataPoints,\n    getChartTitle: () => chartTitle,\n    getChartTitleShort: () => chartTitleShort,\n    getItemId,\n    getItemTitle,\n    getItemXValue,\n    getItemYValue,\n    getRootElId: () => CONTAINER_ID,\n    getXAxisFormat: () => format(\".0f\"),\n    getYAxisFormat: () => format(\".0f\"),\n  }\n\n  const onUpdateRandomValue = () => {\n    Array.from({ length: 50 }).forEach(() => {\n      const randomIndex = Math.floor(Math.random() * dataPoints.length)\n      const randomChange = Math.random() * 10 * (Math.random() > 0.5 ? 1 : -1)\n\n      dataPoints[randomIndex].prizeYear =\n        dataPoints[randomIndex].prizeYear + randomChange\n    })\n  }\n\n  return Promise.resolve({\n    config,\n    onUpdateRandomValue,\n  })\n}\n\nexport { getNobelPrizesConfig, NobelPrizeItem }\n","import {\n  DATA_SOURCE_SELECT_ID,\n  TOGGLE_BUTTON_ID,\n  UPDATE_BUTTON_ID,\n} from \"./ui-constants\"\n\nconst setupChartControls = ({\n  onToggleVoronoiClick,\n  onUpdateRandomValue,\n  onUpdateSelect,\n  selectOptions,\n}: {\n  onToggleVoronoiClick: () => void\n  onUpdateRandomValue: () => void\n  onUpdateSelect: (newValue: string) => void\n  selectOptions: Array<{ inputValue: string; label: string }>\n}) => {\n  const dataSourceSelect = document.getElementById(\n    DATA_SOURCE_SELECT_ID\n  ) as HTMLSelectElement\n  const toggleButtonElement = document.getElementById(\n    TOGGLE_BUTTON_ID\n  ) as HTMLElement\n  const updateButtonElement = document.getElementById(\n    UPDATE_BUTTON_ID\n  ) as HTMLElement\n\n  selectOptions.forEach((...[selectOption, selectOptionIndex]) => {\n    const sourceOption = document.createElement(\"option\")\n\n    sourceOption.setAttribute(\"value\", selectOption.inputValue)\n\n    if (selectOptionIndex === 0) {\n      sourceOption.setAttribute(\"selected\", \"selected\")\n    }\n\n    sourceOption.innerHTML = selectOption.label\n\n    dataSourceSelect.appendChild(sourceOption)\n  })\n\n  dataSourceSelect.addEventListener(\"change\", () => {\n    onUpdateSelect(dataSourceSelect.value)\n  })\n\n  toggleButtonElement.addEventListener(\"click\", (clickEvent: MouseEvent) => {\n    clickEvent.preventDefault()\n\n    onToggleVoronoiClick()\n  })\n\n  updateButtonElement.addEventListener(\"click\", (clickEvent: MouseEvent) => {\n    clickEvent.preventDefault()\n\n    onUpdateRandomValue()\n  })\n}\n\nexport {\n  DATA_SOURCE_SELECT_ID,\n  TOGGLE_BUTTON_ID,\n  UPDATE_BUTTON_ID,\n  setupChartControls,\n}\n","// extracted by mini-css-extract-plugin\nexport var areaChart = \"area-chart-module--areaChart--8ccff\";\nexport var line = \"area-chart-module--line--571fe\";\nexport var area = \"area-chart-module--area--5af1c\";\nexport var axis = \"area-chart-module--axis--6cab9\";\nexport var chartTitle = \"area-chart-module--chartTitle--ca932\";\nexport var x = \"area-chart-module--x--5ced5\";\nexport var minor = \"area-chart-module--minor--8ab97\";\nexport var y = \"area-chart-module--y--c7cbb\";\nexport var voronoi = \"area-chart-module--voronoi--25398\";\nexport var showVoronoi = \"area-chart-module--showVoronoi--5bec7\";\nexport var point = \"area-chart-module--point--3acfa\";","import {\n  BaseType,\n  Selection,\n  color as colorD3,\n  scaleOrdinal,\n  schemePastel2,\n} from \"d3\"\nimport { Delaunay } from \"d3-delaunay\"\n\nimport { HAS_VORONOI_ATTR, VORONOI_ITEM } from \"../ui-constants\"\n\nimport * as styles from \"./area-chart.module.css\"\n\ntype RenderOpts<Point> = {\n  animationDuration: number\n  boundaries: [number, number, number, number]\n  className: string\n  clipPath: string\n  extractXScale: (point: Point) => number\n  extractYScale: (point: Point) => number\n  filter: string\n  getItemId: (point: Point) => string\n  getTitle: (point: Point) => string\n  mouseenter: (_: unknown, point: Point) => void\n  mouseleave: (_: unknown, point: Point) => void\n  points: Point[]\n}\n\nclass VoronoiGroup<Point> {\n  private readonly voronoiGroup: Selection<\n    SVGGElement,\n    unknown,\n    BaseType,\n    unknown\n  >\n\n  private readonly state = {\n    hasVoronoi: false,\n  }\n\n  public constructor(\n    parent: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  ) {\n    this.voronoiGroup = parent.append(\"g\")\n  }\n\n  public toggleVoronoi() {\n    this.state.hasVoronoi = !this.state.hasVoronoi\n    this.setVoronoi()\n  }\n\n  public render({\n    animationDuration,\n    boundaries,\n    className,\n    clipPath,\n    extractXScale,\n    extractYScale,\n    filter,\n    getItemId,\n    getTitle,\n    mouseenter,\n    mouseleave,\n    points,\n  }: RenderOpts<Point>) {\n    const { voronoiGroup } = this\n    const voronoiData = voronoiGroup\n      .selectAll<SVGPathElement, Point>(\"path\")\n      .data(points, (point) => getItemId(point))\n\n    voronoiData.enter().append(\"path\")\n    voronoiData.exit().remove()\n\n    const colorScale = scaleOrdinal<string, string>(schemePastel2)\n\n    const voronoi = Delaunay.from(points, extractXScale, extractYScale).voronoi(\n      boundaries\n    )\n\n    voronoiGroup\n      .attr(\"clip-path\", clipPath)\n      .attr(\"class\", styles.voronoi)\n      .selectAll<SVGPathElement, Point>(\"path\")\n      .attr(\"fill\", (point) => {\n        const itemId = getItemId(point)\n        const colorHex = colorScale(itemId)\n        const itemColor = colorD3(colorHex)!\n\n        itemColor.opacity = 0.2\n\n        return itemColor.formatRgb()\n      })\n      .on(\"mouseenter\", mouseenter)\n      .on(\"mouseleave\", mouseleave)\n      .attr(\"class\", className)\n      .attr(VORONOI_ITEM, (...[, itemIndex]) => itemIndex)\n      .attr(\"title\", getTitle)\n      .style(\"filter\", filter)\n      .transition()\n      .duration(animationDuration)\n      .attr(\"d\", (...[, pointIndex]) => voronoi.renderCell(pointIndex))\n\n    this.setVoronoi()\n  }\n\n  private setVoronoi() {\n    const {\n      state: { hasVoronoi },\n      voronoiGroup,\n    } = this\n    const currentClass = voronoiGroup.attr(\"class\")\n    const { showVoronoi } = styles\n\n    const currentClassWithoutVoronoi = currentClass\n      .replace(showVoronoi, \"\")\n      .trim()\n\n    const newClass = hasVoronoi\n      ? `${currentClassWithoutVoronoi} ${showVoronoi}`\n      : currentClassWithoutVoronoi\n\n    voronoiGroup.attr(\"class\", newClass)\n\n    voronoiGroup.attr(HAS_VORONOI_ATTR, hasVoronoi)\n  }\n}\n\nexport { VoronoiGroup }\n","import {\n  BaseType,\n  Selection,\n  area as areaD3,\n  axisBottom,\n  axisLeft,\n  line as lineD3,\n  max,\n  min,\n  scaleLinear,\n  scaleQuantize,\n  select,\n} from \"d3\"\nimport $ from \"jquery\"\nimport \"jquery-ui/themes/base/all.css\"\nimport { v1 as uuidv1 } from \"uuid\"\n\nimport * as styles from \"./area-chart.module.css\"\nimport { VoronoiGroup } from \"./voronoi-group\"\n\nif (typeof window !== \"undefined\") {\n  require(\"jquery-ui/ui/widgets/tooltip\")\n}\n\nconst filterBlackOpacity = ({\n  deviation,\n  id,\n  slope,\n  svg,\n}: {\n  deviation: number\n  id: string\n  slope: number\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>\n}) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\ntype ChartConfig<AreaPoint> = {\n  getAreaPoints: () => AreaPoint[]\n  getChartTitle: () => string\n  getChartTitleShort: () => string\n  getItemId: (areaPoint: AreaPoint) => string\n  getItemTitle: (areaPoint: AreaPoint) => string\n  getItemXValue: (areaPoint: AreaPoint) => number\n  getItemYValue: (areaPoint: AreaPoint) => number\n  getRootElId: () => string\n  getXAxisFormat: () => (record: number | { valueOf: () => number }) => string\n  getYAxisFormat: () => (record: number | { valueOf: () => number }) => string\n}\n\ninterface BaseChart {\n  refresh: () => void\n  tearDown: () => void\n  toggleVoronoi: () => void\n}\n\ntype CommonSelection<El extends BaseType> = Selection<\n  El,\n  unknown,\n  HTMLElement,\n  unknown\n>\n\ntype ChartElements<AreaPoint> = Readonly<{\n  areaSel: CommonSelection<SVGPathElement>\n  backgroundBands: CommonSelection<SVGGElement>\n  chartTitleSel: CommonSelection<SVGTextElement>\n  clipRect: CommonSelection<SVGRectElement>\n  clipTopRect: CommonSelection<SVGRectElement>\n  lineSel: CommonSelection<SVGPathElement>\n  svg: CommonSelection<SVGSVGElement>\n  svgG: CommonSelection<SVGGElement>\n  voronoiGroup: VoronoiGroup<AreaPoint>\n  xAxisSel: CommonSelection<SVGGElement>\n  yAxisSel: CommonSelection<SVGGElement>\n}>\n\nclass AreaChart<AreaPoint> implements BaseChart {\n  private readonly config: ChartConfig<AreaPoint>\n  private readonly svgOpacityFilter: string\n  private readonly elements: ChartElements<AreaPoint>\n\n  private constructor(chartConfig: ChartConfig<AreaPoint>) {\n    this.config = chartConfig\n\n    const rootElId = chartConfig.getRootElId()\n\n    const svg = select(`#${rootElId}`).append(\"svg\")\n    const svgG = svg.append(\"g\").attr(\"class\", styles.areaChart)\n    const backgroundBands = svgG.append(\"g\")\n    const chartTitleSel = svgG\n      .append(\"text\")\n      .attr(\"class\", styles.chartTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-weight\", \"bold\")\n    const xAxisSel = svgG.append(\"g\")\n    const yAxisSel = svgG.append(\"g\")\n    const lineSel = svgG.append(\"path\")\n    const areaSel = svgG.append(\"path\")\n    const voronoiGroup = new VoronoiGroup<AreaPoint>(svgG)\n    const clipRect = svgG.append(\"clipPath\").attr(\"id\", \"clip\").append(\"rect\")\n\n    // This is exclusively for clipping the vertical axis\n    const clipTopRect = svgG\n      .append(\"clipPath\")\n      .attr(\"id\", \"clip-top\")\n      .append(\"rect\")\n\n    this.svgOpacityFilter = `opacity-${uuidv1().slice(0, 6)}`\n\n    filterBlackOpacity({\n      deviation: 2,\n      id: this.svgOpacityFilter,\n      slope: 0.5,\n      svg: svgG,\n    })\n\n    this.elements = {\n      areaSel,\n      backgroundBands,\n      chartTitleSel,\n      clipRect,\n      clipTopRect,\n      lineSel,\n      svg,\n      svgG,\n      voronoiGroup,\n      xAxisSel,\n      yAxisSel,\n    }\n\n    this.render(true)\n\n    window.addEventListener(\"resize\", this.handleWindowResize)\n  }\n\n  public static renderChart<AreaPoint>(chartConfig: ChartConfig<AreaPoint>) {\n    return new AreaChart(chartConfig)\n  }\n\n  public refresh(cancelAnimation?: boolean) {\n    this.render(!!cancelAnimation)\n  }\n\n  public tearDown() {\n    window.removeEventListener(\"resize\", this.handleWindowResize)\n  }\n\n  public toggleVoronoi() {\n    this.elements.voronoiGroup.toggleVoronoi()\n  }\n\n  private render(cancelAnimation: boolean) {\n    const rootElId = this.config.getRootElId()\n    const { width } = (\n      document.getElementById(rootElId) as HTMLElement\n    ).getBoundingClientRect()\n    const isSmallDevice = width < 500\n    const animationDuration = cancelAnimation || isSmallDevice ? 0 : 1000\n\n    const margin = {\n      bottom: 50,\n      left: isSmallDevice ? 50 : 70,\n      right: isSmallDevice ? 10 : 50,\n      top: 50,\n    }\n\n    const innerWidth = width - margin.left - margin.right\n    const height = 400 - margin.top - margin.bottom\n\n    const { config: chartConfig } = this\n\n    const areaPoints = chartConfig.getAreaPoints()\n    const tooltipItemClass = `tooltip-item-${uuidv1().slice(0, 6)}`\n    const pointClassPrefix = `point-${uuidv1().slice(0, 6)}-`\n\n    const titleYOffset = -15\n    const axisTickSize = 10\n\n    const {\n      elements: {\n        areaSel,\n        backgroundBands,\n        chartTitleSel,\n        clipRect,\n        clipTopRect,\n        lineSel,\n        svg,\n        svgG,\n        voronoiGroup,\n        xAxisSel,\n        yAxisSel,\n      },\n    } = this\n\n    svg\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .attr(\"width\", innerWidth + margin.left + margin.right)\n\n    svgG.attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    chartTitleSel\n      .attr(\n        \"transform\",\n        `translate(${width / 2 - margin.left},${titleYOffset})`\n      )\n      .text(() =>\n        isSmallDevice\n          ? chartConfig.getChartTitleShort()\n          : chartConfig.getChartTitle()\n      )\n\n    const xMax = max(areaPoints, chartConfig.getItemXValue) as number\n    const xMin = min(areaPoints, chartConfig.getItemXValue) as number\n\n    const yMax = max(areaPoints, chartConfig.getItemYValue) as number\n    const yMin = min(areaPoints, chartConfig.getItemYValue) as number\n\n    const xScale = scaleLinear().domain([xMin, xMax]).range([0, innerWidth])\n    const yScale = scaleLinear()\n      .domain([yMax + 0.05, yMin - 0.05])\n      .range([0, height])\n\n    const extractXScale = (areaPoint: AreaPoint) =>\n      xScale(chartConfig.getItemXValue(areaPoint))\n\n    const extractYScale = (areaPoint: AreaPoint) =>\n      yScale(chartConfig.getItemYValue(areaPoint))\n\n    const getSmallDeviceTicksScale = () =>\n      scaleQuantize()\n        .domain([0, 500])\n        .range(Array.from({ length: 6 }).map((...[, rangeIndex]) => rangeIndex))\n\n    const ticks = isSmallDevice ? getSmallDeviceTicksScale()(width) : null\n\n    const xAxisFormat = this.config.getXAxisFormat()\n    const yAxisFormat = this.config.getYAxisFormat()\n\n    const xAxis = axisBottom(xScale).tickFormat(xAxisFormat).ticks(ticks)\n    const yAxis = axisLeft(yScale)\n      .tickFormat(yAxisFormat)\n      .tickSize(axisTickSize)\n\n    xAxisSel\n      .attr(\"class\", `${styles.x} ${styles.axis}`)\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .attr(\"dy\", \"1.25em\")\n\n    yAxisSel\n      .attr(\"class\", `${styles.y} ${styles.axis}`)\n      .attr(\"clip-path\", \"url(#clip-top)\")\n      .transition()\n      .duration(animationDuration)\n      .call(yAxis)\n      .selectAll(\"text\")\n      .attr(\"dx\", \"-.25em\")\n\n    const area = areaD3<AreaPoint>()\n      .x(extractXScale)\n      .y0(height)\n      .y1(extractYScale)\n    const line = lineD3<AreaPoint>().x(extractXScale).y(extractYScale)\n\n    lineSel\n      .datum(areaPoints)\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"class\", styles.line)\n      .transition()\n      .duration(animationDuration)\n      .attr(\"d\", line)\n\n    clipRect.attr(\"height\", height).attr(\"width\", innerWidth)\n\n    clipTopRect\n      .attr(\"height\", height)\n      .attr(\"width\", innerWidth)\n      .attr(\"transform\", \"translate(-50,-5)\")\n\n    areaSel\n      .datum(areaPoints)\n      .attr(\"class\", styles.area)\n      .attr(\"clip-path\", \"url(#clip)\")\n      .transition()\n      .duration(animationDuration)\n      .attr(\"d\", area)\n\n    const mouseenter = (...[, areaPoint]: [unknown, AreaPoint]) => {\n      select(`.${pointClassPrefix}${chartConfig.getItemId(areaPoint)}`).style(\n        \"display\",\n        \"block\"\n      )\n    }\n\n    const mouseleave = (...[, areaPoint]: [unknown, AreaPoint]) => {\n      select(`.${pointClassPrefix}${chartConfig.getItemId(areaPoint)}`).style(\n        \"display\",\n        \"none\"\n      )\n    }\n\n    const bandsNumber = 10\n    const bandsData = Array.from({ length: bandsNumber }).map(\n      (...[, bandIndex]) => bandIndex\n    )\n    const bandHeight = height / bandsNumber\n\n    const bands = backgroundBands.selectAll(\"rect\").data(bandsData)\n\n    bands.enter().append(\"rect\")\n    bands.exit().remove()\n\n    backgroundBands\n      .selectAll<SVGRectElement, number>(\"rect\")\n      .attr(\"clip-path\", \"url(#clip)\")\n      .attr(\"x\", 0)\n      .attr(\"width\", innerWidth)\n      .attr(\"fill\", (...[, bandIndex]) =>\n        bandIndex % 2 ? \"#f7f7f7\" : \"#ffffff\"\n      )\n      .attr(\"class\", \"backgroundBands\")\n      .attr(\"height\", bandHeight)\n      .attr(\"y\", (band) => band * bandHeight)\n\n    const circleData = svgG.selectAll(\"circle\").data(areaPoints)\n\n    circleData.enter().append(\"circle\")\n    circleData.exit().remove()\n\n    svgG\n      .selectAll<SVGCircleElement, AreaPoint>(\"circle\")\n      .attr(\"r\", \"5px\")\n      .style(\"filter\", `url(#drop-shadow-${this.svgOpacityFilter})`)\n      .attr(\n        \"transform\",\n        (areaPoint: AreaPoint) =>\n          `translate(${extractXScale(areaPoint)},${extractYScale(areaPoint)})`\n      )\n      .attr(\n        \"class\",\n        (areaPoint) =>\n          `${\n            styles.point\n          } ${tooltipItemClass} ${pointClassPrefix}${chartConfig.getItemId(\n            areaPoint\n          )}`\n      )\n      .on(\"mouseenter\", mouseenter)\n      .on(\"mouseleave\", mouseleave)\n      .attr(\"title\", chartConfig.getItemTitle)\n\n    voronoiGroup.render({\n      animationDuration,\n      boundaries: [\n        -margin.left,\n        -margin.top,\n        innerWidth + margin.right,\n        height + margin.bottom,\n      ],\n      className: tooltipItemClass,\n      clipPath: \"url(#clip)\",\n      extractXScale,\n      extractYScale,\n      filter: `url(#drop-shadow-${this.svgOpacityFilter})`,\n      getItemId: chartConfig.getItemId,\n      getTitle: chartConfig.getItemTitle,\n      mouseenter,\n      mouseleave,\n      points: areaPoints,\n    })\n\n    $(`.${tooltipItemClass}`).tooltip({\n      track: true,\n    })\n  }\n\n  private readonly handleWindowResize = () => {\n    this.render(true)\n  }\n}\n\nexport { ChartConfig, AreaChart }\n","import {\n  AppState,\n  DataSource,\n  GenericItem,\n  createChartConfig,\n  dataSourceToName,\n} from \"./area-config\"\nimport {\n  DATA_SOURCE_SELECT_ID,\n  TOGGLE_BUTTON_ID,\n  UPDATE_BUTTON_ID,\n  setupChartControls,\n} from \"./area-controls\"\nimport { AreaChart } from \"./chart/area-chart\"\nimport { CONTAINER_ID } from \"./ui-constants\"\n\nconst main = async () => {\n  const appState: AppState = {\n    source: DataSource.INCOME,\n  }\n\n  const chartConfig = await createChartConfig(appState)\n\n  const areaChart = AreaChart.renderChart<GenericItem>(chartConfig.config)\n\n  setupChartControls({\n    onToggleVoronoiClick: () => {\n      areaChart.toggleVoronoi()\n    },\n    onUpdateRandomValue: () => {\n      chartConfig.onUpdateRandomValue()\n\n      areaChart.refresh()\n    },\n    onUpdateSelect: (newDataSource: string) => {\n      chartConfig.updateSource(newDataSource as DataSource)\n\n      areaChart.refresh(true)\n    },\n    selectOptions: Object.values(DataSource).map((dataSource) => ({\n      inputValue: dataSource,\n      label: dataSourceToName[dataSource],\n    })),\n  })\n}\n\nexport {\n  CONTAINER_ID,\n  DATA_SOURCE_SELECT_ID,\n  TOGGLE_BUTTON_ID,\n  UPDATE_BUTTON_ID,\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, {\n  CONTAINER_ID,\n  DATA_SOURCE_SELECT_ID,\n  TOGGLE_BUTTON_ID,\n  UPDATE_BUTTON_ID,\n} from \"@/demos/area/area\"\nimport * as styles from \"@/demos/area/area-page.module.css\"\n\nconst Area = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form className={styles.form}>\n      <select className=\"form-select\" id={DATA_SOURCE_SELECT_ID} />\n      <button className=\"btn btn-info\" id={TOGGLE_BUTTON_ID} type=\"button\">\n        Toggle Voronoi\n      </button>\n      <button className=\"btn btn-success\" id={UPDATE_BUTTON_ID} type=\"button\">\n        Update Random Values\n      </button>\n    </form>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Area\n","// extracted by mini-css-extract-plugin\nexport var form = \"area-page-module--form--1895c\";"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","DataSource","CONTAINER_ID","DATA_SOURCE_SELECT_ID","TOGGLE_BUTTON_ID","UPDATE_BUTTON_ID","IncomeItem","incomeItemData","this","source","INCOME","percentage","Number","fetchAndCreateCollection","csv","ROOT_PATH","response","incomeItemsData","map","point","pointIndex","percent","getYear","year","changePercentage","percentageChange","valueWithLowerBound","Math","max","newValue","min","getNormalizedValue","getId","getSummary","toFixed","getItemXValue","incomeItem","getItemYValue","getItemId","getItemTitle","chartTitle","chartTitleShort","replace","getIncomeConfig","dataPoints","config","getAreaPoints","getChartTitle","getChartTitleShort","getRootElId","getXAxisFormat","format","getXAxisLabel","getYAxisFormat","getYAxisLabel","onUpdateRandomValue","from","forEach","randomIndex","floor","randomChange","laureate","birthYear","prizeYear","id","getNobelPrizesConfig","json","initialData","birthYears","Set","laureates","filter","birth","nobelPrizes","parseInt","date","split","has","add","awardYear","NOBEL_PRIZES","sort","laureateA","laureateB","Promise","resolve","dataSourceToName","createChartConfig","appState","all","incomeResult","nobelPrizesResult","getResult","getConfig","nodeItem","updateSource","setupChartControls","onToggleVoronoiClick","onUpdateSelect","selectOptions","dataSourceSelect","document","getElementById","toggleButtonElement","updateButtonElement","selectOption","selectOptionIndex","sourceOption","createElement","setAttribute","inputValue","innerHTML","label","appendChild","addEventListener","value","clickEvent","preventDefault","axis","VoronoiGroup","parent","state","hasVoronoi","voronoiGroup","append","toggleVoronoi","setVoronoi","render","animationDuration","boundaries","className","clipPath","extractXScale","extractYScale","getTitle","mouseenter","mouseleave","points","voronoiData","selectAll","data","enter","exit","remove","colorScale","scaleOrdinal","schemePastel2","voronoi","Delaunay","attr","itemId","colorHex","itemColor","colorD3","opacity","formatRgb","on","itemIndex","style","transition","duration","renderCell","showVoronoi","currentClassWithoutVoronoi","trim","newClass","window","require","AreaChart","chartConfig","handleWindowResize","rootElId","svg","select","svgG","backgroundBands","chartTitleSel","xAxisSel","yAxisSel","lineSel","areaSel","clipRect","clipTopRect","svgOpacityFilter","uuidv1","slice","deviation","slope","feMerge","filterBlackOpacity","elements","renderChart","refresh","cancelAnimation","tearDown","removeEventListener","width","getBoundingClientRect","isSmallDevice","margin","innerWidth","height","areaPoints","tooltipItemClass","pointClassPrefix","text","xMax","xMin","yMax","yMin","xScale","scaleLinear","domain","range","yScale","areaPoint","ticks","scaleQuantize","rangeIndex","getSmallDeviceTicksScale","xAxisFormat","yAxisFormat","xAxis","axisBottom","tickFormat","yAxis","axisLeft","tickSize","styles","call","area","areaD3","x","y0","y1","line","lineD3","y","datum","bandsData","bandIndex","bandHeight","bands","band","circleData","$","tooltip","track","main","areaChart","newDataSource","Object","values","dataSource","pageContext","type"],"sourceRoot":""}