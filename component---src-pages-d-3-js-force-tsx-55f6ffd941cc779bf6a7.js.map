{"version":3,"file":"component---src-pages-d-3-js-force-tsx-55f6ffd941cc779bf6a7.js","mappings":"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","sources":["webpack://demos/./src/demos/force/force.module.css","webpack://demos/./src/demos/force/force.ts","webpack://demos/./src/pages/d3js/force.tsx","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://demos/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var forceChart = \"force-module--forceChart--oSa8u\";\nexport var linkCurved = \"force-module--linkCurved--373Bv\";\nexport var node = \"force-module--node--1g0MJ\";","import {\n  drag,\n  forceCenter,\n  forceLink as forceLinkD3,\n  forceManyBody,\n  forceSimulation,\n  json,\n  select,\n} from \"d3\"\n\nimport * as styles from \"./force.module.css\"\n\nconst CONTAINER_ID = \"chart\"\n\ntype Node = {\n  fx: number | null\n  fy: number | null\n  index: number // eslint-disable-line id-denylist\n  name: string\n  x: number\n  y: number\n}\n\ntype Link = {\n  id: number\n  name: string\n  source: Node\n  target: Node\n}\n\ntype ForceData = {\n  links: Link[]\n  nodes: Node[]\n}\n\ntype CustomDragEvent = DragEvent & { active: boolean }\n\nconst fetchForceData = async (): Promise<ForceData> => {\n  const [nodes, links] = await Promise.all([\n    json(`${ROOT_PATH}data/d3js/force/nodes.json`),\n    json(`${ROOT_PATH}data/d3js/force/links.json`),\n  ])\n\n  return {\n    links,\n    nodes,\n  } as ForceData\n}\n\nconst settings = {\n  circleRadius: 5,\n  defaultTextOpacity: 0.5,\n  strength: -40,\n  textDY: 5,\n}\n\nconst height = 600\n\ntype RenderGraph = (chartConfig: {\n  forceData: ForceData\n  rootElId: string\n}) => void\n\nconst renderGraph: RenderGraph = ({ forceData, rootElId }) => {\n  const { links, nodes } = forceData\n\n  const rootEl = document.getElementById(rootElId) as HTMLElement\n\n  rootEl.classList.add(styles.forceChart)\n\n  const { width } = rootEl.getBoundingClientRect()\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n\n  const ticked = () => {\n    /* eslint-disable @typescript-eslint/no-use-before-define */\n    updateLinks()\n    updateNodes()\n    /* eslint-enable @typescript-eslint/no-use-before-define */\n  }\n\n  const simulation = forceSimulation(nodes)\n    .force(\"charge\", forceManyBody().strength(settings.strength))\n    .force(\"center\", forceCenter(width / 2, height / 2))\n    .force(\"link\", forceLinkD3().links(links))\n    .on(\"tick\", ticked)\n\n  const dragstarted = (...[dragEvent, forceNode]: [CustomDragEvent, Node]) => {\n    if (!dragEvent.active) {\n      simulation.alphaTarget(0.3).restart()\n    }\n\n    forceNode.fx = forceNode.x\n    forceNode.fy = forceNode.y\n  }\n\n  const dragged = (...[dragEvent, forceNode]: [CustomDragEvent, Node]) => {\n    forceNode.fx = dragEvent.x\n    forceNode.fy = dragEvent.y\n  }\n\n  const dragended = (...[dragEvent, forceNode]: [CustomDragEvent, Node]) => {\n    if (!dragEvent.active) {\n      simulation.alphaTarget(0)\n    }\n\n    forceNode.fx = null\n    forceNode.fy = null\n  }\n\n  const updateLinks = () => {\n    const linksEls = svg\n      .selectAll<SVGPathElement, ForceData[\"links\"]>(`.${styles.linkCurved}`)\n      .data(links)\n\n    linksEls\n      .enter()\n      .append<SVGPathElement>(\"path\")\n      .merge(linksEls)\n      .attr(\"d\", (forceLink) => {\n        const dx = forceLink.target.x - forceLink.source.x\n        const dy = forceLink.target.y - forceLink.source.y\n        const dr = Math.sqrt(dx * dx + dy * dy) * 1.3\n\n        return `M${forceLink.source.x},${forceLink.source.y}A${dr},${dr} 0 0,1 ${forceLink.target.x},${forceLink.target.y}`\n      })\n      .attr(\"class\", styles.linkCurved)\n\n    linksEls.exit().remove()\n  }\n\n  const updateNodes = () => {\n    const nodesEls = svg\n      .selectAll<SVGCircleElement, ForceData[\"nodes\"]>(\"circle\")\n      .data(nodes)\n    const textsEls = svg\n      .selectAll<SVGTextElement, ForceData[\"nodes\"]>(\"text\")\n      .data(nodes)\n\n    nodesEls\n      .enter()\n      .append(\"circle\")\n      .merge(nodesEls)\n      .attr(\"cx\", (forceNode) => forceNode.x)\n      .attr(\"cy\", (forceNode) => forceNode.y)\n      .attr(\"r\", () => settings.circleRadius)\n      .attr(\"fill\", \"black\")\n      .each(function setupMouseHandlers() {\n        select<SVGCircleElement, ForceData[\"nodes\"][0]>(this)\n          .on(\"mouseover\", (...[, forceNode]) => {\n            select(`#node-text-${forceNode.index}`).style(\"opacity\", 1)\n          })\n          .on(\"mouseleave\", (...[, forceNode]) => {\n            select(`#node-text-${forceNode.index}`).style(\n              \"opacity\",\n              settings.defaultTextOpacity\n            )\n          })\n      })\n      .call(\n        drag<SVGCircleElement, ForceData[\"nodes\"][0]>()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended)\n      )\n\n    textsEls\n      .enter()\n      .append(\"text\")\n      .merge(textsEls)\n      .text((forceNode) => forceNode.name)\n      .attr(\"x\", (forceNode) => forceNode.x)\n      .attr(\"y\", (forceNode) => forceNode.y)\n      .attr(\"dy\", () => settings.textDY)\n      .attr(\"id\", (forceNode) => `node-text-${forceNode.index}`)\n      .style(\"opacity\", settings.defaultTextOpacity)\n\n    nodesEls.exit().remove()\n    textsEls.exit().remove()\n  }\n\n  svg\n    .selectAll(`.${styles.linkCurved}`)\n    .data(links)\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"class\", styles.linkCurved)\n    .attr(\"marker-end\", \"url(#end)\")\n    .attr(\"id\", (...[, forceLinkIndex]) => `link-${forceLinkIndex}`)\n}\n\nconst main = async () => {\n  const forceData = await fetchForceData()\n\n  renderGraph({\n    forceData,\n    rootElId: CONTAINER_ID,\n  })\n}\n\nexport { CONTAINER_ID }\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main, { CONTAINER_ID } from \"@/demos/force/force\"\n\nconst Force = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <div id={CONTAINER_ID} />\n  </Demo>\n)\n\nexport default Force\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["linkCurved","CONTAINER_ID","fetchForceData","Promise","all","json","ROOT_PATH","nodes","links","settings","renderGraph","forceData","rootElId","rootEl","document","getElementById","classList","add","width","getBoundingClientRect","svg","select","append","attr","simulation","forceSimulation","force","forceManyBody","strength","forceCenter","height","forceLinkD3","on","updateLinks","updateNodes","dragstarted","dragEvent","forceNode","active","alphaTarget","restart","fx","x","fy","y","dragged","dragended","linksEls","selectAll","styles","data","enter","merge","forceLink","dx","target","source","dy","dr","Math","sqrt","exit","remove","nodesEls","textsEls","each","this","index","style","call","drag","text","name","forceLinkIndex","main","pageContext","id","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}