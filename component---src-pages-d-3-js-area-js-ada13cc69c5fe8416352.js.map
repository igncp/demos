{"version":3,"sources":["webpack://demos/./src/demos/area/area.js","webpack://demos/./src/pages/d3js/area.js"],"names":["d3","csv","_error","data","margin","bottom","left","right","top","width","$","innerWidth","height","svg","d3utils","middleTitle","filterBlackOpacity","xMax","max","d","year","xMin","min","yMax","percent","yMin","xScale","scale","linear","range","domain","yScale","xAxis","axis","tickFormat","format","innerTickSize","yAxis","orient","append","attr","String","call","selectAll","dy","dx","area","interpolate","x","y0","y1","line","y","datum","class","id","voronoi","geom","point","clipExtent","enter","_d","i","style","filter","index","join","on","select","text","demoInfo","pageContext","main","scripts","className"],"mappings":"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","file":"component---src-pages-d-3-js-area-js-ada13cc69c5fe8416352.js","sourcesContent":["const main = () => {\n  d3.csv(\"/data/d3js/area/data.csv\", (_error, data) => {\n    const margin = {\n      bottom: 50,\n      left: 70,\n      right: 50,\n      top: 50,\n    }\n    const width = $(\"#chart\").innerWidth() - margin.left - margin.right\n    const height = 400 - margin.top - margin.bottom\n\n    const svg = d3utils.svg(\"#chart\", width, height, margin)\n\n    d3utils.middleTitle(\n      svg,\n      width,\n      \"Share of top decile [aka top 10%] in national income\"\n    )\n    d3utils.filterBlackOpacity(\"points\", svg, 2, 0.5)\n\n    const xMax = d3.max(data, (d) => d.year)\n    const xMin = d3.min(data, (d) => d.year)\n    const yMax = d3.max(data, (d) => d.percent / 100)\n    const yMin = d3.min(data, (d) => d.percent / 100)\n\n    const xScale = d3.scale.linear().range([0, width]).domain([xMin, xMax])\n    const yScale = d3.scale\n      .linear()\n      .range([0, height])\n      .domain([yMax + 0.05, yMin - 0.05])\n\n    const xAxis = d3.svg\n      .axis()\n      .scale(xScale)\n      .tickFormat(d3.format(\".\"))\n      .innerTickSize(-height)\n    const yAxis = d3.svg\n      .axis()\n      .scale(yScale)\n      .tickFormat(d3.format(\"%\"))\n      .innerTickSize(-width)\n      .orient(\"left\")\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", `translate(0,${String(height)})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .attr({ dy: \"1.25em\" })\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .selectAll(\"text\")\n      .attr({ dx: \"-.25em\" })\n\n    const area = d3.svg\n      .area()\n      .interpolate(\"monotone\")\n      .x((d) => xScale(d.year))\n      .y0(height)\n      .y1((d) => yScale(d.percent / 100))\n\n    const line = d3.svg\n      .line()\n      .x((d) => xScale(d.year))\n      .y((d) => yScale(d.percent / 100))\n\n    svg\n      .append(\"path\")\n      .datum(data)\n      .attr({ class: \"line\", \"clip-path\": \"url(#clip)\", d: line })\n\n    svg.append(\"clipPath\").attr({ id: \"clip\" }).append(\"rect\").attr({\n      height,\n      width,\n    })\n\n    svg\n      .append(\"path\")\n      .datum(data)\n      .attr({ class: \"area\", \"clip-path\": \"url(#clip)\", d: area })\n\n    const voronoi = d3.geom\n      .voronoi()\n      .x((point) => xScale(point.year))\n      .y((point) => yScale(point.percent / 100))\n      .clipExtent([\n        [-margin.left, -margin.top],\n        [width + margin.right, height + margin.bottom],\n      ])\n\n    const mouseover = (d) =>\n      d3.select(`.point-${d.index}`).style(\"display\", \"block\")\n\n    const mouseleave = (d) =>\n      d3.select(`.point-${d.index}`).style(\"display\", \"none\")\n\n    svg\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\n        \"transform\",\n        (d) => `translate(${String(xScale(d.year))},${yScale(d.percent / 100)})`\n      )\n      .attr(\"r\", \"5px\")\n      .attr(\"class\", (_d, i) => `point point-${i}`)\n      .style({ filter: \"url(#drop-shadow-points)\" })\n\n    const voronoiGroup = svg.append(\"g\").attr(\"class\", \"voronoi\")\n\n    voronoiGroup\n      .selectAll(\"path\")\n      .data(voronoi(data))\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", (d, i) => {\n        d.index = i\n\n        return `M${d.join(\"L\")}Z`\n      })\n      .on(\"mouseover\", mouseover)\n      .on(\"mouseleave\", mouseleave)\n      .attr(\"class\", \"voronoi-area\")\n      .append(\"title\")\n      .text((d) => `Year: ${d.point.year}: ` + `Percent: ${d.point.percent}%`)\n  })\n}\n\nexport default main\n","import React from \"react\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/area/area\"\n\nimport \"@/demos/area/area.styl\"\n\nconst Area = ({ pageContext: { demoInfo } }) => (\n  <Demo\n    demoInfo={demoInfo}\n    main={main}\n    scripts={[\"/vendors/d3/d3.min.js\", \"/js/d3js-utils.js\"]}\n  >\n    <div className=\"area-chart\" id=\"chart\" />\n  </Demo>\n)\n\nexport default Area\n"],"sourceRoot":""}