{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/partition/partition.ts","webpack://demos/./src/pages/d3js/partition.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","easeFn","easeBounce","addTitle","selector","append","text","node","data","name","getNodeText","Math","abs","x0","x1","parent","length","getDataHierarchy","rootData","partitionType","radius","dataHierarchySize","hierarchy","sum","d","size","dataHierarchyCount","partitionD3","PI","partition","descendants","extractTweenObj","depth","y0","y1","getInterpolatorFn","initialData","finalNode","nodeIndex","initialNode","interpolateFn","interpolate","t","transitientState","renderChart","rootElId","width","document","getElementById","getBoundingClientRect","min","colorScale","scaleOrdinal","schemePastel2","color","children","svg","select","attr","addFilter","arc","arcD3","startAngle","endAngle","innerRadius","outerRadius","textsTransform","rotation","centroid","join","renderDescendants","usedDescendants","pathSel","selectAll","pathInitialData","path","exit","remove","pathEnter","enter","_d","i","style","_node","index","transition","duration","ease","attrTween","textsSel","textsInitialData","texts","textsEnter","forEach","set","on","updatePartition","newPartitionType","newDescendants","filter","feMerge","json","ROOT_PATH","formEl","getCurrentSelectedRadio","Array","from","elements","reduce","acc","el","checked","addEventListener","pageContext","main","id","type","defaultChecked"],"mappings":"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","file":"component---src-pages-d-3-js-partition-tsx-4a2857246d5c4e739652.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import {\n  HierarchyRectangularNode,\n  Selection,\n  arc as arcD3,\n  easeBounce,\n  hierarchy,\n  interpolate,\n  json,\n  partition as partitionD3,\n  scaleOrdinal,\n  schemePastel2,\n  select,\n} from \"d3\"\n\ntype DataNode = {\n  children: DataNode[]\n  name: string\n  size?: number\n}\n\ntype HierarchyRectNode = HierarchyRectangularNode<DataNode>\ntype PartitionType = \"count\" | \"size\"\n\nconst fetchData = () =>\n  (json(\n    `${ROOT_PATH}data/d3js/partition/flare.json`\n  ) as unknown) as Promise<DataNode>\n\nconst height = 700\nconst overColor = \"#de7c03\"\nconst transitionDuration = 2000\nconst easeFn = easeBounce\n\nconst addTitle = <A extends SVGElement, B extends SVGElement>(\n  selector: Selection<A, HierarchyRectNode, B, unknown>\n) => {\n  selector.append(\"title\").text((node) => `${node.data.name}\\n${node.value}`)\n}\n\nconst getNodeText = (node: HierarchyRectNode) => {\n  const dx = Math.abs(node.x0 - node.x1)\n\n  if (dx > 0.07 && node.parent && node.data.name.length < 10) {\n    return node.data.name\n  }\n\n  return \"\"\n}\n\ntype RenderChart = (o: {\n  partitionType: PartitionType\n  rootData: DataNode\n  rootElId: string\n}) => {\n  updatePartition: (partitionType: PartitionType) => void\n}\n\nconst getDataHierarchy = (\n  rootData: DataNode,\n  partitionType: PartitionType,\n  radius: number\n) => {\n  const dataHierarchySize = hierarchy(rootData).sum(\n    (d: DataNode) => d.size ?? 0\n  )\n  const dataHierarchyCount = hierarchy(rootData).sum(() => 1)\n  const partition = partitionD3<DataNode>().size([2 * Math.PI, radius])\n\n  const hierarchyResult = partition(\n    partitionType === \"size\" ? dataHierarchySize : dataHierarchyCount\n  )\n\n  return hierarchyResult.descendants()\n}\n\nconst extractTweenObj = (node: HierarchyRectNode) => ({\n  depth: node.depth,\n  x0: node.x0,\n  x1: node.x1,\n  y0: node.y0,\n  y1: node.y1,\n})\n\nconst getInterpolatorFn = (\n  initialData: HierarchyRectNode[],\n  fn: (n: HierarchyRectNode) => string | null\n) => (finalNode: HierarchyRectNode, nodeIndex: number) => {\n  const { [nodeIndex]: initialNode } = initialData\n\n  const interpolateFn = interpolate(\n    extractTweenObj(initialNode),\n    extractTweenObj(finalNode)\n  )\n\n  return (t: number) => {\n    const transitientState = interpolateFn(t)\n\n    return fn(transitientState as HierarchyRectNode)!\n  }\n}\n\nconst renderChart: RenderChart = ({ partitionType, rootData, rootElId }) => {\n  const { width } = (document.getElementById(\n    \"chart\"\n  ) as HTMLElement).getBoundingClientRect()\n  const radius = Math.min(width, height) / 2\n  const colorScale = scaleOrdinal(schemePastel2)\n\n  const color = (node: HierarchyRectNode) =>\n    node.children\n      ? colorScale(node.data.name)\n      : colorScale(node.parent!.data.name)\n\n  const svg = select(`#${rootElId}`)\n    .append(\"svg\")\n    .text(\"\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${width / 2},${height * 0.52})`)\n\n  addFilter(svg)\n\n  const descendants = getDataHierarchy(rootData, partitionType, radius)\n\n  const arc = arcD3<HierarchyRectNode>()\n    .startAngle((node) => node.x0)\n    .endAngle((node) => node.x1)\n    .innerRadius((node) => node.y0)\n    .outerRadius((node) => node.y1)\n\n  const textsTransform = (node: HierarchyRectNode) => {\n    if (!node.depth) {\n      return \"\"\n    }\n\n    const centroid = arc.centroid(node)\n    const rotationDeg = (() => {\n      const rotation =\n        90 + ((node.x0 + (node.x1 - node.x0) / 2) * 180) / Math.PI\n\n      return rotation > 90 && rotation < 270 ? rotation - 180 : rotation\n    })()\n\n    return [\n      `rotate(${rotationDeg},${centroid[0]},${centroid[1]})`,\n      `translate(${centroid[0]},${centroid[1]})`,\n    ].join(\" \")\n  }\n\n  const renderDescendants = (\n    usedDescendants: Array<HierarchyRectangularNode<DataNode>>\n  ) => {\n    const pathSel = svg.selectAll<SVGPathElement, HierarchyRectNode>(\"path\")\n    const pathInitialData = pathSel.data()\n    const path = pathSel.data(usedDescendants)\n\n    path.exit().remove()\n\n    const pathEnter = path\n      .enter()\n      .append(\"path\")\n      .attr(\"display\", (node) => (node.depth ? null : \"none\"))\n      .attr(\"data-index\", (_d, i: number) => i)\n      .style(\"stroke\", \"#000\")\n      .style(\"stroke-width\", \"0.5px\")\n      .style(\"stroke-dasharray\", \"1,3\")\n      .style(\"fill\", color)\n      .style(\"filter\", (_node, index) =>\n        // not adding drop-shadow in all to avoid too much saturation\n        index % 3 !== 0 ? \"url(#drop-shadow)\" : null\n      )\n      .attr(\"d\", arc)\n\n    path\n      .transition()\n      .duration(transitionDuration)\n      .ease(easeFn)\n      .attrTween(\"d\", getInterpolatorFn(pathInitialData, arc))\n\n    const textsSel = svg.selectAll<SVGTextElement, HierarchyRectNode>(\"text\")\n    const textsInitialData = textsSel.data()\n    const texts = textsSel.data(usedDescendants)\n\n    texts.exit().remove()\n\n    const textsEnter = texts\n      .enter()\n      .append(\"text\")\n      .text(getNodeText)\n      .attr(\"transform\", textsTransform)\n      .attr(\"data-index\", (_d, index) => index)\n      .style(\"fill\", \"#333\")\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font\", \"bold 12px Arial\")\n      .style(\"cursor\", \"default\")\n      .attr(\"transform\", textsTransform)\n\n    texts\n      .transition()\n      .duration(transitionDuration)\n      .ease(easeFn)\n      .attrTween(\n        \"transform\",\n        getInterpolatorFn(textsInitialData, textsTransform)\n      )\n\n    const updatedGroups = [pathEnter, textsEnter]\n\n    updatedGroups.forEach((set) => {\n      set.on(\"mouseover\", function () {\n        const index = select(this).attr(\"data-index\")\n\n        select(`path[data-index=\"${index}\"]`).style(\"fill\", overColor)\n        select(`text[data-index=\"${index}\"]`).style(\"fill\", \"white\")\n      })\n\n      set.on(\"mouseout\", function () {\n        const index = select(this).attr(\"data-index\")\n\n        select<SVGPathElement, HierarchyRectNode>(\n          `path[data-index=\"${index}\"]`\n        ).style(\"fill\", color)\n        select(`text[data-index=\"${index}\"]`).style(\"fill\", \"#000\")\n      })\n    })\n\n    addTitle(path)\n    addTitle(texts)\n  }\n\n  renderDescendants(descendants)\n\n  return {\n    updatePartition: (newPartitionType: PartitionType) => {\n      const newDescendants = getDataHierarchy(\n        rootData,\n        newPartitionType,\n        radius\n      )\n\n      renderDescendants(newDescendants)\n    },\n  }\n}\n\nconst main = async () => {\n  const rootData = await fetchData()\n\n  const formEl = document.getElementById(\"type-form\") as HTMLFormElement\n\n  const getCurrentSelectedRadio = (): PartitionType => {\n    const result = Array.from(\n      (formEl.elements as unknown) as HTMLInputElement[]\n    ).reduce((acc, el: HTMLInputElement) => {\n      if (acc) return acc\n\n      if (el.checked) return el.value\n\n      return \"\"\n    }, \"\")\n\n    return result as PartitionType\n  }\n\n  formEl.addEventListener(\"change\", () => {\n    const newPartitionType = getCurrentSelectedRadio()\n\n    updatePartition(newPartitionType)\n  })\n\n  const partitionType = getCurrentSelectedRadio()\n\n  const { updatePartition } = renderChart({\n    partitionType,\n    rootData,\n    rootElId: \"chart\",\n  })\n}\n\nconst addFilter = (\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs.append(\"filter\")\n\n  filter.attr(\"id\", \"drop-shadow\")\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", 9)\n  filter.append(\"feOffset\").attr(\"dx\", 2).attr(\"dy\", 5)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", \".5\")\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/partition/partition\"\n\nconst Partition = ({ pageContext }: DemoPageProps) => (\n  <Demo main={main} pageContext={pageContext}>\n    <form id=\"type-form\">\n      <label>\n        <input name=\"mode\" type=\"radio\" value=\"size\" /> Size\n      </label>\n      <label>\n        <input defaultChecked name=\"mode\" type=\"radio\" value=\"count\" /> Count\n      </label>\n    </form>\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Partition\n"],"sourceRoot":""}