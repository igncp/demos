{"version":3,"sources":["webpack://demos/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://demos/./src/demos/timeline/timeline.module.css","webpack://demos/./src/demos/timeline/timeline.ts","webpack://demos/./src/pages/d3js/timeline.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","bandMinMaxLabel","interval","instant","margin","height","parseDate","dateString","date","timeParse","format","year","isNaN","Number","replace","Date","setUTCFullYear","toYear","getUTCFullYear","toString","Math","abs","Timeline","rootElId","rootEl","document","getElementById","classList","add","outerWidth","getBoundingClientRect","width","bandY","bandNum","dataContent","components","bands","svg","select","text","append","attr","style","filterBlackOpacity","on","selectAll","styles","chart","data","timelineItems","today","tracks","items","compareAscending","item1","item2","result","start","end","compareDescending","forEach","item","getTime","sortOrder","timeOrder","sort","track","i","_i","_ref","length","calculateTracks","nTracks","minDate","minD3","d","maxDate","maxD3","xAxis","bandName","band","axis","axisBottom","xScale","tickSize","tickFormat","y","h","redraw","call","parts","push","createTooltip","$","tooltip","sizeFactor","id","x","w","trackOffset","trackHeight","min","itemHeight","instantWidth","scaleTime","domain","range","yScale","yearsScale","g","enter","label","intervals","instants","addActions","actions","action","maxLetters","substr","part","labels","labelTop","labelDefs","_min","max","bandLabels","brush","targetNames","brushX","selectionScale","e","newDomain","selection","component","deviation","slope","filter","feMerge","csv","ROOT_PATH","dataset","pageContext","links","main","scripts"],"mappings":"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","file":"component---src-pages-d-3-js-timeline-tsx-388f62318181acfa9945.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport var timelineChart = \"timeline-module--timelineChart--3qWN8\";\nexport var axis = \"timeline-module--axis--2Kd6K\";\nexport var band = \"timeline-module--band--1PQ93\";\nexport var bandLabel = \"timeline-module--bandLabel--EEttd\";\nexport var bandMinMaxLabel = \"timeline-module--bandMinMaxLabel--3JvSy\";\nexport var bandMidLabel = \"timeline-module--bandMidLabel--3TTUb\";\nexport var chart = \"timeline-module--chart--2GJYA\";\nexport var interval = \"timeline-module--interval--3ADVQ\";\nexport var instant = \"timeline-module--instant--1w4uA\";\nexport var instantLabel = \"timeline-module--instantLabel--2X-Rh\";\nexport var intervalLabel = \"timeline-module--intervalLabel--eyMIb\";","import {\n  Selection,\n  axisBottom,\n  brushX,\n  csv,\n  max as maxD3,\n  min as minD3,\n  scaleTime,\n  select,\n  selectAll,\n  timeParse,\n} from \"d3\"\n\nimport * as styles from \"./timeline.module.css\"\n\ntype DataItem = {\n  end: Date\n  instant: boolean\n  label: string\n  start: Date\n  track: number\n}\n\ntype RedrawComp = {\n  redraw?: () => void\n}\n\nconst fetchData = () =>\n  (csv(`${ROOT_PATH}data/d3js/timeline/data.csv`) as unknown) as Promise<\n    DataItem[]\n  >\n\nconst margin = {\n  bottom: 0,\n  left: 20,\n  right: 20,\n  top: 60,\n}\n\ntype Action = [string, () => void]\n\ntype Band = RedrawComp & {\n  addActions: (a: Action[]) => void\n  g: Selection<SVGGElement, unknown, HTMLElement, unknown>\n  h: number\n  id: string\n  instantWidth: number\n  itemHeight: number\n  parts: RedrawComp[]\n  trackHeight: number\n  trackOffset: number\n  w: number\n  x: number\n  xScale: any\n  y: number\n  yScale: any\n  yearsScale: any\n}\n\nconst outerHeight = 700\nconst height = outerHeight - margin.top - margin.bottom\nconst bandGap = 25\n\nconst parseDate = function (dateString: string) {\n  const format = timeParse(\"%Y-%m-%d\")\n\n  let date = format(dateString)\n\n  if (date !== null) {\n    return date\n  }\n\n  const year = isNaN(Number(dateString))\n    ? -dateString.replace(/[^0-9]/g, \"\")\n    : +dateString\n\n  if (year < 0 || year > 99) {\n    date = new Date(year, 6, 1)\n  } else if (year === 0) {\n    date = new Date(-1, 6, 1)\n  } else {\n    date = new Date(year, 6, 1)\n    date.setUTCFullYear(year)\n  }\n\n  return date\n}\n\nconst toYear = (date: Date) => {\n  const bcString = \" BC\"\n  const year = date.getUTCFullYear()\n\n  if (year >= 0) {\n    return year.toString()\n  }\n\n  return bcString + Math.abs(year)\n}\n\nclass Timeline {\n  private readonly chart: Selection<SVGGElement, unknown, HTMLElement, unknown>\n\n  private bandY: number\n  private bandNum: number\n  private dataContent: {\n    items?: DataItem[]\n    maxDate?: Date\n    minDate?: Date\n    nTracks?: number\n  }\n\n  private readonly components: RedrawComp[]\n  private bands: { [k: string]: Band }\n  private readonly width: number\n\n  public constructor({ rootElId }: { rootElId: string }) {\n    const rootEl = document.getElementById(rootElId) as HTMLElement\n\n    rootEl.classList.add(styles.timelineChart)\n\n    const { width: outerWidth } = rootEl.getBoundingClientRect()\n\n    this.width = outerWidth - margin.left - margin.right\n\n    this.bandY = 0\n    this.bandNum = 0\n\n    this.dataContent = {}\n    this.components = []\n    this.bands = {}\n\n    const svg = select(`#${rootElId}`)\n      .text(\"\")\n      .append(\"svg\")\n      .attr(\"height\", outerHeight + margin.top + margin.bottom)\n      .attr(\"width\", outerWidth + margin.left + margin.right)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", \"chart-title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(${outerWidth / 2},-20)`)\n      .text(\"Philosophers through History\")\n      .style(\"font-weight\", \"bold\")\n\n    filterBlackOpacity(\"intervals\", svg, 1, 0.2)\n\n    svg\n      .append(\"clipPath\")\n      .attr(\"id\", \"chart-area\")\n      .append(\"rect\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", height)\n\n    svg.on(\"mouseup\", () =>\n      selectAll(`.${styles.interval} rect`).style(\n        \"filter\",\n        \"url(#drop-shadow-intervals)\"\n      )\n    )\n\n    this.chart = svg\n      .append(\"g\")\n      .attr(\"class\", styles.chart)\n      .attr(\"clip-path\", \"url(#chart-area)\")\n  }\n\n  public data(timelineItems: DataItem[]) {\n    const today = new Date()\n\n    const tracks: Date[] = []\n\n    const yearMillis = 31622400000\n    const instantOffset = 100 * yearMillis\n\n    this.dataContent.items = timelineItems\n\n    const compareAscending = function (item1: any, item2: any) {\n      let result = item1.start - item2.start\n\n      if (result < 0) {\n        return -1\n      }\n\n      if (result > 0) {\n        return 1\n      }\n\n      result = item2.end - item1.end\n\n      if (result < 0) {\n        return -1\n      }\n\n      if (result > 0) {\n        return 1\n      }\n\n      return 0\n    }\n\n    const compareDescending = function (item1: any, item2: any) {\n      let result = item1.start - item2.start\n\n      if (result < 0) {\n        return 1\n      }\n\n      if (result > 0) {\n        return -1\n      }\n\n      result = item2.end - item1.end\n\n      if (result < 0) {\n        return 1\n      }\n\n      if (result > 0) {\n        return -1\n      }\n\n      return 0\n    }\n\n    const calculateTracks = (items: any, sortOrder: any, timeOrder: any) => {\n      sortOrder = sortOrder || \"descending\"\n      timeOrder = timeOrder || \"backward\"\n\n      const sortBackward = () =>\n        items.forEach((item: any) => {\n          let track = 0\n\n          for (\n            let i = 0, _i = 0, { length: _ref } = tracks;\n            0 <= _ref ? _i < _ref : _i > _ref;\n            i = 0 <= _ref ? ++_i : --_i\n          ) {\n            if (item.end < tracks[i]) {\n              break\n            }\n\n            track++\n          }\n\n          item.track = track\n\n          tracks[track] = item.start\n        })\n\n      const sortForward = function () {\n        return items.forEach((item: any) => {\n          let track = 0\n\n          for (\n            let i = 0, _i = 0, { length: _ref } = tracks;\n            0 <= _ref ? _i < _ref : _i > _ref;\n            i = 0 <= _ref ? ++_i : --_i\n          ) {\n            if (item.start > tracks[i]) {\n              break\n            }\n\n            track++\n          }\n\n          item.track = track\n\n          tracks[track] = item.end\n        })\n      }\n\n      if (sortOrder === \"ascending\") {\n        this.dataContent.items!.sort(compareAscending)\n      } else {\n        this.dataContent.items!.sort(compareDescending)\n      }\n\n      if (timeOrder === \"forward\") {\n        return sortForward()\n      }\n\n      return sortBackward()\n    }\n\n    this.dataContent.items.forEach((item: any) => {\n      item.start = parseDate(item.start)\n\n      if (item.end === \"\") {\n        item.end = new Date(item.start.getTime() + instantOffset)\n        item.instant = true\n      } else {\n        item.end = parseDate(item.end)\n        item.instant = false\n      }\n\n      if (item.end > today) {\n        item.end = today\n      }\n    })\n\n    calculateTracks(this.dataContent.items, \"descending\", \"backward\")\n\n    this.dataContent.nTracks = tracks.length\n    this.dataContent.minDate = minD3(this.dataContent.items, (d) => d.start)\n    this.dataContent.maxDate = maxD3(\n      this.dataContent.items,\n      (d: DataItem) => d.end\n    )\n\n    return this\n  }\n\n  public xAxis(bandName: string) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n\n    const axis = axisBottom<Date>(band.xScale)\n      .tickSize(6)\n      .tickFormat((d: Date) => toYear(d))\n\n    const xAxis: RedrawComp &\n      Selection<SVGGElement, unknown, HTMLElement, unknown> = this.chart\n      .append(\"g\")\n      .attr(\"class\", styles.axis)\n      .attr(\"transform\", `translate(0,${band.y + band.h})`)\n\n    xAxis.redraw = function () {\n      xAxis.call(axis)\n    }\n\n    band.parts.push(xAxis)\n    this.components.push(xAxis)\n\n    return this\n  }\n\n  public createTooltip() {\n    $(`.part.${styles.instant}, .part.${styles.interval}`).tooltip({\n      track: true,\n    })\n\n    return this\n  }\n\n  public band(bandName: string, sizeFactor: number) {\n    const band: Partial<Band> = {}\n\n    band.id = `band${this.bandNum}`\n    band.x = 0\n    band.y = this.bandY\n    band.w = this.width\n    band.h = height * (sizeFactor || 1)\n    band.trackOffset = 0\n    band.trackHeight = Math.min(\n      (band.h - band.trackOffset) / this.dataContent.nTracks!,\n      20\n    )\n    band.itemHeight = band.trackHeight * 0.7\n    band.parts = []\n    band.instantWidth = 100\n    band.xScale = scaleTime()\n      .domain([this.dataContent.minDate!, this.dataContent.maxDate!])\n      .range([0, band.w])\n\n    band.yScale = (track: any) => band.trackOffset! + track * band.trackHeight!\n\n    band.yearsScale =\n      this.dataContent.maxDate!.getUTCFullYear() -\n      this.dataContent.minDate!.getUTCFullYear()\n    band.g = this.chart\n      .append(\"g\")\n      .attr(\"id\", band.id)\n      .attr(\"transform\", `translate(0,${band.y})`)\n    band.g\n      .append(\"rect\")\n      .attr(\"class\", styles.band)\n      .attr(\"width\", band.w)\n      .attr(\"height\", band.h)\n\n    const items = band.g\n      .selectAll(\"g\")\n      .data<DataItem>(this.dataContent.items!)\n      .enter()\n      .append<SVGSVGElement>(\"svg\")\n      .attr(\"y\", (d: DataItem) => band.yScale(d.track))\n      .attr(\"height\", band.itemHeight)\n      .attr(\"title\", (d: DataItem) => {\n        if (d.instant) {\n          return `${d.label}: ${toYear(d.start)}`\n        }\n\n        return `${d.label}: ${toYear(d.start)} - ${toYear(d.end)}`\n      })\n      .attr(\"class\", (d: DataItem) => {\n        if (d.instant) {\n          return `part ${styles.instant}`\n        }\n\n        return `part ${styles.interval}`\n      })\n\n    const intervals = select(`#band${this.bandNum}`).selectAll(\n      `.${styles.interval}`\n    )\n\n    intervals\n      .append(\"rect\")\n      .attr(\"height\", \"80%\")\n      .attr(\"width\", \"80%\")\n      .attr(\"x\", \"1px\")\n      .attr(\"y\", \".5px\")\n      .style(\"filter\", \"url(#drop-shadow-intervals)\")\n\n    intervals\n      .append(\"text\")\n      .attr(\"class\", styles.intervalLabel)\n      .attr(\"x\", 3)\n      .attr(\"y\", 9.5)\n\n    const instants = select(`#band${this.bandNum}`).selectAll(\n      `.${styles.instant}`\n    )\n\n    instants\n      .append(\"circle\")\n      .attr(\"cx\", band.itemHeight / 2)\n      .attr(\"cy\", band.itemHeight / 2)\n      .attr(\"r\", 5)\n    instants\n      .append(\"text\")\n      .attr(\"class\", styles.instantLabel)\n      .attr(\"x\", 15)\n      .attr(\"y\", 10)\n\n    band.addActions = function (actions: Action[]) {\n      actions.forEach((action) => items.on(action[0], action[1]))\n    }\n\n    band.redraw = function () {\n      items\n        .attr(\"x\", (d: DataItem) => band.xScale(d.start))\n        .attr(\n          \"width\",\n          (d: DataItem) => band.xScale(d.end) - band.xScale(d.start)\n        )\n        .select(\"text\")\n        .text((d: DataItem) => {\n          const scale = band.xScale(d.end) - band.xScale(d.start)\n          const maxLetters = scale / 9\n\n          if (d.label.length > maxLetters) {\n            return `${d.label.substr(0, maxLetters - 1)}..`\n          }\n\n          return d.label\n        })\n\n      band.parts!.forEach((part) => part.redraw!())\n    }\n\n    this.bands[bandName] = band as Band\n    this.components.push(band)\n    this.bandY += band.h + bandGap\n    this.bandNum += 1\n\n    return this\n  }\n\n  public labels(bandName: string) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n    const labelWidth = 46\n    const labelHeight = 20\n    const labelTop = band.y + band.h - 10\n    const yText = 15\n    const labelDefs = [\n      [\n        \"start\",\n        styles.bandMinMaxLabel,\n        0,\n        4,\n        function (min: Date) {\n          return toYear(min)\n        },\n        \"Start of the selected interval\",\n        band.x + 30,\n        labelTop,\n      ],\n      [\n        \"end\",\n        styles.bandMinMaxLabel,\n        band.w - labelWidth,\n        band.w - 4,\n        function (_min: Date, max: Date) {\n          return toYear(max)\n        },\n        \"End of the selected interval\",\n        band.x + band.w - 152,\n        labelTop,\n      ],\n      [\n        \"middle\",\n        styles.bandMidLabel,\n        (band.w - labelWidth) / 2,\n        band.w / 2,\n        function (min: Date, max: Date) {\n          const result = max.getUTCFullYear() - min.getUTCFullYear()\n\n          return result\n        },\n        \"Length of the selected interval\",\n        band.x + band.w / 2 - 75,\n        labelTop,\n      ],\n    ]\n    const bandLabels = this.chart\n      .append(\"g\")\n      .attr(\"id\", `${bandName}Labels`)\n      .attr(\"transform\", `translate(0,${band.y + band.h + 1})`)\n      .selectAll(`#${bandName}Labels`)\n      .data(labelDefs)\n      .enter()\n      .append(\"g\")\n\n    bandLabels\n      .append(\"rect\")\n      .attr(\"class\", styles.bandLabel)\n      .attr(\"x\", (d: any) => d[2])\n      .attr(\"width\", labelWidth)\n      .attr(\"height\", labelHeight)\n      .style(\"opacity\", 1)\n\n    const labels: RedrawComp &\n      Selection<SVGTextElement, any, SVGGElement, unknown> = bandLabels\n      .append(\"text\")\n      .attr(\"class\", (d: any) => d[1])\n      .attr(\"id\", (d: any) => d[0])\n      .attr(\"x\", (d: any) => d[3])\n      .attr(\"y\", yText)\n      .attr(\"text-anchor\", (d: any) => d[0])\n\n    labels.redraw = function () {\n      const min = band.xScale.domain()[0]\n      const max = band.xScale.domain()[1]\n\n      return labels.text((d: any) => d[4](min, max))\n    }\n\n    band.parts.push(labels)\n    this.components.push(labels)\n\n    return this\n  }\n\n  public brush(bandName: string, targetNames: string[]) {\n    const {\n      bands: { [bandName]: band },\n    } = this\n    const brush = brushX()\n\n    const selectionScale = scaleTime()\n      .domain([0, 1000])\n      .range([\n        this.dataContent.minDate!.getTime(),\n        this.dataContent.maxDate!.getTime(),\n      ])\n\n    brush.on(\"brush\", (e) => {\n      let newDomain = band.xScale.domain()\n\n      if (e.selection) {\n        newDomain = [\n          selectionScale(e.selection[0]),\n          selectionScale(e.selection[1]),\n        ]\n      }\n\n      selectAll(`.${styles.interval} rect`).style(\"filter\", \"none\")\n\n      targetNames.forEach((d: any) => {\n        this.bands[d].xScale.domain(newDomain)\n\n        this.bands[d].redraw!()\n      })\n    })\n\n    const xBrush = band.g\n      .append(\"svg\")\n      .attr(\"class\", `x`)\n      .call(brush as any)\n\n    xBrush\n      .selectAll(\"rect\")\n      .attr(\"y\", 1)\n      .attr(\"height\", band.h - 1)\n\n    return this\n  }\n\n  public redraw() {\n    this.components.forEach((component: RedrawComp) => component.redraw!())\n\n    return this\n  }\n}\n\nconst filterBlackOpacity = (\n  id: string,\n  svg: Selection<SVGGElement, unknown, HTMLElement, unknown>,\n  deviation: number,\n  slope: number\n) => {\n  const defs = svg.append(\"defs\")\n  const filter = defs\n    .append(\"filter\")\n    .attr(\"height\", \"500%\")\n    .attr(\"id\", `drop-shadow-${id}`)\n    .attr(\"width\", \"500%\")\n    .attr(\"x\", \"-200%\")\n    .attr(\"y\", \"-200%\")\n\n  filter\n    .append(\"feGaussianBlur\")\n    .attr(\"in\", \"SourceAlpha\")\n    .attr(\"stdDeviation\", deviation)\n\n  filter.append(\"feOffset\").attr(\"dx\", 1).attr(\"dy\", 1)\n  filter\n    .append(\"feComponentTransfer\")\n    .append(\"feFuncA\")\n    .attr(\"slope\", slope)\n    .attr(\"type\", \"linear\")\n\n  const feMerge = filter.append(\"feMerge\")\n\n  feMerge.append(\"feMergeNode\")\n\n  feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\")\n}\n\nconst main = async () => {\n  const dataset = await fetchData()\n\n  new Timeline({ rootElId: \"chart\" })\n    .data(dataset)\n    .band(\"mainBand\", 0.82)\n    .band(\"naviBand\", 0.08)\n    .xAxis(\"mainBand\")\n    .xAxis(\"naviBand\")\n    .labels(\"mainBand\")\n    .labels(\"naviBand\")\n    .brush(\"naviBand\", [\"mainBand\"])\n    .redraw()\n    .createTooltip()\n}\n\nexport default main\n","import React from \"react\"\n\nimport { DemoPageProps } from \"@/common\"\n\nimport Demo from \"@/components/demo\"\n\nimport main from \"@/demos/timeline/timeline\"\n\nconst Timeline = ({ pageContext }: DemoPageProps) => (\n  <Demo\n    links={[\"/vendors/jquery-ui/themes/base/jquery-ui.min.css\"]}\n    main={main}\n    pageContext={pageContext}\n    scripts={[\"/vendors/jquery-ui/jquery-ui.min.js\"]}\n  >\n    <div id=\"chart\" />\n  </Demo>\n)\n\nexport default Timeline\n"],"sourceRoot":""}